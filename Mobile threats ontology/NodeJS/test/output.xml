<?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE doc [
      <!ENTITY nbsp "&#160;">
    ]>
<doc>
    <h1 class="page-heading">
        Applications
    </h1>
    <p>
        <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
            Contribute
        </a>
    </p>
    <p>
        <b>
            <a href="#vulnerable-applications">
                Application Vulnerabilities
            </a>
            :
        </b>
        This subcategory contains threats relating to discrete software vulnerabilities residing within mobile applications running atop the mobile operating system. Note: Some vulnerabilities may be specific to a particular mobile OS,
    while others may be generally applicable.
    </p>
    <p>
        <b>
            <a href="#malicious-priv-applications">
                Malicious or privacy-invasive application
            </a>
            :
        </b>
        This subcategory identifies mobile malware based threats, based in part off of Google's mobile classification taxonomy. There are no specific software vulnerabilities
    within this subcategory, and accordingly no CVEs are cited. Additional malware categories are included within subcategory.
    </p>
    <h2>
        Threat List
    </h2>
    <h3 id="vulnerable-applications">
        Application Vulnerabilities
    </h3>
    <ul class="threat-list">
        <li>
            <h1 id="eavesdropping-on-unencryted-app-traffic">
                Eavesdropping on Unencryted App Traffic
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Vulnerable Applications
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-0
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Transmission of app or device data unencrypted allows any attacker with access to the physical media channel (e.g. proximity to wireless radios) to intercept that data. Even if the data is not directly sensitive, it may in combination with other data, allow an attacker in infer sensitive information or conduct other attacks against the user or device (e.g. geo-physical tracking, social engineering, phishing, watering-hole attacks).
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable, See Exploit or CVE Examples
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Remote Code Execution as System User on Samsung Phones
                    <sup id="fnref:55" role="doc-noteref">
                        <a href="#fn:55" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
                <p>
                    Insecurity Cameras and Mobile Apps: Surveillance or Exposure?
                    <sup id="fnref:56" role="doc-noteref">
                        <a href="#fn:56" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
                <p>
                    Team Joch vs. Android
                    <sup id="fnref:57" role="doc-noteref">
                        <a href="#fn:57" class="footnote" rel="footnote">
                            3
                        </a>
                    </sup>
                </p>
                <p>
                    CBS App &amp; Mobility Website
                    <sup id="fnref:116" role="doc-noteref">
                        <a href="#fn:116" class="footnote" rel="footnote">
                            4
                        </a>
                    </sup>
                </p>
                <p>
                    The Fork
                    <sup id="fnref:117" role="doc-noteref">
                        <a href="#fn:117" class="footnote" rel="footnote">
                            5
                        </a>
                    </sup>
                </p>
                <p>
                    Card Crypt
                    <sup id="fnref:121" role="doc-noteref">
                        <a href="#fn:121" class="footnote" rel="footnote">
                            6
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4640">
                            CVE-2015-4640
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2412">
                            CVE-2017-2412
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    To use HTTPS for web servers that support both HTTP and HTTPS, prepend URLs entered into the browser location bar with ‘https://’.
                </p>
                <b>
                    Mobile App Developer
                </b>
                <p class="countermeasure">
                    Implement secure communications in apps. On iOS, use the App Transport Security feature. On Android, opt out of the use of Cleartext traffic.
                </p>
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Use app vetting tools/services that can detect the use of cleartext traffic in mobile apps before deployment within your organization.
                </p>
                <p class="countermeasure">
                    To protect the confidentiality of enterprise data against passive interception, particularly when mobile devices may be connected to public networks (e.g. coffee shop Wi-Fi), deploy mobile VPN technologies to encapsulate potentially clear-text network traffic with a layer of strong encryption.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:55" role="doc-endnote">
                        <p>
                            R. Welton, “Remote Code Execution as System User on Samsung Phones”, blog, 16 June 2015; www.nowsecure.com/blog/2015/06/16/remote-code-execution-as-system-user-on-samsung-phones/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:55" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:56" role="doc-endnote">
                        <p>
                            J. V. Dyke, “Insecurity Cameras and Mobile Apps: Surveillance or Exposure?”, blog, 6 Jan. 2016; www.nowsecure.com/blog/2016/01/06/insecurity-cameras-and-mobile-apps-surveillance-or-exposure/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:56" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:57" role="doc-endnote">
                        <p>
                            J. Oberheide and Z. Lanier, “Team Joch vs. Android”, presented at ShmooCon 2011, 28-30 Jan. 2011, slide 54; https://jon.oberheide.org/files/shmoo11-teamjoch.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:57" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:116" role="doc-endnote">
                        <p>
                            CBS App &amp; Mobility Website, Wandera Threat Advisory No. 192, Wandera, 23 Mar. 2016; www.wandera.com/resources/dl/TA_CBS.pdf [accessed 8/24/2016]&nbsp;
                            <a href="#fnref:116" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:117" role="doc-endnote">
                        <p>
                            The Fork, Wandera Threat Advisory No. 154, Wandera, 14 Jan. 2016; www.wandera.com/resources/dl/TA_The_Fork.pdf [accessed 8/24/2016]&nbsp;
                            <a href="#fnref:117" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:121" role="doc-endnote">
                        <p>
                            Card Crypt, Wandera Threat Advisory No. 142, Wandera, 9 Dec. 2015; www.wandera.com/resources/dl/TA_CardCrypt.pdf [accessed 8/24/2016]&nbsp;
                            <a href="#fnref:121" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="man-in-the-middle-attack-on-server-authentication">
                Man-in-the-middle Attack on Server Authentication
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Vulnerable Applications
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-1
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Apps that exchange information with a back-end server should strongly authenticate the server before attemtping to establish a secure connection. If the authentication mechanism used by the app is weak, such as not validating a server certificate, an attacker can readily impersonate the back-end server to the app and achieve a man-in-the-middle (MITM) attack. This would provide an attacker with unauthorized access to all unencrypted transmitted data, including modification of data-in-transit. A successful MITM greatly facilitates further attacks against the client app, the back-end server, and all parties of a compromised session.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Mobile Threat Protection: A Holistic Approach to Securing Mobile Data and Devices
                    <sup id="fnref:61" role="doc-noteref">
                        <a href="#fn:61" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Why Eve and Mallory Love Android: An Analysis of Android SSL (In)Security
                    <sup id="fnref:62" role="doc-noteref">
                        <a href="#fn:62" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
                <p>
                    SMV-HUNTER: Large Scale, Automated Detection of SSL/TLS Man-in-the-Middle Vulnerabilities in Android Apps
                    <sup id="fnref:63" role="doc-noteref">
                        <a href="#fn:63" class="footnote" rel="footnote">
                            3
                        </a>
                    </sup>
                </p>
                <p>
                    How We Discovered Thousands of Vulnerable Android Apps in One Day
                    <sup id="fnref:65" role="doc-noteref">
                        <a href="#fn:65" class="footnote" rel="footnote">
                            4
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-3664">
                            CVE-2016-3664
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-5618">
                            CVE-2014-5618
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Mobile App Developer
                </b>
                <p class="countermeasure">
                    Use fail-safe logic when establishing a connection to the back-end server; if server certificate validation fails, do not continue to negotiate a secure session or fall back to an unencrypted communication protocol, and warn the app user.
                </p>
                <p class="countermeasure">
                    On Android devices, use the Android Network Security Policy feature, Certificate Pinning.
                </p>
                <p class="countermeasure">
                    To reduce the impact of a successful MiTM attack on your application, consider the use of public key cryptography to protect sensitive data destined for back-end servers prior to transmission off the device.
                </p>
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    App vetting tools/services or pen testing to detect MiTM vulnerabilities in mobile apps.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:61" role="doc-endnote">
                        <p>
                            L. Neely, Mobile Threat Protection: A Holistic Approach to Securing Mobile Data and Devices, SANS Institute, 2016; www.sans.org/reading-room/whitepapers/analyst/mobile-threat-protection-holistic-approach-securing-mobile-data-devices-36715 [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:61" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:62" role="doc-endnote">
                        <p>
                            S. Fahl et al., “Why Eve and Mallory Love Android: An Analysis of Android SSL (In)Security”, in Proceedings of the 2012 ACM conference on Computer and Communications Security, 2012, pp. 50-61; http://dl.acm.org/citation.cfm?id=2382205 [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:62" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:63" role="doc-endnote">
                        <p>
                            D. Sounthiraraj et al., “SMV-HUNTER: Large Scale, Automated Detection of SSL/TLS Man-in-the-Middle Vulnerabilities in Android Apps”, in Proceedings of the 2014 Network and Distributed System Security Symposium, 2014; www.internetsociety.org/sites/default/files/10_3_1.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:63" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:65" role="doc-endnote">
                        <p>
                            J. Montelibano and W. Dormann, How We Discovered Thousands of Vulnerable Android Apps in 1 Day, presented at RSA Conference USA 2015, 19 Apr. 2015;  www.rsaconference.com/writable/presentations/file_upload/hta-t08-how-we-discovered-thousands-of-vulnerable-android-apps-in-1-day_final.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:65" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="sensitive-information-exposure">
                Sensitive Information Exposure
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Vulnerable Applications
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-2
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Mobile OS APIs allow apps to share data with other apps, either by exposing specific services to other apps (e.g. Android intents) or by storing it to locations accessible to other apps. Sensitive information stored in commonly-accessible files/locations (e.g. OS-managed contacts list) or openly accessible through intents may be read or potentially modified by apps untrusted by the developer, which may lead to a loss of confidentiality, integrity, or availability of that data.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable, See Exploit or CVE Examples
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Vulnerability in Skype for Android
                    <sup id="fnref:67" role="doc-noteref">
                        <a href="#fn:67" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
                <p>
                    World Writable Code Is Bad, MMMMKAY
                    <sup id="fnref:68" role="doc-noteref">
                        <a href="#fn:68" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
                <p>
                    LOOK-11-001 something
                    <sup id="fnref:69" role="doc-noteref">
                        <a href="#fn:69" class="footnote" rel="footnote">
                            3
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1717">
                            CVE-2011-1717
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Use app-vetting tools or services to identify insecure storage of sensitive data.
                </p>
                <p class="countermeasure">
                    Consider the use of devices that support Android 7.0 and later, which enables app-level encryption in addition to block-level encryption.
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Consider the use of devices that support Android 7.0 and later, which enables app-level encryption in addition to block-level encryption.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:67" role="doc-endnote">
                        <p>
                            J. Case, “Exclusive: Vulnerability In Skype For Android Is Exposing Your Name, Phone Number, Chat Logs, And A Lot More”, blog, 14 Apr. 2011; www.androidpolice.com/2011/04/14/exclusive-vulnerability-in-skype-for-android-is-exposing-your-name-phone-number-chat-logs-and-a-lot-more/# [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:67" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:68" role="doc-endnote">
                        <p>
                            J. V. Dyke, “World Writable Code Is Bad, MMMMKAY”, blog,  10 Aug. 2015; www.nowsecure.com/blog/2015/08/10/world-writable-code-is-bad-mmmmkay/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:68" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:69" role="doc-endnote">
                        <p>
                            “[Vulnerability Identifier]: LOOK-11-001, blog, 1 Feb. 2011; https://blog.lookout.com/look-11-001/ [accessed 8/25/2016]”&nbsp;
                            <a href="#fnref:69" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="sensitive-information-in-system-logs">
                Sensitive Information in System Logs
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Vulnerable Applications
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-3
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Mobile application developers may unintentionally expose sensitive information by storing it in system logs designed to troubleshoot problems. An example would be logging the username and password for a failed user-to-app authentication attempt. An attacker with access to the system log would gain unauthorized access to the information.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable, See Exploit or CVE Examples
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-2630">
                            CVE-2012-2630
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0647">
                            CVE-2014-0647
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Mobile App Developer
                </b>
                <p class="countermeasure">
                    Avoid logging sensitive data in an unencrypted state, even to files internal to the app, as these files may be exposed in backups or direct access to the device’s file system.
                </p>
                <p class="countermeasure">
                    Use the Compatibility Test Suite, which checks for the presence of potentially sensitive information in the system logs; See https://source.android.com/security/overview/implement.html.
                </p>
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Consider the use of devices that support Android 4.1 or later, in which apps can no longer access the system log (other than reading log entries added by the app itself).
                </p>
                <p class="countermeasure">
                    Use app-vetting tools or services to identify apps that store sensitive information in system logs or other unsecure storage locations.
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Consider the use of devices that support Android 4.1 or later, in which apps can no longer access the system log (other than reading log entries added by the app itself).
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
        </li>
        <li>
            <h1 id="need-to-use-a-known-vulnerable-app-or-device">
                Need to Use a Known Vulnerable App or Device
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Vulnerable Applications
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-4
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Organizations or individual users may develop and rely upon specific apps or devices to complete necessary work. Knowledge of a serious vulnerability affecting such an app or device increases the risk associated with using it to accomplish that work. However, the impact of being unable to complete the work as a result of abstaining from use of the app or device, may be unacceptable.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable, See Exploit or CVE Examples
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Stumping the Mobile Chipset
                    <sup id="fnref:70" role="doc-noteref">
                        <a href="#fn:70" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5340">
                            CVE-2016-5340
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-2059">
                            CVE-2016-2059
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-2503">
                            CVE-2016-2503
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-2504">
                            CVE-2016-2504
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use iOS and Android runtime permission features to remove risky permissions (e.g. GPS access, contact list access, etc.) from unsupported apps or apps with known vulnerabilities.
                </p>
                <p class="countermeasure">
                    Uninstall vulnerable apps from the device. Once a patched version is available for download, redownload and install the app.
                </p>
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Use iOS and Android runtime permission features to remove risky permissions (e.g. GPS access, contact list access, etc.) from unsupported apps or apps with known vulnerabilities.
                </p>
                <p class="countermeasure">
                    Use MAM solutions to detect vulnerable apps and prevent access to enterprise resources while the app is installed.
                </p>
                <p class="countermeasure">
                    Use MAM solutions to forcefully disable vulnerable apps until a patch is available and installed.
                </p>
                <p class="countermeasure">
                    Use MAM solutions to temporarily revoke access to sensitive device sensors or OS-provided services.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:70" role="doc-endnote">
                        <p>
                            A. Donenfeld, Stumping the Mobile Chipset, presented at DEFCON 24, 7 Aug. 2016; https://media.defcon.org/DEF CON 24/DEF CON 24 presentations/DEFCON-24-Adam-Donenfeld-Stumping-The-Mobile-Chipset.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:70" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="malicious-code-downloaded-via-malicious-url">
                Malicious Code Downloaded via Malicious URL
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Vulnerable Applications
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-5
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                A URL can refer to a broad spectrum of resource types, some of which can contain code that is executed by the process that requests it. The malicious code may automatically function in the target context, such as a script that is allowed to execute in a web browser, or it may require the presence of a vulnerability in the app that downloaded it that is exploited during an attempt to process the content, such as a buffer overflow attack.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Android Towelroot Exploit Used to Deliver Dogspectus Ransomware
                    <sup id="fnref:71" role="doc-noteref">
                        <a href="#fn:71" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
                <p>
                    JailbreakMe
                    <sup id="fnref:72" role="doc-noteref">
                        <a href="#fn:72" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-1797">
                            CVE-2010-1797
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-2973">
                            CVE-2010-2973
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    To reduce the potential for drive-by downloads or similar exploits, ensure the latest security updates for the mobile OS are installed.
                </p>
                <p class="countermeasure">
                    Use built-in browser features or third-party products to identify and avoid known malicious web pages.
                </p>
                <p class="countermeasure">
                    Use a proxy or VPN for all web traffic and identify and block connections to known malicious web pages.
                </p>
                <p class="countermeasure">
                    Educate enterprise users about safe browsing practices.
                </p>
                <p class="countermeasure">
                    Use anti-malware device agents to detect malicious applications inadvertently installed on the device.
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    To reduce the potential for drive-by downloads or similar exploits, ensure the latest security updates for the mobile OS are installed.
                </p>
                <p class="countermeasure">
                    Use built-in browser features or third-party products to identify and avoid known malicious web pages.
                </p>
                <p class="countermeasure">
                    Use anti-malware device agents to detect malicious applications inadvertently installed on the device.
                </p>
                <p class="countermeasure">
                    Regularly use Verify Apps feature to identify potentially harmful applications.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:71" role="doc-endnote">
                        <p>
                            A. Brandt, “Android Towelroot Exploit Used to Deliver Dogspectus Ransomware”, blog, 25 Apr. 2016; www.bluecoat.com/security-blog/2016-04-25/android-exploit-delivers-dogspectus-ransomware [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:71" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:72" role="doc-endnote">
                        <p>
                            JailbreakMe; https://jailbreakme.qoid.us [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:72" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="vulnerable-third-party-library">
                Vulnerable Third-Party Library
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Vulnerable Applications
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-6
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                A mobile app may not directly contain vulnerabilities in its code, but may make calls to a third-party library that does contain vulnerabilities that are exploitable by a remote attacker.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    A Pattern for Remote Code Execution using Arbitrary File Writes and MultiDex Applications
                    <sup id="fnref:73" role="doc-noteref">
                        <a href="#fn:73" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
                <p>
                    Unsafe Exposure Analysis of Mobile In-App Advertisements
                    <sup id="fnref:74" role="doc-noteref">
                        <a href="#fn:74" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Use app-vetting tools or services to identify apps that use vulnerable libraries.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:73" role="doc-endnote">
                        <p>
                            R. Welton, “A Pattern for Remote Code Execution using Arbitrary File Writes and MultiDex Applications”, blog, 15 June 2015; www.nowsecure.com/blog/2015/06/15/a-pattern-for-remote-code-execution-using-arbitrary-file-writes-and-multidex-applications/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:73" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:74" role="doc-endnote">
                        <p>
                            M. Grace et al., “Unsafe Exposure Analysis of Mobile In-App Advertisements”, in Proceedings of the Fifth ACM Conference on Security and Privacy in Wireless and Mobile Networks,2012, pp. 101-112; http://dl.acm.org/citation.cfm?id=2185464 [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:74" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="data-or-funcionality-exposed-to-untrusted-apps">
                Data or Funcionality Exposed to Untrusted Apps
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Vulnerable Applications
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-7
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Android apps can be designed to share data with other apps through a variety of mechanisms such as broadcast receivers, services, intents, and content providers. Some of these mechanisms permit the app developer to grant broader permissions to untrusted apps than intended. As a result, a malicious app may gain unauthorized access to sensitive functionality or data. The malicious app may further take advantage of the weak permission to exploit other vulnerabilities in the receiving app by sending it crafted input.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable, See Exploit or CVE Examples
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    eBay for Android Content Provider Injection Vulnerability
                    <sup id="fnref:75" role="doc-noteref">
                        <a href="#fn:75" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
                <p>
                    Smishing Vulnerability in Multiple Android Platforms
                    <sup id="fnref:76" role="doc-noteref">
                        <a href="#fn:76" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
                <p>
                    Android SMS Spoofer
                    <sup id="fnref:77" role="doc-noteref">
                        <a href="#fn:77" class="footnote" rel="footnote">
                            3
                        </a>
                    </sup>
                </p>
                <p>
                    Content provider permission bypass allows malicious application to access data
                    <sup id="fnref:78" role="doc-noteref">
                        <a href="#fn:78" class="footnote" rel="footnote">
                            4
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-2810">
                            CVE-2016-2810
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Use app-vetting tools or services to identify apps that expose functionality to untrusted apps.
                </p>
                <p class="countermeasure">
                    Use personal/enterprise app separation features (e.g. Android for Work or Samsung KNOX Workspace) so that vulnerabilities in an enterprise app cannot be exploited by a personal app or vice versa.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:75" role="doc-endnote">
                        <p>
                            S. Guerrero, “eBay for Android Content Provider Injection Vulnerability”, blog, 4 Oct. 2013.&nbsp;
                            <a href="#fnref:75" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:76" role="doc-endnote">
                        <p>
                            X. Jiang, “Smishing Vulnerability in Multiple Android Platforms (including Gingerbread, Ice Cream Sandwich, and Jelly Bean)”, 28 Nov. 2012; www.csc.ncsu.edu/faculty/jiang/smishing.html [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:76" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:77" role="doc-endnote">
                        <p>
                            T. Cannon, “Android SMS Spoofer”, GitHub repository, 14 Dec. 2012; https://github.com/thomascannon/android-sms-spoof [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:77" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:78" role="doc-endnote">
                        <p>
                            K. Okuyama, “Content provider permission bypass allows malicious application to access data”, Mozilla Foundation Security Advisory 2016-41, Mozilla Foundation, 26 Apr. 2016; www.mozilla.org/en-US/security/advisories/mfsa2016-41/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:78" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="webview-app-vulnerable-to-browser-based-attacks">
                WebView App Vulnerable to Browser-Based Attacks
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Vulnerable Applications
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-8
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                A mobile app that implement a WebView, which allows it to render and potentially perform actions available in a web page, may contain vulnerabilities to common browser-based attacks, such as cross-site request forgery, cross-site scripting, and injection of malicious dynamic content (e.g., JavaScript). Further, exploits delivered over web pages may allow remote exploitation of vulnerabilities in other app components, thereby gaining access to data or functionality outside the context of the vulnerable WebView.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable, See Exploit or CVE Examples
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    WebView addJavaScriptInterface Remote Code Execution
                    <sup id="fnref:79" role="doc-noteref">
                        <a href="#fn:79" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
                <p>
                    DRD13. Do not provide addJavaScriptInterface method access in a WebView which could contain untrusted content
                    <sup id="fnref:80" role="doc-noteref">
                        <a href="#fn:80" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
                <p>
                    Remote code execution on Android devices
                    <sup id="fnref:81" role="doc-noteref">
                        <a href="#fn:81" class="footnote" rel="footnote">
                            3
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0587">
                            CVE-2017-0587
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0588">
                            CVE-2017-0588
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0589">
                            CVE-2017-0589
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0590">
                            CVE-2017-0590
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0591">
                            CVE-2017-0591
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0592">
                            CVE-2017-0592
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Use app-vetting tools or services to identify vulnerable applications
                </p>
                <p class="countermeasure">
                    Use a proxy or VPN for connections to decrease the chance of success of a man-in-the-middle attack.
                </p>
                <b>
                    Mobile App Developer
                </b>
                <p class="countermeasure">
                    Always use https URLs for WebView content.
                </p>
                <p class="countermeasure">
                    Avoid enabling the WebView JavaScript bridge (with addJavascriptInterface) unless explicitly needed.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:79" role="doc-endnote">
                        <p>
                            “WebView addJavaScriptInterface Remote Code Execution”, 24 Sept. 2013; https://labs.mwrinfosecurity.com/blog/webview-addjavascriptinterface-remote-code-execution/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:79" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:80" role="doc-endnote">
                        <p>
                            F. Long, “DRD13. Do not provide addJavascriptInterface method access in a WebView which could contain untrusted content. (API level JELLY_BEAN or below)”, 8 Apr. 2015; www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=129859614 [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:80" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:81" role="doc-endnote">
                        <p>
                            T. Sutcliffe, “Remote code execution on Android devices”, blog, 31 July 2014; https://labs.bromium.com/2014/07/31/remote-code-execution-on-android-devices/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:81" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="compromised-backend-server">
                Compromised Backend Server
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Vulnerable Applications
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-9
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                If an app exchanges data with a compromised back-end server, it may be vulnerable to exploitation from what may be treated as a trusted system. This may provide an attacker with unauthorized access to sensitive user data or  remote control over app behavior or content.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable, See Exploit or CVE Examples
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-1581">
                            CVE-2015-1581
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Mobile App Developer
                </b>
                <p class="countermeasure">
                    Follow best practices for server security, for example as described in https://www.owasp.org/index.php/Mobile_Top_10_2014-M1
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
        </li>
        <li>
            <h1 id="poorly-implemented-cryptography">
                Poorly Implemented Cryptography
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Vulnerable Applications
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-10
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                While still supported by many systems, cryptographic algorithms and ciphers proven to be weak or broken should not be used to protect sensitive data. Weak algorithm/ciphers are those that have been deprecated following advancements in processing speeds and distributed processessing that have made brute-force attacks against them feasible. Broken algorithms, such as MD5, have known vulnerabilities an attacker can exploit to defeat one or more of its security properties. Similarly, the use of novel (e.g. home-grown) cryptographic algorithms should also be avoided. Novel algorithms may not have yet undergone sufficient scrutiny by the cryptologic community at large, and may possess flaws that if discovered, present an attacker with a path of lesser resistance to achieving unauthorized access to any data these cryptographic mechanisms were designed to protect.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    OWASP Mobile Top 10 2016
                    <sup id="fnref:9" role="doc-noteref">
                        <a href="#fn:9" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    FortiClient Multiple Vulnerabilities
                    <sup id="fnref:82" role="doc-noteref">
                        <a href="#fn:82" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-4896">
                            CVE-2017-4896
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Mobile App Developer
                </b>
                <p class="countermeasure">
                    Strictly avoid the use of hard-coded cryptographic keys in application source code.
                </p>
                <p class="countermeasure">
                    Explicitly overwrite variables containing cryptographic keys or other secrets following each use to prevent unauthorized disclosure of the secret if that memory location is subsequently accessed by untrusted code.
                </p>
                <p class="countermeasure">
                    Use each cryptographic key for a single purpose to limit the impact of key compromise.
                </p>
                <p class="countermeasure">
                    Strictly avoid the use of ‘broken’, weak, or novel algorithms (those that have not undergone extensive evaluation by the cryptographic community at large) to protect long-term secrets.
                </p>
                <p class="countermeasure">
                    Consider the use of cryptographic functions provided by the mobile operating system and where possible, leverage hardware-backed cryptographic and secure storage services.
                </p>
                <p class="countermeasure">
                    Additionally, application developers are strongly encouraged to familiarize themselves with best practices for cryptography and general key management, and to integrate that knowledge early in the application design process. See NIST SP 800-57 Part 1 Revision 4, Recommendation for Key Management, Part 1 General
                    <sup id="fnref:244" role="doc-noteref">
                        <a href="#fn:244" class="footnote" rel="footnote">
                            3
                        </a>
                    </sup>
                </p>
                <p class="countermeasure">
                    For Android developers, review guidance on the proper use of the Android Keystore System.
                    <sup id="fnref:245" role="doc-noteref">
                        <a href="#fn:245" class="footnote" rel="footnote">
                            4
                        </a>
                    </sup>
                </p>
                <p class="countermeasure">
                    For iOS developers, review guidance on the proper use of the iOS Keychain.
                    <sup id="fnref:246" role="doc-noteref">
                        <a href="#fn:246" class="footnote" rel="footnote">
                            5
                        </a>
                    </sup>
                </p>
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Use app vetting tools/services to detect the misuse of cryptography in mobile apps.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:9" role="doc-endnote">
                        <p>
                            Mobile Top 10 2016, Mar. 2016; www.owasp.org/index.php/Mobile_Top_10_2016-Top_10 [accessed 8/23/2016]&nbsp;
                            <a href="#fnref:9" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:82" role="doc-endnote">
                        <p>
                            D. Andzakovic, FortiClient Multiple Vulnerabilities, vulnerability disclosure, 29 Jan. 2015; www.security-assessment.com/files/documents/advisory/Fortinet_FortiClient_Multiple_Vulnerabilities.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:82" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:244" role="doc-endnote">
                        <p>
                            “Keychain Services Programming Guide”, Apple, 2016; https://developer.apple.com/library/content/documentation/Security/Conceptual/keychainServConcepts/01introduction/introduction.html [accessed 10/14/2016]&nbsp;
                            <a href="#fnref:244" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:245" role="doc-endnote">
                        <p>
                            “Android Keystore System”, https://developer.android.com/training/articles/keystore.html [accessed 10/14/2016]&nbsp;
                            <a href="#fnref:245" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:246" role="doc-endnote">
                        <p>
                            E. Barker, Recommendation for Key Management: Part 1: General, NIST SP 800-574 pt. 1 rev. 4, National Institute of Standards and Technology, 2016; http://dx.doi.org/10.6028/NIST.SP.800-57pt1r4 [accessed 10/17/2016]&nbsp;
                            <a href="#fnref:246" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="untrusted-input-to-sensitive-operations">
                Untrusted Input to Sensitive Operations
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Vulnerable Applications
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-11
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Applications often have a need to dynamically incorporate input into sensitive operations such as access control decisions (e.g. authentication) or database operations. However, if a sensitive operation acts on untrusted and unsafe input, it may not function as intended. An attacker with control over such input can potentialy craft it to control application or system behavior. Prime examples of exploits include buffer overflow and code injection attacks. Therefore, it is important to evaluate untrusted input for safeness in the context in which it will be processed prior to accepting it.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable, See Exploit or CVE Examples
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Team Joch vs. Android
                    <sup id="fnref:57" role="doc-noteref">
                        <a href="#fn:57" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-7005">
                            CVE-2017-7005
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Mobile App Developer
                </b>
                <p class="countermeasure">
                    When input should match one of a set of known and comparable options, use whitelisting to ensure the input is safe before applying it to security logic.
                </p>
                <p class="countermeasure">
                    When whitelisting is not possible, use vetted data sanitization libraries to verify the input appears syntactically safe prior to applying it to security logic.
                </p>
                <p class="countermeasure">
                    Always use fail-safe security logic in apps; if input cannot be verified to be safe (versus not identified as unsafe), reject the input and do not perform the security action.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:57" role="doc-endnote">
                        <p>
                            J. Oberheide and Z. Lanier, “Team Joch vs. Android”, presented at ShmooCon 2011, 28-30 Jan. 2011, slide 54; https://jon.oberheide.org/files/shmoo11-teamjoch.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:57" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
    </ul>
    <h3 id="malicious-priv-applications">
        Malicious or privacy-invasive applications
    </h3>
    <ul class="threat-list">
        <li>
            <h1 id="malicious-device-information-gathering">
                Malicious Device Information Gathering
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-12
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Persistent information that can be used to identify or characterize a specific mobile device in one or more contexts, such as IMEI, IMSI, MAC address, phone number, mobile OS, or installed apps, may be collected by a malicious or privacy-invasive app to facilitate future attacks. These values, particularly in combination, greatly increase potential for geo-physical or behavioral tracking, device fingerprinting, and impersonation attacks against the device or its user.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    The Google Android Security Team’s Classifications for Potentially Harmful Applications
                    <sup id="fnref:83" role="doc-noteref">
                        <a href="#fn:83" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Slembunk: An Evolving Android Trojan Family
                    <sup id="fnref:84" role="doc-noteref">
                        <a href="#fn:84" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
                <p>
                    An investigation of Chrysaor Malware on Android
                    <sup id="fnref:AndroidDevBlog-1" role="doc-noteref">
                        <a href="#fn:AndroidDevBlog-1" class="footnote" rel="footnote">
                            3
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the sideloading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Perform application vetting to identify inappropriate behaviors by apps including permission requests made by the apps
                </p>
                <p class="countermeasure">
                    Use application threat intelligence data about potential data collection risks associated with apps installed on devices
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use Android Verify Apps feature to identify apps that may abuse permissions to perform data collection.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:83" role="doc-endnote">
                        <p>
                            The Google Android Security Team’s Classifications for Potentially Harmful Applications, Apr. 2016; https://static.googleusercontent.com/media/source.android.com/en//security/reports/Google_Android_Security_PHA_classifications.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:83" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:84" role="doc-endnote">
                        <p>
                            W. Zhou et al., “Slembunk: An Evolving Android Trojan Family Targeting Users of Worldwide Banking Apps”, blog, 17 Dec. 2015; www.fireeye.com/blog/threat-research/2015/12/slembunk_an_evolvin.html [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:84" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:AndroidDevBlog-1" role="doc-endnote">
                        <p>
                            “An investigation of Chrysaor Malware on Android”, blog, 3 Apr. 2017; https://android-developers.googleblog.com/2017/04/an-investigation-of-chrysaor-malware-on.html [accessed 4/5/2017]&nbsp;
                            <a href="#fnref:AndroidDevBlog-1" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="sensitive-information-discovery-via-os-apis">
                Sensitive Information Discovery via OS APIs
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-13
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Apps may be granted permission, by the user or by default, access common data stores provided by the mobile OS. Common stores are contacts lists, call history, calendar, notes, or app clipboard. When apps used in differing personal and enterprise contexts have access to these stores, they may contain co-mingled personal and enterprise data. A malicious or invasive app granted access to these locations can collect any sensitive data stored there, likely with an intent to exfiltrate it to the attacker.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    The Google Android Security Team’s Classifications for Potentially Harmful Applications
                    <sup id="fnref:83" role="doc-noteref">
                        <a href="#fn:83" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    An investigation of Chrysaor Malware on Android
                    <sup id="fnref:AndroidDevBlog-1" role="doc-noteref">
                        <a href="#fn:AndroidDevBlog-1" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the sideloading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Perform application vetting to identify privacy-invasive behaviors by apps.
                </p>
                <p class="countermeasure">
                    Use application threat intelligence data about potential privacy risks associated with apps installed on devices
                </p>
                <p class="countermeasure">
                    Use features such as Apple iOS Managed Apps, Android for Work, or Samsung KNOX Workspace that provide additional separation between personal apps and enterprise apps to mitigate the leakage of private information between work/personal contexts.
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use Android Verify Apps feature to identify apps that may violate privacy.
                </p>
                <b>
                    Mobile App Developer
                </b>
                <p class="countermeasure">
                    Only request access to the minimal set of shared data stores (e.g., contacts, calendar), OS services (e.g. location services), and device sensors (e.g. camera, microphone) necessary for the app to provide functionality.
                </p>
                <p class="countermeasure">
                    Only collect the minimal set of device or user data necessary for the app to provide functionality.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:83" role="doc-endnote">
                        <p>
                            The Google Android Security Team’s Classifications for Potentially Harmful Applications, Apr. 2016; https://static.googleusercontent.com/media/source.android.com/en//security/reports/Google_Android_Security_PHA_classifications.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:83" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:AndroidDevBlog-1" role="doc-endnote">
                        <p>
                            “An investigation of Chrysaor Malware on Android”, blog, 3 Apr. 2017; https://android-developers.googleblog.com/2017/04/an-investigation-of-chrysaor-malware-on.html [accessed 4/5/2017]&nbsp;
                            <a href="#fnref:AndroidDevBlog-1" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="masquerade-as-legitimate-application">
                Masquerade as Legitimate Application
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-14
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Like well-behaved apps, a trojan app offers some functionality to the user, though a trojan also includes hidden functionality that is malicious or otherwise undesirable. One technique for deploying trojan functionality is to obtain the install packages for a legitimate app, decompile/disassemble it, introduce the trojan, and then generate a new install package. The app will appear to a user to be the legitimate app. Distribution of trojans is commonly achieved by submission to open 3rd party app stores or social engineering attacks claiming to offer users the app with incentives (lower cost, free, extras unlocked, etc.).
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    The Google Android Security Team’s Classifications for Potentially Harmful Applications
                    <sup id="fnref:83" role="doc-noteref">
                        <a href="#fn:83" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
                <p>
                    Mobile Threat Protection: A Holistic Approach to Securing Mobile Data and Devices
                    <sup id="fnref:61" role="doc-noteref">
                        <a href="#fn:61" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
                <p>
                    Dissecting Android Malware: Characterization and Evolution
                    <sup id="fnref:85" role="doc-noteref">
                        <a href="#fn:85" class="footnote" rel="footnote">
                            3
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    New Android Malware Family Evades Antivirus Detection by Using Popular Ad Libraries
                    <sup id="fnref:86" role="doc-noteref">
                        <a href="#fn:86" class="footnote" rel="footnote">
                            4
                        </a>
                    </sup>
                </p>
                <p>
                    Slembunk: An Evolving Android Trojan Family Targeting Users of Worldwide Banking Apps
                    <sup id="fnref:84" role="doc-noteref">
                        <a href="#fn:84" class="footnote" rel="footnote">
                            5
                        </a>
                    </sup>
                </p>
                <p>
                    Incident Response for Android and iOS
                    <sup id="fnref:87" role="doc-noteref">
                        <a href="#fn:87" class="footnote" rel="footnote">
                            6
                        </a>
                    </sup>
                </p>
                <p>
                    Cloned banking app stealing usernames sneaks into Google Play
                    <sup id="fnref:88" role="doc-noteref">
                        <a href="#fn:88" class="footnote" rel="footnote">
                            7
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the sideloading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Use application threat intelligence data about potentially harmful apps installed on COPE or BYOD devices
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use Android Verify Apps feature to identify potentially harmful apps.
                </p>
                <b>
                    Mobile App Developer
                </b>
                <p class="countermeasure">
                    To reduce the ease of an attacker to abuse existing app functionality, only request access to the minimal set of shared data stores (e.g., contacts, calendar), OS services (e.g. location services), and device sensors (e.g. camera, microphone) necessary for the app to provide functionality.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:83" role="doc-endnote">
                        <p>
                            The Google Android Security Team’s Classifications for Potentially Harmful Applications, Apr. 2016; https://static.googleusercontent.com/media/source.android.com/en//security/reports/Google_Android_Security_PHA_classifications.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:83" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:61" role="doc-endnote">
                        <p>
                            L. Neely, Mobile Threat Protection: A Holistic Approach to Securing Mobile Data and Devices, SANS Institute, 2016; www.sans.org/reading-room/whitepapers/analyst/mobile-threat-protection-holistic-approach-securing-mobile-data-devices-36715 [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:61" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:85" role="doc-endnote">
                        <p>
                            Y. Zhou and X. Jiang, “Dissecting Android Malware: Characterization and Evolution”, in Proceedings of the 2012 IEEE Symposium on Security and Privacy, 2012, pp 95-109; http://ieeexplore.ieee.org/document/6234407/?arnumber=6234407 [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:85" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:86" role="doc-endnote">
                        <p>
                            C. Zheng and Z. Xu, “New Android Malware Family Evades Antivirus Detection by Using Popular Ad Libraries”, blog, 7 July 2015; http://researchcenter.paloaltonetworks.com/2015/07/new-android-malware-family-evades-antivirus-detection-by-using-popular-ad-libraries/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:86" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:84" role="doc-endnote">
                        <p>
                            W. Zhou et al., “Slembunk: An Evolving Android Trojan Family Targeting Users of Worldwide Banking Apps”, blog, 17 Dec. 2015; www.fireeye.com/blog/threat-research/2015/12/slembunk_an_evolvin.html [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:84" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:87" role="doc-endnote">
                        <p>
                            Unauthorized App Discovered, in Incident Response for Android and iOS, www.nowsecure.com/resources/mobile-incident-response/en/case-studies/unauthorized-app-discovered.html [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:87" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:88" role="doc-endnote">
                        <p>
                            M. Kelly, “Cloned banking app stealing usernames sneaks into Google Play”, blog, 24 June 2014; https://blog.lookout.com/blog/2014/06/24/bankmirage/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:88" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="distribution-of-malicious-apps-by-a-3rd-party-store">
                Distribution of malicious apps by a 3rd party store
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                This threat has been moved to
                <a href="/mobile-threat-catalogue/ecosystem-threats/ECO-23.html">
                    ECO-23
                </a>
                .
            </p>
        </li>
        <li>
            <h1 id="premium-sms-fraud">
                Premium SMS Fraud
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-16
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                SMS messages were initially charged to a cellular subscriber’s account on a per-message basis. However, some services use SMS messaging as a subscription or one-time payment method. The charge associated with the SMS message is placed on the cellular subscriber’s account and collected along with standard cellular service fees. This model enables malicious app developers to potentially collude with premium SMS service providers to commit fraud against users. The subscriber is held responsible for the fraudulent charges by the cellular carrier. Early forms of this attack exploited the weak OS permission models that allowed apps to send premium SMS messages without user interaction, which prompted improvement by affected OS developers. Contemporary variants must instead exploit vulnerabilities in the mobile OS to send messages without user knowledge and consent.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Dissecting Android Malware: Characterization and Evolution
                    <sup id="fnref:85" role="doc-noteref">
                        <a href="#fn:85" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    zSone, RogueSPPush, GGTracker malware described in Dissecting Android Malware: Characterization and Evolution
                    <sup id="fnref:85:1" role="doc-noteref">
                        <a href="#fn:85" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
                <p>
                    Mkero: Android malware secretly subscribes victims to premium SMS services
                    <sup id="fnref:94" role="doc-noteref">
                        <a href="#fn:94" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
                <p>
                    Chinese Android botnet ‘netting millions’
                    <sup id="fnref:95" role="doc-noteref">
                        <a href="#fn:95" class="footnote" rel="footnote">
                            3
                        </a>
                    </sup>
                </p>
                <p>
                    Android Security 2015 Year In Review
                    <sup id="fnref:98" role="doc-noteref">
                        <a href="#fn:98" class="footnote" rel="footnote">
                            4
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Ensure Android devices are running a recent version of Android, as starting in Android 4.2, user confirmation is needed before apps can send premium SMSs (source: https://source.android.com/security/enhancements/enhancements42.html).
                </p>
                <p class="countermeasure">
                    Perform application vetting to identify SMS fraud by apps including permission requests made by the apps.
                </p>
                <p class="countermeasure">
                    Use application threat intelligence data about potential SMS fraud risks associated with apps installed on devices.
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Ensure Android devices are running a recent version of Android, as starting in Android 4.2, user confirmation is needed before apps can send premium SMSs (source: https://source.android.com/security/enhancements/enhancements42.html).
                </p>
                <p class="countermeasure">
                    Use Android Verify Apps feature to apps that attempt to abuse SMS functionality.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:85" role="doc-endnote">
                        <p>
                            Y. Zhou and X. Jiang, “Dissecting Android Malware: Characterization and Evolution”, in Proceedings of the 2012 IEEE Symposium on Security and Privacy, 2012, pp 95-109; http://ieeexplore.ieee.org/document/6234407/?arnumber=6234407 [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:85" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                            &nbsp;
                            <a href="#fnref:85:1" class="reversefootnote" role="doc-backlink">
                                ↩
                                <sup>
                                    2
                                </sup>
                            </a>
                        </p>
                    </li>
                    <li id="fn:94" role="doc-endnote">
                        <p>
                            C. Page, “MKero: Android malware secretly subscribes victims to premium SMS services”, The Inquirer, 9 Sept. 2015; www.theinquirer.net/inquirer/news/2425201/mkero-android-malware-secretly-subscribes-victims-to-premium-sms-services [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:94" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:95" role="doc-endnote">
                        <p>
                            T. Espiner, “Chinese Android botnet ‘netting millions’, says Symantec”, ZDNet, 10 Feb. 2012; www.zdnet.com/article/chinese-android-botnet-netting-millions-says-symantec/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:95" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:98" role="doc-endnote">
                        <p>
                            Android Security 2015 Year In Review, Google, 2016; https://source.android.com/security/reports/Google_Android_Security_2015_Report_Final.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:98" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="intercepting-sms-messages">
                Intercepting SMS Messages
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-17
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Prior to Android 4.4, apps granted permissions to SMS messaging functionality had the ability to listen for and receive incoming SMS messages. If the app was registered as the highest priority listener for messages, it could silently (without notice to the user) intercept, read, and dispose of messages intended for other apps. One serious abuse of this was the interception of one-time passwords (OTP) used for two-factor authentication (2FA) sent over SMS. Newer versions of Android do not permit apps with permission to access SMS messaging to receive or dispose of SMS messages directly. Unlike Android, the iOS security model does not permit apps with access to SMS messaging. Malicious apps may still realize this threat following exploitation of OS vulnerabilities that bypass access control on private SMS messaging APIs or achieve arbitrary code execution.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Dissecting Android Malware: Characterization and Evolution
                    <sup id="fnref:85" role="doc-noteref">
                        <a href="#fn:85" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    New Android Trojan xBot Phishes Credit Cards and Bank Accounts, Encrypts Devices for Ransom
                    <sup id="fnref:96" role="doc-noteref">
                        <a href="#fn:96" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
                <p>
                    How Anywhere Computing Just Killed Your Phone-Based Two-Factor Authentication
                    <sup id="fnref:97" role="doc-noteref">
                        <a href="#fn:97" class="footnote" rel="footnote">
                            3
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Perform application vetting to identify inappropriate behaviors by apps including interception of SMS messages.
                </p>
                <p class="countermeasure">
                    Avoid the use of applications that rely on SMS messages for 2-factor authentication.
                </p>
                <p class="countermeasure">
                    When stronger 2-factor authentication methods are available, such as FIDO U2F tokens, educate enterprise users to avoid the use of SMS messages for configuring 2-factor authentication for enterprise applications.
                </p>
                <p class="countermeasure">
                    Use application threat intelligence data to identify apps that increase risks associated with SMS message interception.
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use Android Verify Apps feature to identify apps that may intercept SMS messages.
                </p>
                <p class="countermeasure">
                    Avoid the use of applications that rely on SMS messages for 2-factor authentication.
                </p>
                <b>
                    Mobile App Developer
                </b>
                <p class="countermeasure">
                    Avoid the use of SMS messages for 2-factor authentication.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:85" role="doc-endnote">
                        <p>
                            Y. Zhou and X. Jiang, “Dissecting Android Malware: Characterization and Evolution”, in Proceedings of the 2012 IEEE Symposium on Security and Privacy, 2012, pp 95-109; http://ieeexplore.ieee.org/document/6234407/?arnumber=6234407 [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:85" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:96" role="doc-endnote">
                        <p>
                            C. Zheng, et al., “New Android Trojan XBot Phishes Credit Cards and Bank Accounts, Encrypts Devices for Ransom”, blog, 18 Feb. 2016; http://researchcenter.paloaltonetworks.com/2016/02/new-android-trojan-xbot-phishes-credit-cards-and-bank-accounts-encrypts-devices-for-ransom/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:96" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:97" role="doc-endnote">
                        <p>
                            R. K. Konoth, V. van der Veen, and Herbert Bos, “How Anywhere Computing Just Killed Your Phone-Based Two-Factor Authentication”, Proceedings of the 20th Conference on Financial Cryptography and Data Security, 2016; http://fc16.ifca.ai/preproceedings/24_Konoth.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:97" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="premium-service-fraud">
                Premium Service Fraud
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                This threat has been merged with
                <a href="/mobile-threat-catalogue/application-threats/APP-16.html">
                    APP-16
                </a>
                .
            </p>
        </li>
        <li>
            <h1 id="audio-or-video-surveillance">
                Audio or Video Surveillance
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-19
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Starting with Android 6.0, access to the microphone or camera is considered a dangerous permission and each recording attempt must be granted permission by the user at runtime. Similarly, the iOS security model only allows apps granted permission by the user to access the camera or microphone while running in the foreground. Therefore, an app operating in these or newer environments cannot abuse public APIs to initiate a recording outside the user’s knowledge.
This threat can still be realized following successful exploits of OS vulnerabilities that ultimately provide a malicious app with unauthorized access to those resources (e.g. bypass access control on APIs or direct access to the hardware).
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable, See Exploit or CVE Examples
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Malware designed to take over cameras and record audio enters Google Play
                    <sup id="fnref:99" role="doc-noteref">
                        <a href="#fn:99" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
                <p>
                    An investigation of Chrysaor Malware on Android
                    <sup id="fnref:AndroidDevBlog-1" role="doc-noteref">
                        <a href="#fn:AndroidDevBlog-1" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Deploy MDM solutions that support geo-fencing of BYOD devices with policies that disable device sensors (e.g., camera, microphone) when the device is being operated in sensitive locations.
                </p>
                <p class="countermeasure">
                    Deploy MDM solutions for COPE devices that support disabling device sensors (e.g. camera, microphone) that can be used for recording of nearby activity.
                </p>
                <p class="countermeasure">
                    Deploy MAM solutions for COPE devices that support selectively enabling device sensors (e.g. camera, microphone) for a whitelist of trusted enterprise applications that require those functionalities.
                </p>
                <p class="countermeasure">
                    Use application threat intelligence data about potential abuse of access to device sensors associated with apps installed on COPE or BYOD devices
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use Android Verify Apps feature to identify apps that may abuse access to sensor data to record nearby activity.
                </p>
                <b>
                    Mobile App Developer
                </b>
                <p class="countermeasure">
                    To reduce risks of using the app, only request access to the minimal set of shared data stores (e.g., contacts, calendar), OS services (e.g. location services), and device sensors (e.g. camera, microphone) necessary for the app to provide functionality.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:99" role="doc-endnote">
                        <p>
                            D. Goodin, “Malware designed to take over cameras and record audio enters Google Play”, Ars Technica, 7 Mar. 2014; http://arstechnica.com/security/2014/03/malware-designed-to-take-over-cameras-and-record-audio-enters-google-play/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:99" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:AndroidDevBlog-1" role="doc-endnote">
                        <p>
                            “An investigation of Chrysaor Malware on Android”, blog, 3 Apr. 2017; https://android-developers.googleblog.com/2017/04/an-investigation-of-chrysaor-malware-on.html [accessed 4/5/2017]&nbsp;
                            <a href="#fnref:AndroidDevBlog-1" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="loading-malicious-code-at-runtime">
                Loading Malicious Code at Runtime
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-20
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Mobile apps may evade app vetting by downloading and executing malicious app code after installation. On Android, external code can be loaded using the OS-provided API. On iOS, the ability to modify app code is a consequence of the Objective C runtime environment that apps execute within, which permits method definitions to be modified at runtime. As the malicious code would not be present when the app was submitted for review, it may evade detection as a malicious application.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Execute This! Analyzing Unsafe and Malicious Dynamic Code Loading in Android Applications
                    <sup id="fnref:240" role="doc-noteref">
                        <a href="#fn:240" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
                <p>
                    Jekyll on iOS: When Benign Apps Become Evil
                    <sup id="fnref:111" role="doc-noteref">
                        <a href="#fn:111" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Android Hax
                    <sup id="fnref:100" role="doc-noteref">
                        <a href="#fn:100" class="footnote" rel="footnote">
                            3
                        </a>
                    </sup>
                </p>
                <p>
                    Hot or Not? The Benefits and Risks of iOS Remote Hot Patching
                    <sup id="fnref:241" role="doc-noteref">
                        <a href="#fn:241" class="footnote" rel="footnote">
                            4
                        </a>
                    </sup>
                </p>
                <p>
                    Method Swizzling
                    <sup id="fnref:242" role="doc-noteref">
                        <a href="#fn:242" class="footnote" rel="footnote">
                            5
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Use application threat intelligence data about potential abuse of dynamic code execution associated with apps installed on COPE or BYOD devices
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use Android Verify Apps feature to identify potentially harmful apps.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:240" role="doc-endnote">
                        <p>
                            S. Poeplau et al., “Execute This! Analyzing Unsafe and Malicious Dynamic Code Loading in Android Applications”, in Proceedings of the 2014 Network and Distributed System Security Symposium, 2014; http://www.internetsociety.org/doc/execute-analyzing-unsafe-and-malicious-dynamic-code-loading-android-applications [accessed 8/31/16]&nbsp;
                            <a href="#fnref:240" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:111" role="doc-endnote">
                        <p>
                            T. Wang et al., “Jekyll on iOS: When Benign Apps Become Evil”, in Proceedings of the 22nd USENIX Security Symposium, 2013; www.usenix.org/system/files/conference/usenixsecurity13/sec13-paper_wang_2.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:111" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:100" role="doc-endnote">
                        <p>
                            J. Oberheide, Android Hax, presented at Summercon, 10 June 2010; https://jon.oberheide.org/files/summercon10-androidhax-jonoberheide.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:100" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:241" role="doc-endnote">
                        <p>
                            J. Xie et al., “Hot or Not? The Benefits and Risks of iOS Remote Hot Patching”, blog, 27 Jan. 2016; https://www.fireeye.com/blog/threat-research/2016/01/hot_or_not_the_bene.html [accessed 8/31/16]&nbsp;
                            <a href="#fnref:241" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:242" role="doc-endnote">
                        <p>
                            M. Thompson, “Method Swizzling”, blog, 17 Feb. 2014; http://nshipster.com/method-swizzling/ [accessed 8/31/16]&nbsp;
                            <a href="#fnref:242" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="app-vetting-misses-malicious-app">
                App Vetting Misses Malicious App
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-21
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                App vetting methods designed to detect malicious code are complicated by various code obfuscation techniques such as sandbox detection, encryption, and dead code (malicious functions unreachable by normal program execution). As a result, a malicious app subjected to app vetting may appear free of harmful code and safe to publish or distribute.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Dissecting Android Malware: Characterization and Evolution
                    <sup id="fnref:85" role="doc-noteref">
                        <a href="#fn:85" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-07555">
                            CVE-2015-07555
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5131">
                            CVE-2016-5131
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Use app-vetting tools or services to identify untrusted apps that contain encrypted or obfuscated code.
                </p>
                <p class="countermeasure">
                    Use application threat intelligence data about apps that contain encrypted or obfuscated code
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use Android Verify Apps feature to identify potentially harmful apps.
                </p>
                <b>
                    Mobile App Developer
                </b>
                <p class="countermeasure">
                    To mitigate your app being detected as potentially malicious, do not arbitrarily encrypt or obfuscate code.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:85" role="doc-endnote">
                        <p>
                            Y. Zhou and X. Jiang, “Dissecting Android Malware: Characterization and Evolution”, in Proceedings of the 2012 IEEE Symposium on Security and Privacy, 2012, pp 95-109; http://ieeexplore.ieee.org/document/6234407/?arnumber=6234407 [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:85" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="avoiding-uninstallation-via-permissions-abuse">
                Avoiding Uninstallation via Permissions Abuse
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-22
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                The Device Administrator permission in Android is designed to allow enterprises to develop apps that can manage settings on users devices to enforce compliance with the enterprise mobile device security policy. Prior to Android 6.0, the Device Administrator role could enforce a policy that disabled uninstallation of an app. Malicious applications could abuse this behavior to gain persistence on the device. Since Android 6.0, users can always unregister a given app as a Device Administrator, which disables all associated policies and would restore the ability to uninstall the malicious app.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Android Security 2015 Year In Review
                    <sup id="fnref:98" role="doc-noteref">
                        <a href="#fn:98" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0594">
                            CVE-2017-0594
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0595">
                            CVE-2017-0595
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0596">
                            CVE-2017-0596
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Ensure Android devices are running a recent version of the operating system. As described at 44:20 in the Google I/O 2016 “What’s new in Android security” (https://www.youtube.com/watch?v=XZzLjllizYs), enhancements were made in Android M or N to ensure that all device admin apps can be uninstalled.
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Ensure Android devices are running a recent version of the operating system. As described at 44:20 in the Google I/O 2016 “What’s new in Android security” (https://www.youtube.com/watch?v=XZzLjllizYs), enhancements were made in Android M or N to ensure that all device admin apps can be uninstalled.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:98" role="doc-endnote">
                        <p>
                            Android Security 2015 Year In Review, Google, 2016; https://source.android.com/security/reports/Google_Android_Security_2015_Report_Final.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:98" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="ransoming-assets-via-device-management-abuse">
                Ransoming Assets via Device Management Abuse
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-23
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Device management features built into Android and iOS allow organizations to develop apps designed to enforce organizational mobile device security policies. Some policy options could be abused by a malicious app to block access to desired functionality (e.g. camera access) until a ransom is paid. Prior to Android 7.0, the Device Administrator role could forcefully set a device unlock code, which could be used to hold the entire device for ransom.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Android Security 2015 Year In Review
                    <sup id="fnref:98" role="doc-noteref">
                        <a href="#fn:98" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    New Android Trojan xBot Phishes Credit Cards and Bank Accounts, Encrypts Devices for Ransom
                    <sup id="fnref:96" role="doc-noteref">
                        <a href="#fn:96" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Use application threat intelligence data about potential abuse of Administrator privileges associated with apps installed on COPE or BYOD devices
                </p>
                <p class="countermeasure">
                    Consider the use of devices that support Android 7.0 and later and ensuring a PIN is set. Starting in 7.0, device administrator apps can no longer change the device PIN/password when one is already set, as described in https://developer.android.com/preview/behavior-changes.html and at 44:20 of https://www.youtube.com/watch?v=XZzLjllizYs
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use Android Verify Apps feature to identify apps that may abuse Administrator privileges.
                </p>
                <p class="countermeasure">
                    Consider the use of devices that support Android 7.0 and later and ensuring a PIN is set. Starting in 7.0, device administrator apps can no longer change the device PIN/password when one is already set, as described in https://developer.android.com/preview/behavior-changes.html and at 44:20 of https://www.youtube.com/watch?v=XZzLjllizYs
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:98" role="doc-endnote">
                        <p>
                            Android Security 2015 Year In Review, Google, 2016; https://source.android.com/security/reports/Google_Android_Security_2015_Report_Final.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:98" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:96" role="doc-endnote">
                        <p>
                            C. Zheng, et al., “New Android Trojan XBot Phishes Credit Cards and Bank Accounts, Encrypts Devices for Ransom”, blog, 18 Feb. 2016; http://researchcenter.paloaltonetworks.com/2016/02/new-android-trojan-xbot-phishes-credit-cards-and-bank-accounts-encrypts-devices-for-ransom/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:96" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="covertly-track-device-location">
                Covertly Track Device Location
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-24
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Apps that have been granted permission to Location Services or similar OS-provided services can abuse this permission to report device outside of what may be needed to support legitimate app functionality (e.g. navigation). Device location data may facilitate further attacks such as geo-physical or behavioral tracking of the user.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Dissecting Android Malware: Characterization and Evolution
                    <sup id="fnref:85" role="doc-noteref">
                        <a href="#fn:85" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    An investigation of Chrysaor Malware on Android
                    <sup id="fnref:AndroidDevBlog-1" role="doc-noteref">
                        <a href="#fn:AndroidDevBlog-1" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Use application threat intelligence data about potential abuse of location services associated with apps installed on COPE or BYOD devices
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use Android Verify Apps feature to identify apps that may abuse location services.
                </p>
                <p class="countermeasure">
                    When apps that require location services (e.g., map services) are not in use, use OS-provided settings to globally disable access to location services
                </p>
                <p class="countermeasure">
                    When using untrusted apps that require locations services (e.g., map services), use OS-provided settings to revoke access to location services once the app is no longer in use.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:85" role="doc-endnote">
                        <p>
                            Y. Zhou and X. Jiang, “Dissecting Android Malware: Characterization and Evolution”, in Proceedings of the 2012 IEEE Symposium on Security and Privacy, 2012, pp 95-109; http://ieeexplore.ieee.org/document/6234407/?arnumber=6234407 [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:85" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:AndroidDevBlog-1" role="doc-endnote">
                        <p>
                            “An investigation of Chrysaor Malware on Android”, blog, 3 Apr. 2017; https://android-developers.googleblog.com/2017/04/an-investigation-of-chrysaor-malware-on.html [accessed 4/5/2017]&nbsp;
                            <a href="#fnref:AndroidDevBlog-1" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="abusing-existing-root-access">
                Abusing Existing Root Access
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-25
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Rooting or jail-breaking an Android or iOS device significantly degrades its security architecture by enabling arbitrary apps to execute commands as root. A malicious app could, under an assumption some percentage of devices have been rooted or jail-broken, attempt to abuse implicit root privilege escalation.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable, See Exploit or CVE Examples
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    How to clean up the Duh iPhone worm
                    <sup id="fnref:101" role="doc-noteref">
                        <a href="#fn:101" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    For the lowest risk tolerance, deploy MDM or containerization solutions with policies that can detect and block access to enterprise resources by rooted/jail-broken devices.
                </p>
                <p class="countermeasure">
                    Use application threat intelligence data to detect potential abuse of rooted/jail-broken BYOD devices
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use Android Verify Apps feature to identify harmful apps.
                </p>
                <b>
                    Mobile App Developer
                </b>
                <p class="countermeasure">
                    To avoid launching applications that handle sensitive information on a rooted/jail-broken device, perform device integrity checking, such as using Android SafetyNet, Samsung Knox hardware-backed remote attestation, or other applicable remote attestation technologies device integrity attestation API
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:101" role="doc-endnote">
                        <p>
                            P. Ducklin, “How to clean up the Duh iPhone worm”, Naked Security, Sophos, 24 Nov. 2009; https://nakedsecurity.sophos.com/2009/11/24/clean-up-iPhone-worm/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:101" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="privilage-escalation-via-os-vulnerability">
                Privilage Escalation via OS Vulnerability
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-26
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Malicious applications that achieve privilege escalation in the context of the mobile OS, driver, peripheral firmware, or the kernel, may further achieve unauthorized access or modification of app, user, or system data, process memory, or execute other unauthorized actions on the device.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Dissecting Android Malware: Characterization and Evolution
                    <sup id="fnref:85" role="doc-noteref">
                        <a href="#fn:85" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2398">
                            CVE-2017-2398
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2401">
                            CVE-2017-2401
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2440">
                            CVE-2017-2440
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2451">
                            CVE-2017-2451
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2456">
                            CVE-2017-2456
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2472">
                            CVE-2017-2472
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2473">
                            CVE-2017-2473
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2474">
                            CVE-2017-2474
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2478">
                            CVE-2017-2478
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2482">
                            CVE-2017-2482
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2483">
                            CVE-2017-2483
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2490">
                            CVE-2017-2490
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0593">
                            CVE-2017-0593
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0598">
                            CVE-2017-0598
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0601">
                            CVE-2017-0601
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-7056">
                            CVE-2016-7056
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10274">
                            CVE-2016-10274
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10275">
                            CVE-2016-10275
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10276">
                            CVE-2016-10276
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-9794">
                            CVE-2016-9794
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0331">
                            CVE-2017-0331
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0604">
                            CVE-2017-0604
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0605">
                            CVE-2017-0605
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10280">
                            CVE-2016-10280
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10281">
                            CVE-2016-10281
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10282">
                            CVE-2016-10282
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10283">
                            CVE-2016-10283
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10284">
                            CVE-2016-10284
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10285">
                            CVE-2016-10285
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10286">
                            CVE-2016-10286
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-9004">
                            CVE-2015-9004
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10287">
                            CVE-2016-10287
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0606">
                            CVE-2017-0606
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5860">
                            CVE-2016-5860
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5867">
                            CVE-2016-5867
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0607">
                            CVE-2017-0607
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0608">
                            CVE-2017-0608
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0609">
                            CVE-2017-0609
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5859">
                            CVE-2016-5859
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0610">
                            CVE-2017-0610
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0611">
                            CVE-2017-0611
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5853">
                            CVE-2016-5853
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10288">
                            CVE-2016-10288
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10289">
                            CVE-2016-10289
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10290">
                            CVE-2016-10290
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0465">
                            CVE-2017-0465
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0612">
                            CVE-2017-0612
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0613">
                            CVE-2017-0613
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0614">
                            CVE-2017-0614
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0616">
                            CVE-2017-0616
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0618">
                            CVE-2017-0618
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0619">
                            CVE-2017-0619
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0620">
                            CVE-2017-0620
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5862">
                            CVE-2016-5862
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0621">
                            CVE-2017-0621
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5868">
                            CVE-2016-5868
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0622">
                            CVE-2017-0622
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0623">
                            CVE-2017-0623
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0624">
                            CVE-2017-0624
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0625">
                            CVE-2017-0625
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0626">
                            CVE-2017-0626
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0627">
                            CVE-2017-0627
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10293">
                            CVE-2016-10293
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10294">
                            CVE-2016-10294
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10295">
                            CVE-2016-10295
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10296">
                            CVE-2016-10296
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0628">
                            CVE-2017-0628
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0629">
                            CVE-2017-0629
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0630">
                            CVE-2017-0630
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5858">
                            CVE-2016-5858
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0631">
                            CVE-2017-0631
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5347">
                            CVE-2016-5347
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5854">
                            CVE-2016-5854
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5855">
                            CVE-2016-5855
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0632">
                            CVE-2017-0632
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0633">
                            CVE-2017-0633
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0634">
                            CVE-2017-0634
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2522">
                            CVE-2017-2522
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2523">
                            CVE-2017-2523
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2497">
                            CVE-2017-2497
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-6981">
                            CVE-2017-6981
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-6979">
                            CVE-2017-6979
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2051">
                            CVE-2017-2051
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2507">
                            CVE-2017-2507
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-6987">
                            CVE-2017-6987
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-7004">
                            CVE-2017-7004
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2513">
                            CVE-2017-2513
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2518">
                            CVE-2017-2518
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2520">
                            CVE-2017-2520
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2519">
                            CVE-2017-2519
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-6983">
                            CVE-2017-6983
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-6991">
                            CVE-2017-6991
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-7000">
                            CVE-2017-7000
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-7001">
                            CVE-2017-7001
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-7002">
                            CVE-2017-7002
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2524">
                            CVE-2017-2524
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2496">
                            CVE-2017-2496
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2505">
                            CVE-2017-2505
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2506">
                            CVE-2017-2506
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2514">
                            CVE-2017-2514
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2515">
                            CVE-2017-2515
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2521">
                            CVE-2017-2521
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2525">
                            CVE-2017-2525
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2526">
                            CVE-2017-2526
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2530">
                            CVE-2017-2530
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2531">
                            CVE-2017-2531
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2538">
                            CVE-2017-2538
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2539">
                            CVE-2017-2539
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2544">
                            CVE-2017-2544
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2547">
                            CVE-2017-2547
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-6980">
                            CVE-2017-6980
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-6984">
                            CVE-2017-6984
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2504">
                            CVE-2017-2504
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2508">
                            CVE-2017-2508
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2510">
                            CVE-2017-2510
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2528">
                            CVE-2017-2528
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2536">
                            CVE-2017-2536
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2549">
                            CVE-2017-2549
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2499">
                            CVE-2017-2499
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-7056">
                            CVE-2016-7056
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0603">
                            CVE-2017-0603
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10294">
                            CVE-2016-10294
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0615">
                            CVE-2017-0615
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0617">
                            CVE-2017-0617
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Use application threat intelligence data to identify apps that exploit the OS to achieve privilege escalation.
                </p>
                <p class="countermeasure">
                    Use app-vetting tools or services to identify apps that exploit the OS to achieve privilege escalation.
                </p>
                <p class="countermeasure">
                    To limit the opportunity for malicious apps to exploit known vulnerabilities, ensure timely installation of security updates.
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use the Android Verify Apps feature to identify potentially harmful apps.
                </p>
                <p class="countermeasure">
                    To limit the opportunity for malicious apps to exploit known vulnerabilities, ensure timely installation of security updates.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:85" role="doc-endnote">
                        <p>
                            Y. Zhou and X. Jiang, “Dissecting Android Malware: Characterization and Evolution”, in Proceedings of the 2012 IEEE Symposium on Security and Privacy, 2012, pp 95-109; http://ieeexplore.ieee.org/document/6234407/?arnumber=6234407 [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:85" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="persistance-via-writing-to-system-partition">
                Persistance via Writing to System Partition
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-27
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Malicious code that has achieved privilege escalation to the kernel or root user may achieve persistence by modifying memory locations reserved for use by the bootloader, mobile OS, or kernel to force the execution of malicious code following a device reboot or integrated factory reset.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable, See Exploit or CVE Examples
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Brain Test re-emerges: 13 apps found in Google Play
                    <sup id="fnref:102" role="doc-noteref">
                        <a href="#fn:102" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10277">
                            CVE-2016-10277
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Use application threat intelligence data about apps that may achieve malicious persistence
                </p>
                <p class="countermeasure">
                    Use app-vetting tools or services to identify apps that exploit the underlying OS to achieve malicious persistence.
                </p>
                <p class="countermeasure">
                    Deploy MDM solutions that require successful boot attestation prior to granting access to enterprise resources.
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use Android Verify Apps feature to identify potentially harmful apps.
                </p>
                <b>
                    Mobile App Developer
                </b>
                <p class="countermeasure">
                    To avoid executing apps that process sensitve information while low-level malware is present on the device, perform device integrity checking within enterprise applications, such as use of Android SafetyNet, Samsung Knox hardware-backed remote attestation, or other applicable remote attestation technologies device integrity attestation API
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:102" role="doc-endnote">
                        <p>
                            C. Dehghanpoor, “Brain Test re-emerges: 13 apps found in Google Play”, blog, 6 Jan. 2016; https://blog.lookout.com/blog/2016/01/06/brain-test-re-emerges/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:102" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="encrypting-and-ransoming-files">
                Encrypting and Ransoming Files
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-28
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                A malicious app with permission to modify files or data stored in shared locations, such as external media or contacts could potentially overwrite an original file or data object with an encoded or encrypted one. The attacker could then demand some form of payment in exchange for returning randomed data to a usable state.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable, See Exploit or CVE Examples
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    New Android Trojan xBot Phishes Credit Cards and Bank Accounts, Encrypts Devices for Ransom
                    <sup id="fnref:96" role="doc-noteref">
                        <a href="#fn:96" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Use application threat intelligence data about apps that maliciously encrypt user data.
                </p>
                <p class="countermeasure">
                    Use app-vetting tools or services to identify apps that maliciously encrypt user data.
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use Android Verify Apps feature to identify potentially harmful apps.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:96" role="doc-endnote">
                        <p>
                            C. Zheng, et al., “New Android Trojan XBot Phishes Credit Cards and Bank Accounts, Encrypts Devices for Ransom”, blog, 18 Feb. 2016; http://researchcenter.paloaltonetworks.com/2016/02/new-android-trojan-xbot-phishes-credit-cards-and-bank-accounts-encrypts-devices-for-ransom/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:96" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="command-and-control-traffic-evades-analysis">
                Command-and-control Traffic Evades Analysis
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-29
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Mobile OS offer built-in and encrypted communication channels that may appear to be normal traffic or occur out-of-band (over a cellular connection), thereby evading detection by Wi-Fi-based enterprise traffic analysis tools. Google offers Google Cloud Messaging (GCM) and newly, Firebase Cloud Messaging (FCM), which provides two-way communication. Apple offers the Apple Push Notification Service (APNS), which offers one-way communication from server-to-device. Both services are commonly used within mobile apps, which makes detecting abuse of these services difficult.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable, See Exploit or CVE Examples
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Mobile Malware Evolution: 2013
                    <sup id="fnref:103" role="doc-noteref">
                        <a href="#fn:103" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
                <p>
                    DroydSeuss: A Mobile Banking Trojan Tracker
                    <sup id="fnref:104" role="doc-noteref">
                        <a href="#fn:104" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Use app-vetting tools or services to identify remote access control apps that receive commands over notification or messaging serices or other communication channels.
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Disable access to notification or messaing services to apps for which such functions are not actually used.
                </p>
                <p class="countermeasure">
                    Use Verify Apps feature to identify potentially harmful apps.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:103" role="doc-endnote">
                        <p>
                            V. Chebyshev and R. Unuchek, “Mobile Malware Evolution: 2013”, blog, 24 Feb. 2014; https://securelist.com/analysis/kaspersky-security-bulletin/58335/mobile-malware-evolution-2013/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:103" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:104" role="doc-endnote">
                        <p>
                            A. Coletta et al., “DroydSeuss: A Mobile Banking Trojan Tracker - A Short Paper”, in Proceedings of Financial Cryptography and Data Security 2016, 2016; http://fc16.ifca.ai/preproceedings/14_Coletta.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:104" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="exfiltration-evades-analysis">
                Exfiltration Evades Analysis
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-30
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Malicious apps that collect and exfiltrate sensitive data have multiple communication channels available. In addition to using encryption, steganography, or other obfuscation techniques over an inspected Wi-Fi connection, apps may exfiltrate data over a cellular connection, which cannot be directly analyzed using an enterprise network security mechanism. While requiring a receiver with proximity to the device, apps can also potentially exfiltrate data over Bluetooth or NFC connections. Common use of these channels are interfaces to device peripherals or short-range data transfers, making these channels less likely to be monitored by enterprise security mechanisms.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Dissecting Android Malware: Characterization and Evolution
                    <sup id="fnref:85" role="doc-noteref">
                        <a href="#fn:85" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Use application threat intelligence data about potential data exfiltration risks associated with apps installed on COPE or BYOD devices
                </p>
                <p class="countermeasure">
                    Use app-vetting tools or services to identify apps that appear to exfiltrate data.
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use Android Verify Apps feature to identify apps that may abuse communication channels to exfiltrate data.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:85" role="doc-endnote">
                        <p>
                            Y. Zhou and X. Jiang, “Dissecting Android Malware: Characterization and Evolution”, in Proceedings of the 2012 IEEE Symposium on Security and Privacy, 2012, pp 95-109; http://ieeexplore.ieee.org/document/6234407/?arnumber=6234407 [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:85" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="masquerading-as-a-legitimate-application">
                Masquerading as a Legitimate Application
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-31
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                3rd party apps may duplicate the appearance and interface of a legitimate app, such as a banking app, to trick the user into supplying authentication credentials or other sensitive information intended for the app being spoofed. This threat was facilitated on Android devices before 5.0, as a malicious app could determine if a target app was running in the foreground, then initiate an activity to gain focus and intercept credential entry by the user.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Phishing on Mobile Devices
                    <sup id="fnref:105" role="doc-noteref">
                        <a href="#fn:105" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
                <p>
                    Exploiting Androids for Fun and Profit
                    <sup id="fnref:106" role="doc-noteref">
                        <a href="#fn:106" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
                <p>
                    The Latest Android Overlay Malware Spreading via SMS Phishing in Europe
                    <sup id="fnref:107" role="doc-noteref">
                        <a href="#fn:107" class="footnote" rel="footnote">
                            3
                        </a>
                    </sup>
                </p>
                <p>
                    Password-Stealing Instagram App
                    <sup id="fnref:108" role="doc-noteref">
                        <a href="#fn:108" class="footnote" rel="footnote">
                            4
                        </a>
                    </sup>
                </p>
                <p>
                    Hackers Sneak Malware Into Apple App Store ‘To Steal iCloud Passwords’
                    <sup id="fnref:109" role="doc-noteref">
                        <a href="#fn:109" class="footnote" rel="footnote">
                            5
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Consider the use of devices that support Android 5.0 and later, in which ActivityManager.getRunningTasks() has been modified to stop leaking information about the current foreground activity, increasing the difficulty of malicious apps being able to perform a user interface spoofing attack
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Use app-vetting tools or services to identify apps that attempt to spoof the interface to other apps or common web sites, such as banking sites.
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Consider the use of devices that support Android 5.0 and later, in which ActivityManager.getRunningTasks() has been modified to stop leaking information about the current foreground activity, increasing the difficulty of malicious apps being able to perform a user interface spoofing attack
                </p>
                <p class="countermeasure">
                    Use Android Verify Apps feature to identify potentially harmful apps.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:105" role="doc-endnote">
                        <p>
                            A.P. Felt and D. Wagner, Phishing on Mobile Devices, presented at Web 2.0 Security &amp; Privacy 2011, 26 May 2011; http://w2spconf.com/2011/papers/felt-mobilephishing.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:105" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:106" role="doc-endnote">
                        <p>
                            R. Hassell, Exploiting Androids for Fun and Profit, presented at Hack In The Box Security Conference 2011, 12-13 Oct. 2011; http://conference.hitb.org/hitbsecconf2011kul/materials/D1T1 - Riley Hassell - Exploiting Androids for Fun and Profit.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:106" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:107" role="doc-endnote">
                        <p>
                            W. Zhou et al., “The Latest Android Overlay Malware Spreading via SMS Phishing in Europe”, blog, 28 June 2016; www.fireeye.com/blog/threat-research/2016/06/latest-android-overlay-malware-spreading-in-europe.html [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:107" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:108" role="doc-endnote">
                        <p>
                            J. Clover, “Password-Stealing Instagram App ‘InstaAgent’ Reappears in App Store Under New Name”, MacRumors, 22 Mar. 2016; www.macrumors.com/2016/03/22/password-stealing-instaagent-app-reappears/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:108" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:109" role="doc-endnote">
                        <p>
                            T. Fox-Brewster, “Hackers Sneak Malware Into Apple App Store ‘To Steal iCloud Passwords’”, Forbes, 18 Sept. 2015; www.forbes.com/sites/thomasbrewster/2015/09/18/xcodeghost-malware-wants-your-icloud/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:109" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="exploiting-access-to-enterprise-resources">
                Exploiting Access to Enterprise Resources
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-32
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Any device-wide communication channels, such as an encrypted enterprise Wi-Fi connection, may be accessible to all apps running on the device. This may allow an attacker to bypass some network defense mechanisms, such as network access control or firewalls, thereby facilitating attacks against enterprise resources from within the enterprise network.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable, See Exploit or CVE Examples
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Juniper Networks Third Annual Mobile Threats Report
                    <sup id="fnref:236" role="doc-noteref">
                        <a href="#fn:236" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10292">
                            CVE-2016-10292
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Use app-vetting tools or services to identify apps that perform host discovery or attempt to access hosts with internal (e.g. inside a private LAN) domains or IP addresses.
                </p>
                <p class="countermeasure">
                    Use features such as Apple iOS Managed Apps, Android for Work, or Samsung KNOX Workspace that provide some level of separation between personal apps and enterprise apps to mitigate the impact of malicious behaviors, including use of per-app/per-user VPN features, so that only enterprise-approved apps can traverse the VPN and access enterprise resources.
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use Android Verify Apps feature to identify potentially harmful.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:236" role="doc-endnote">
                        <p>
                            Juniper Networks Third Annual Mobile Threats Report, white paper, Juniper Networks; http://www.juniper.net/us/en/local/pdf/additional-resources/jnpr-2012-mobile-threats-report.pdf [accessed 8/31/16]&nbsp;
                            <a href="#fnref:236" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="bypassing-os-private-api-controls">
                Bypassing OS Private API Controls
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-33
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Mobile OS generally have two APIs - an external API that is available to public developers, and a private API that is restricted to the OS and built-in applications. Access control mechanisms implemented at the OS level may have vulnerabilities that allow 3rd party apps to successfully execute private API functions. Mobile OS app stores have since improved detection of a direct attempt by an app to call a private OS function.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Symantec Internet Security Threat Report 2016
                    <sup id="fnref:110" role="doc-noteref">
                        <a href="#fn:110" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    YiSpecter: First iOS Malware That Attacks Non-jailbroken Apple iOS Devices by Abusing Private APIs
                    <sup id="fnref:43" role="doc-noteref">
                        <a href="#fn:43" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
                <p>
                    Jekyll on iOS: When Benign Apps Become Evil
                    <sup id="fnref:111" role="doc-noteref">
                        <a href="#fn:111" class="footnote" rel="footnote">
                            3
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0598">
                            CVE-2017-0598
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0602">
                            CVE-2017-0602
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-7003">
                            CVE-2017-7003
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Use application threat intelligence data about potential data collection risks associated with apps installed on COPE or BYOD devices
                </p>
                <p class="countermeasure">
                    Use app-vetting tools or services to identify apps that appear to abuse the OS API to gather sensitive data.
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use Android Verify Apps feature to identify apps that appear to abuse the OS API to gather sensitive data.
                </p>
                <b>
                    Mobile App Developer
                </b>
                <p class="countermeasure">
                    To avoid inadvertent detection as a harmful app, review current developer documentation for the supporting OS and always use the recommended API calls to deliver app functionality.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:110" role="doc-endnote">
                        <p>
                            Internet Security Threat Report vol. 21, Symantec, 2016.&nbsp;
                            <a href="#fnref:110" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:43" role="doc-endnote">
                        <p>
                            C. Xiao, “YiSpecter: First iOS Malware That Attacks Non-jailbroken Apple iOS Devices by Abusing Private APIs,” blog, 25 Oct. 2015; http://researchcenter.paloaltonetworks.com/2015/10/yispecter-first-ios-malware-attacks-non-jailbroken-ios-devices-by-abusing-private-apis/&nbsp;
                            <a href="#fnref:43" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:111" role="doc-endnote">
                        <p>
                            T. Wang et al., “Jekyll on iOS: When Benign Apps Become Evil”, in Proceedings of the 22nd USENIX Security Symposium, 2013; www.usenix.org/system/files/conference/usenixsecurity13/sec13-paper_wang_2.pdf [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:111" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="app-provides-remote-control-over-device">
                App Provides Remote Control Over Device
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-34
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Malicious apps built with effective code execution exploits against the mobile OS and the ability to receive remote commands can provide a resourceful attacker with considerable control over a compromised mobile device. Typical usage of remote control functionality has been using build-in sensors, such as the microphone and camera, to surveil the user. However, an attacker can potentially exercise any capability of the device.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable, See Exploit or CVE Examples
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Dendroid malware can take over your camera, record audio, and sneak into Google Play
                    <sup id="fnref:237" role="doc-noteref">
                        <a href="#fn:237" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
                <p>
                    Mobile RAT attack makes Android the ultimate spy tool
                    <sup id="fnref:112" role="doc-noteref">
                        <a href="#fn:112" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Use app-vetting tools or services to identify apps that appear to provide remote control to an attacker.
                </p>
                <p class="countermeasure">
                    Use application threat intelligence services to identify apps flagged as providing remote access to an attacker
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use Android Verify Apps feature to identify potentially harmful apps.
                </p>
                <p class="countermeasure">
                    When installing apps, be suspicious of those requesting access to OS services or sensors that do not appear related to the functionality of the app
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:237" role="doc-endnote">
                        <p>
                            M. Rogers, “Dendroid malware can take over your camera, record audio, and sneak into Google Play”, blog, 6 Mar. 2014;https://blog.lookout.com/blog/2014/03/06/dendroid/ [accessed 8/31/16]&nbsp;
                            <a href="#fnref:237" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:112" role="doc-endnote">
                        <p>
                            D. Storm, “Mobile RAT attack makes Android the ultimate spy tool”, Computerworld, 1 Mar. 2012; www.computerworld.com/article/2472441/cybercrime-hacking/mobile-rat-attack-makes-android-the-ultimate-spy-tool.html [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:112" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="retrieving-sensitive-information-from-clipboard">
                Retrieving Sensitive Information from Clipboard
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-35
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Any app that has been granted, or that has implicit OS-level permission to access the clipboard, may collect data left in the clipboard by other activity. A primary example would be using the device clipboard to copy-and-paste a password from an encrypted file to a form field.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Attacks on Android Clipboard
                    <sup id="fnref:238" role="doc-noteref">
                        <a href="#fn:238" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Update: XcodeGhost Attacker Can Phish Passwords and Open URLs Through Infected Apps
                    <sup id="fnref:239" role="doc-noteref">
                        <a href="#fn:239" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.
                </p>
                <p class="countermeasure">
                    Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.
                </p>
                <p class="countermeasure">
                    Deploy MAM solutions that can restrict access to the device clipboard and similar OS-provided services to a whitelist of trusted apps.
                </p>
                <p class="countermeasure">
                    Deploy MAM or container solutions that can restrict communication between trusted and untrusted apps using the device clipboard, copy-and-paste, and similar OS-provided services.
                </p>
                <p class="countermeasure">
                    Use application threat intelligence services to identify apps reported to abuse access to the device clipboard or similar OS-provided services to obtain sensitive information.
                </p>
                <p class="countermeasure">
                    Use app-vetting tools or services to identify applications that appear to abuse access to the device clipboard or similar OS-provided services to obtain sensitive information.
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    Use Android Verify Apps feature to identify potentially harmful apps.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:238" role="doc-endnote">
                        <p>
                            X. Zhang and W. Du, “Attacks on Android Clipboard”, Detection of Intrusions and Malware and Vulnerability Assessment: 11th International Conference, 2014;http://www.cis.syr.edu/~wedu/Research/paper/clipboard_attack_dimva2014.pdf [accessed 8/31/16]&nbsp;
                            <a href="#fnref:238" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:239" role="doc-endnote">
                        <p>
                            C. Xiao, “Update: XcodeGhost Attacker Can Phish Passwords and Open URLs Through Infected Apps”, blog, 18 Sep. 2015;http://researchcenter.paloaltonetworks.com/2015/09/update-xcodeghost-attacker-can-phish-passwords-and-open-urls-though-infected-apps/ [accessed 8/31/16]&nbsp;
                            <a href="#fnref:239" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="pre-installed-apps-invading-privacy">
                Pre-Installed Apps Invading Privacy
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-36
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                Mobile devices with cellular capability must generally be registered with a cellular carrier, and many devices are sold pre-configured to operate with a given carrier so users can have a fully functional device by the end of the initial purchase and activation at a retailer. As part of the configuration, the device may come with carrier-specific apps pre-installed, which may not be removable by the user. Because these apps come pre-installed, they may also may be granted implicit permission to access device resources without explicit knowledge or consent of the device owner. Privacy violations by such pre-installed apps may be more difficult to mitigate than by user-installed apps, which can be uninstalled at any time.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable, See Exploit or CVE Examples
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Device Squad: The story behind the FTC’s first case against a mobile device maker
                    <sup id="fnref:113" role="doc-noteref">
                        <a href="#fn:113" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
                <p>
                    Certifi-gate: Hundreds of Millions of Android Devices Could Be Pwned
                    <sup id="fnref:114" role="doc-noteref">
                        <a href="#fn:114" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
                <p>
                    Samsung Keyboard Security Risk Disclosed
                    <sup id="fnref:115" role="doc-noteref">
                        <a href="#fn:115" class="footnote" rel="footnote">
                            3
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4640">
                            CVE-2015-4640
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4641">
                            CVE-2015-4641
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    To mitigate the potential for abuse or exploits by pre-installed apps, ensure that devices have the latest security updates installed.
                </p>
                <p class="countermeasure">
                    Uninstall pre-installed apps that are not in use.
                </p>
                <p class="countermeasure">
                    For pre-installed apps that cannot be uninstalled, revoke access to device sensors and OS-provided services.
                </p>
                <p class="countermeasure">
                    For pre-installed apps that cannot be uninstalled, disable the app so that it cannot be launched.
                </p>
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    To mitigate the potential for abuse or exploits by pre-installed apps, ensure that devices have the latest security updates installed.
                </p>
                <p class="countermeasure">
                    Deploy MAM solutions to identify and block access to devices running high-risk pre-installed apps.
                </p>
                <p class="countermeasure">
                    Deploy MAM or container solutions to provide additional separation between trusted and untrusted pre-installed apps to mitigate the potential for pre-installed apps to violate the privacy of user actions performed within trusted apps.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:113" role="doc-endnote">
                        <p>
                            L. Fair, “Device Squad: The story behind the FTC’s first case against a mobile device maker”, blog, 22 Feb. 2013; www.ftc.gov/news-events/blogs/business-blog/2013/02/device-squad-story-behind-ftcs-first-case-against-mobile [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:113" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:114" role="doc-endnote">
                        <p>
                            Check Point Security Team, “Certifi-gate: Hundreds of Millions of Android Devices Could Be Pwned”, blog, 6 Aug. 2015; http://blog.checkpoint.com/2015/08/06/certifigate/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:114" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:115" role="doc-endnote">
                        <p>
                            “Samsung Keyboard Security Risk Disclosed”, 16 June 2015; www.nowsecure.com/keyboard-vulnerability/ [accessed 8/25/2016]&nbsp;
                            <a href="#fnref:115" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="unknowingly-performing-hidden-actions-in-other-apps">
                Unknowingly Performing Hidden Actions in Other Apps
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-37
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                This threat primarily affects Android devices prior to 6.0, in which an app could abuse Accessibility Services to display false graphical interfaces that overlay another app. The displayed app can relay user input to the overlayed app, and by creating an interface that leads the user to interact with specific areas of the device screen in a certain way (e.g. pretends to be a game), the user unknowingly carries out actions in the hidden app. The impact of this threat varies according to the sensitivity of the actions the user is enticed to perform, but could potentially be any action available through the user interface of the mobile OS or installed apps.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    “Accessibility Clickjacking” - The Next Evolution in Android Malware that Impacts More Than 500 Million Devices [^YAmit1]
                </p>
                <p>
                    Android ransomware variant uses clickjacking to become device administrator
                    <sup id="fnref:M-Zhang-1" role="doc-noteref">
                        <a href="#fn:M-Zhang-1" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Android.Lockdown.E
                    <sup id="fnref:Symantec-1" role="doc-noteref">
                        <a href="#fn:Symantec-1" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    To detect if an unauthorized app has access to restricted functionality, such as Device Administrator or Accessibility Services, use device settings to review permissions and identify any app for which that functionality is not authorized.
                </p>
                <p class="countermeasure">
                    On Android 6.0 and later, use device settings to revoke access to unauthorized services, such as Device Administrator or Accessibility Services. On earlier versions, permissions cannot be individually revoked; instead, the app must be uninstalled.
                </p>
                <p class="countermeasure">
                    To prevent this attack, use Android 5.0 and later devices, which does not allow apps to appear above any system dialogs used to grant permissions.
                </p>
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    To prevent this attack, use Android 5.0 and later devices, which does not allow apps to appear above any system dialogs used to grant permissions.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:M-Zhang-1" role="doc-endnote">
                        <p>
                            M. Zhang, “Android ransomware variant uses clickjacking to become device administrator”, Symantec Official Blog, 27 Jan. 2016, www.symantec.com/connect/blogs/android-ransomware-variant-uses-clickjacking-become-device-administrator [accessed 11/29/2016]&nbsp;
                            <a href="#fnref:M-Zhang-1" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:Symantec-1" role="doc-endnote">
                        <p>
                            “Android.Lockdown.E”, Symantec, 6 Aug. 2016, www.symantec.com/security_response/writeup.jsp?docid=2014-103005-2209-99 [accessed 11/29/2016]&nbsp;
                            <a href="#fnref:Symantec-1" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="abusing-device-resources-for-computations">
                Abusing Device Resources for Computations
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-38
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                While traditionally a threat against systems with greater individual system resources, the multitude of mobile devices provides an attacker who can run computations on a large number of compromised devices with an advantage in performimg other work. The computations performed on behalf of the attacker potentially cause a denial-of-service attack against the user due to the increased consumption of device resources such as battery power, computational power, network bandwidth, data usage limits, or device storage.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Mobile Malware Mines Dogecoins Litecoins for Bitcoin Payout
                    <sup id="fnref:V-Zhang-1" role="doc-noteref">
                        <a href="#fn:V-Zhang-1" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Androidos_kagecoin.hbt
                    <sup id="fnref:TrendMicro-1" role="doc-noteref">
                        <a href="#fn:TrendMicro-1" class="footnote" rel="footnote">
                            2
                        </a>
                    </sup>
                </p>
                <p>
                    Currency-mining Android malware is so aggressive it can physically harm phones
                    <sup id="fnref:D-Goodin-2" role="doc-noteref">
                        <a href="#fn:D-Goodin-2" class="footnote" rel="footnote">
                            3
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    To reduce the risk of installing apps with trojan functionality, only download apps from official app stores.
                </p>
                <p class="countermeasure">
                    Use malware detection apps that identify malware by anomalous energy consumption.
                </p>
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Use malware detection apps that identify malware by anomalous energy consumption.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:V-Zhang-1" role="doc-endnote">
                        <p>
                            V. Zhang, “Mobile Malware Mines Dogecoins and Litecoins for Bitcoin Payout”, TrendLabs Security Intelligence Blog, 25 Mar. 2104; http://blog.trendmicro.com/trendlabs-security-intelligence/mobile-malware-mines-dogecoins-and-litecoins-for-bitcoin-payout/ [accessed 01/05/2017]&nbsp;
                            <a href="#fnref:V-Zhang-1" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:TrendMicro-1" role="doc-endnote">
                        <p>
                            “androidos_kagecoin.hbt” in
                            <em>
                                Threat Encyclopedia
                            </em>
                            , TrendMicro, 2014;  http://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/AndroidOS_KageCoin.HBT [accessed 01/05/2017]&nbsp;
                            <a href="#fnref:TrendMicro-1" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                    <li id="fn:D-Goodin-2" role="doc-endnote">
                        <p>
                            D. Goodin, “Currency-mining Android malware is so aggressive it can physically harm phones”,
                            <em>
                                Ars Technica
                            </em>
                            , 19 Dec. 2017; https://arstechnica.com/information-technology/2017/12/currency-mining-android-malware-is-so-aggressive-it-can-physically-harm-phones/ [accessed 02/02/2018]&nbsp;
                            <a href="#fnref:D-Goodin-2" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="using-device-for-ddos">
                Using Device for DDoS
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-39
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                DDoS attacks are generally more effective with a greater number of systems an attacker can control. As many DDoS attack techniques only require a given participant to generate a small amount of network traffic, such as a spoofed DNS query used in a reflection attack, they can be easily generated from a mobile device. Given the high volume of these devices, the ability for an attacker to compromise a large number in a short time with trojan apps, and their potential to launch attacks from multiple networks (e.g., Wi-Fi and celluar connections, ) they are likely intermediary targets in DDoS campaigns.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable, See Exploit or CVE Examples
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    Android.Tascudap
                    <sup id="fnref:T-Katsuki-1" role="doc-noteref">
                        <a href="#fn:T-Katsuki-1" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <ul class="cve-list">
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-6982">
                            CVE-2017-6982
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2495">
                            CVE-2017-2495
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0599">
                            CVE-2017-0599
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0600">
                            CVE-2017-0600
                        </a>
                    </li>
                    <li>
                        <a target="_blank" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0603">
                            CVE-2017-0603
                        </a>
                    </li>
                </ul>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    To reduce the risk of installing apps with trojan functionality, only download apps from official app stores.
                </p>
                <p class="countermeasure">
                    Use malware detection apps that identify malware by anomalous network activity.
                </p>
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    Use malware detection apps that identify malware by anomalous network activity.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:T-Katsuki-1" role="doc-endnote">
                        <p>
                            T. Katsuki, “Android.Tascudap”, Symantec; www.symantec.com/security_response/writeup.jsp?docid=2012-121312-4547-99 [accessed 01/05/2017]&nbsp;
                            <a href="#fnref:T-Katsuki-1" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="capturing-raw-screen-buffer">
                Capturing Raw Screen Buffer
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-40
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                A malicious application that has elevated to root privileges may be able to capture the contents of the screen buffer, in essence taking a screenshot of any foreground activity. This would allow an attacker to steal authentication credentals or gain unauthorized access to any other sensitive information displayed in the foreground. Note that this capture would not be handled like a user-initiated screenshot, and would not automatically be stored in default locations read by camera or photo browser apps (e.g. Google Photos).
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    An investigation of Chrysaor Malware on Android
                    <sup id="fnref:AndroidDevBlog-1" role="doc-noteref">
                        <a href="#fn:AndroidDevBlog-1" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    An investigation of Chrysaor Malware on Android
                    <sup id="fnref:AndroidDevBlog-1:1" role="doc-noteref">
                        <a href="#fn:AndroidDevBlog-1" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    To limit the opportunity for an attacker to realize this threat following a security patch for a priviledge escalation vulnerability, ensure timely installation of mobile OS security updates.
                </p>
                <p class="countermeasure">
                    To reduce the probability of installing a malicious application, obtain public apps from an official app store (e.g., Google Play, iTunes Store).
                </p>
                <p class="countermeasure">
                    On Adroid, to prevent an attacker from remotely installing 3rd party malicious apps, ensure Security &gt; Unknown Sources is turned off.
                </p>
                <p class="countermeasure">
                    To detect malicious applications, use on-device agents that automatically perform signature- and/or behavior-based malware detection.
                </p>
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    To limit the opportunity for an attacker to realize this threat following a security patch for a priviledge escalation vulnerability, ensure timely installation of mobile OS security updates.
                </p>
                <p class="countermeasure">
                    To prevent users of managed Android devices from installing applications from unknown sources, deploy EMM solutions that effectively disable the Unknown Sources feature.
                </p>
                <p class="countermeasure">
                    To detect malicious applications, use on-device agents that automatically perform signature- and/or behavior-based malware detection.
                </p>
                <p class="countermeasure">
                    To prevent granting access to compromised devices, use tools or device APIs (Android SafetyNet, Samsung Knox hardware-backed remote attestation, or other applicable remote attestation technologies) to detect and block enterprise connectivity from devices that fail attestation or integrity checks.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:AndroidDevBlog-1" role="doc-endnote">
                        <p>
                            “An investigation of Chrysaor Malware on Android”, blog, 3 Apr. 2017; https://android-developers.googleblog.com/2017/04/an-investigation-of-chrysaor-malware-on.html [accessed 4/5/2017]&nbsp;
                            <a href="#fnref:AndroidDevBlog-1" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                            &nbsp;
                            <a href="#fnref:AndroidDevBlog-1:1" class="reversefootnote" role="doc-backlink">
                                ↩
                                <sup>
                                    2
                                </sup>
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="recording-audio-by-placing-or-answering-phone-calls">
                Recording Audio by Placing or Answering Phone Calls
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-41
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                An attacker who can place or answer calls without the device user’s knowledge could remotely record audio from within the vicinity of the device without directly accessing the device microphone.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    An investigation of Chrysaor Malware on Android
                    <sup id="fnref:AndroidDevBlog-1" role="doc-noteref">
                        <a href="#fn:AndroidDevBlog-1" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    An investigation of Chrysaor Malware on Android
                    <sup id="fnref:AndroidDevBlog-1:1" role="doc-noteref">
                        <a href="#fn:AndroidDevBlog-1" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    To prevent data collection using the device microphone, install a protective cover over the device which reliably blocks sound from being picked up when features requiring use of the microphone are not in use. Alternatively, turn off the device or do not take it into areas in which audio collection is a main concern.
                </p>
                <p class="countermeasure">
                    To reduce the potential for such an exploit for which a security patch is available, ensure OS security updates are installed in a timely fashion.
                </p>
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    To reduce the potential for such an exploit for which a security patch is available, ensure OS security updates are installed in a timely fashion.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:AndroidDevBlog-1" role="doc-endnote">
                        <p>
                            “An investigation of Chrysaor Malware on Android”, blog, 3 Apr. 2017; https://android-developers.googleblog.com/2017/04/an-investigation-of-chrysaor-malware-on.html [accessed 4/5/2017]&nbsp;
                            <a href="#fnref:AndroidDevBlog-1" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                            &nbsp;
                            <a href="#fnref:AndroidDevBlog-1:1" class="reversefootnote" role="doc-backlink">
                                ↩
                                <sup>
                                    2
                                </sup>
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
        <li>
            <h1 id="malware-uninstalls-itself">
                Malware Uninstalls Itself
            </h1>
            <p>
                <a href="https://pages.nist.gov/mobile-threat-catalogue/contributing.html">
                    Contribute
                </a>
            </p>
            <p>
                <b>
                    Threat Category:
                </b>
                Malicious or privacy-invasive application
            </p>
            <p>
                <b>
                    ID:
                </b>
                APP-43
            </p>
            <p>
                <b>
                    Threat Description:
                </b>
                By abusing root privileges, a malicious application could avoid detection by automatically deleting itself (with no user interaction) after executing malicious behaviors. This would reduce the opportunity for detection and identification of the malicious activity, which may further prevent or limit the ability for a victim to recover from the attack.
            </p>
            <p>
                <b>
                    Threat Origin
                </b>
            </p>
            <div class="paragraph">
                <p>
                    An investigation of Chrysaor Malware on Android
                    <sup id="fnref:AndroidDevBlog-1" role="doc-noteref">
                        <a href="#fn:AndroidDevBlog-1" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    Exploit Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    An investigation of Chrysaor Malware on Android
                    <sup id="fnref:AndroidDevBlog-1:1" role="doc-noteref">
                        <a href="#fn:AndroidDevBlog-1" class="footnote" rel="footnote">
                            1
                        </a>
                    </sup>
                </p>
            </div>
            <p>
                <b>
                    CVE Examples
                </b>
            </p>
            <div class="paragraph">
                <p>
                    <i>
                        Not Applicable
                    </i>
                </p>
            </div>
            <p>
                <b>
                    Possible Countermeasures
                </b>
            </p>
            <div class="paragraph">
                <b>
                    Enterprise
                </b>
                <p class="countermeasure">
                    To help reduce the opportunity for attack following availability of patches, ensure timely installation of mobile OS security updates.
                </p>
                <p class="countermeasure">
                    On Android devices, to prevent an attacker from remotely installing malicious applications from unknown sources, ensure Security &gt; Unknown Sources is turned off; an enterprise can deploy EMM solutions that enforce a policy to never permit the installation of apps from unknown sources.
                </p>
                <p class="countermeasure">
                    To decrease the time-to-detection following the installation of a malicious app, deploy on-device agents that automatically detect the installation of any app and initiate either local (on-device) or remote processes for detection and identification of malware and potentially-harmful applications.
                </p>
                <b>
                    Mobile Device User
                </b>
                <p class="countermeasure">
                    To help reduce the opportunity for attack following availability of patches, ensure timely installation of mobile OS security updates.
                </p>
                <p class="countermeasure">
                    To reduce the potential of installing malicious applications, download public apps directly from an official app store (e.g., Google Play, iTunes Store).
                </p>
                <p class="countermeasure">
                    On Android devices, to prevent an attacker from remotely installing malicious applications from unknown sources, ensure Security &gt; Unknown Sources is turned off; an enterprise can deploy EMM solutions that enforce a policy to never permit the installation of apps from unknown sources.
                </p>
                <p class="countermeasure">
                    To decrease the time-to-detection following the installation of a malicious app, deploy on-device agents that automatically detect the installation of any app and initiate either local (on-device) or remote processes for detection and identification of malware and potentially-harmful applications.
                </p>
            </div>
            <p>
                <b>
                    References
                </b>
            </p>
            <div class="footnotes" role="doc-endnotes">
                <ol>
                    <li id="fn:AndroidDevBlog-1" role="doc-endnote">
                        <p>
                            “An investigation of Chrysaor Malware on Android”, blog, 3 Apr. 2017; https://android-developers.googleblog.com/2017/04/an-investigation-of-chrysaor-malware-on.html [accessed 4/5/2017]&nbsp;
                            <a href="#fnref:AndroidDevBlog-1" class="reversefootnote" role="doc-backlink">
                                ↩
                            </a>
                            &nbsp;
                            <a href="#fnref:AndroidDevBlog-1:1" class="reversefootnote" role="doc-backlink">
                                ↩
                                <sup>
                                    2
                                </sup>
                            </a>
                        </p>
                    </li>
                </ol>
            </div>
        </li>
    </ul>
</doc>