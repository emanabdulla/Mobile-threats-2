<?xml version="1.0" encoding="utf-8"?>
<items>
<item><Physical_Access><id> PHY-7</id><name>Physical_Access</name><category> Physical Access</category><description> Mobile device batteries contain Lithium-ion batteries, which based on their design and chemical composition, will always produce some heat (and a combustible gas) during charging or expenditure of charge. They are, however, designed to dissipate some measure of these as they are generated. However, if a battery is damaged, defective, poorly designed, or misused, the battery has an increased chance to generate more heat over time than it can safely dissipate, which can lead to overheating. Overheating can break-down battery components and cause an effect called `thermal (or heat) runaway’. During this effect, the electrolytes in the battery undergo a chemical reaction that produces additional heat and gas, which perpetuates the effect. Eventually, the excess heat and gas will combust, which may deform the battery or even cause fire or explosion, potentially resulting in damage to other components of the device.
Mobile devices contain safeguards to prevent overheating. The mobile OS may turn off the device if the temperature becomes too great to stop generating additional heat in the CPU and other components. The battery controller will prevent excess current from entering the battery terminal (over-charging), which rapidly generates excess heat. However, overheating can still occur if the device is damaged, defective, or poorly designed. Additionally, as a device is recharged, and particularly if rapidly charged, Lithium ions may permeate the electrolyte separator and bond to the opposite terminal. If enough Litium bonds in this manner, a short-circuit occurs inside battery, which will greatly increase the risk of overheating.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Allow a device that is very warm or hot to the touch cool before charging it.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Do not charge a device that is in a hot or heat-preserving environment, such as in direct sunlight, in a hot car, or under a blanket, as this will decrease the rate at which the device can dissipate heat.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Avoid the use of quick-charge chargers, which will increase the heat produced during charging operations. and will increase risk of causing the battery to overheat.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Charge a device using peripherals specifically designed for it, such as the charging unit and cable packaged with the device.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To lessen the amount of heat produced by the CPU during charging operations, place the device into sleep mode or turn it completely off while charging&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To lessen the amount of heat produced by the battery during charging operations, charge the device from the USB port of a trusted computer.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;If a device becomes hot while charging while asleep or off, take it to a authorized service center so a defective battery can be replaced before causing damage to the device.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Physical_Access></item>
<item><Physical_Access><id> PHY-4</id><name>Physical_Access</name><category> Physical Access</category><description> Leaving mobile devices unattended and unlocked for any period of time prevents a serious security and privacy risk. Any individual near the device subsequently has unhindered access, and can perform any malicious act, such as installing backdoors, pairing malicious devices, or gathering data.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Enforce activation of the auto-lock feature of a mobile device with a maximum idle time that reduces the likelihood an attacker will gain physical access to the device in an unlocked state&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Activate auto-lock features based on loss of proximity to a trusted, paired device attended by the mobile device user, such as a smart watch&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Require additional user-to-app or user-to-service authentication for apps that provide access to sensitive data&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Educate end-users of the importance of locking their device if they are leaving it unattended in an area lacking strong physical security controls.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Enforce activation of the auto-lock feature of a mobile device with a maximum idle time that reduces the likelihood an attacker will gain physical access to the device in an unlocked state&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Activate auto-lock features based on loss of proximity to a trusted, paired device attended by the mobile device user, such as a smart watch&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Physical_Access></item>
<item><Physical_Access><id> PHY-6</id><name>Physical_Access</name><category> Physical Access</category><description> Physically swapping a user’s SIM with a compromised SIM could an allow an adversary to run malicious javacard applets.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase the complexity of this attack, use devices that implement an integrated SIM or eSIM, which cannot be readily replaced with a malicious component.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce opportunity for this attack, when leaving the device directly unattended, use strong physical security controls (e.g., lock it into a secure container).&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase the complexity of this attack, use devices that implement an integrated SIM or eSIM, which cannot be readily replaced with a malicious component.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Physical_Access></item>
<item><Physical_Access><id> PHY-2</id><name>Physical_Access</name><category> Physical Access</category><description> Compromised PCs may try to exploit a trusted USB connection between a mobile device and the PC, and infect the mobile device.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;When charging a device, avoid connecting mobile devices directly to computers, and prefer the use of simple corded chargers obtained directly from the device vendor.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent some attacks over USB connectivity, disable USB debugging on Android devices when that feature is not in use.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opportunity for an attacker to directly connect a device to a malicious computer, use strong physical security when a device is being left directly unattended (e.g., lock it in a secure container).&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent some attacks over USB connectivity, ensure the device has an unlock code set and is explicitly locked when being left directly unattended.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Physical_Access></item>
<item><Physical_Access><id> PHY-3</id><name>Physical_Access</name><category> Physical Access</category><description> Discarded devices may not be properly erased, potentially exposing the data to anyone that has access to the device after disposal.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use EMM or MDM solutions in combination with devices that successfully enforce data encryption and device lock policies (unlock code set, unlock code strength requirements, auto-locking enabled, and auto-wipe enabled) such that the recovery of data from an improperly retired device becomes highly improbable.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Consider devices containing storage media that successfully implement secure-erase functions such that initiating a device wipe or factory reset is sufficient to render the recovery of any wiped data infeasible.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Physical_Access></item>
<item><Physical_Access><id> PHY-5</id><name>Physical_Access</name><category> Physical Access</category><description> Side channel attacks allow adversaries to extract information or perform malicious actions via the implmentation of the system itself, rather than algorithmic weaknesses.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase the difficulty of this attack, use devices that implement mitigations in their cryptograhic functions against side-channel attacks, such as iOS 9.x and later devices.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase the difficulty of this attack, use devices that implement mitigations in their cryptograhic functions against side-channel attacks, such as iOS 9.x and later devices.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Avoid the use of apps that may implement their own cryptographic functions without validation that appropriate mitigations against side-channel attacks have been implemented.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Educate users to be mindful of their physical surroundings when using mobile devices, and to report the appearance of unexpected hardware components to IT security immediately.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Educate users to not directly connect their mobile devices to untrusted systems or docking stations, and to maintain strong physical security for innocent components such as USB charging cables&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Physical_Access></item>
<item><Application><id> APP-43</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> By abusing root privileges, a malicious application could avoid detection by automatically deleting itself (with no user interaction) after executing malicious behaviors. This would reduce the opportunity for detection and identification of the malicious activity, which may further prevent or limit the ability for a victim to recover from the attack.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To help reduce the opportunity for attack following availability of patches, ensure timely installation of mobile OS security updates.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;On Android devices, to prevent an attacker from remotely installing malicious applications from unknown sources, ensure Security &amp;gt; Unknown Sources is turned off; an enterprise can deploy EMM solutions that enforce a policy to never permit the installation of apps from unknown sources.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To decrease the time-to-detection following the installation of a malicious app, deploy on-device agents that automatically detect the installation of any app and initiate either local (on-device) or remote processes for detection and identification of malware and potentially-harmful applications.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To help reduce the opportunity for attack following availability of patches, ensure timely installation of mobile OS security updates.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the potential of installing malicious applications, download public apps directly from an official app store (e.g., Google Play, iTunes Store).&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;On Android devices, to prevent an attacker from remotely installing malicious applications from unknown sources, ensure Security &amp;gt; Unknown Sources is turned off; an enterprise can deploy EMM solutions that enforce a policy to never permit the installation of apps from unknown sources.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To decrease the time-to-detection following the installation of a malicious app, deploy on-device agents that automatically detect the installation of any app and initiate either local (on-device) or remote processes for detection and identification of malware and potentially-harmful applications.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-41</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> An attacker who can place or answer calls without the device user’s knowledge could remotely record audio from within the vicinity of the device without directly accessing the device microphone.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent data collection using the device microphone, install a protective cover over the device which reliably blocks sound from being picked up when features requiring use of the microphone are not in use. Alternatively, turn off the device or do not take it into areas in which audio collection is a main concern.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the potential for such an exploit for which a security patch is available, ensure OS security updates are installed in a timely fashion.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the potential for such an exploit for which a security patch is available, ensure OS security updates are installed in a timely fashion.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Supply_Chain><id> SPC-21</id><name>Supply_Chain</name><category> Supply Chain</category><description> Low level backdoor inadvertently left by firmware developer.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprises&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Obtain devices from a reputable vendor with a strong record of addressing security flaws in a timely fashion.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Obtain devices from a reputable vendor with a strong record of addressing security flaws in a timely fashion.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opportunity for an attacker to exploit a patched vulnerability, ensure security updates are applied in a timely manner by configuring automated installation of or, at a minimum, automatic notification of the availability of security updates.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opportunity for attacks against various firmware components, disable device features when not in use (e.g., Bluetooth, Wi-Fi, NFC), and globally revoke access to unused device sensors or OS-provided functions (e.g., camera, microphone, location services).&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opportunity for an attacker to exploit a patched vulnerability, ensure security updates are applied in a timely manner by configuring automated installation of or, at a minimum, automatic notification of the availability of security updates.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-20</id><name>Supply_Chain</name><category> Supply Chain</category><description> An adversary with access to a software support activity can substitute malicious software for a legitimate component during a software upgrade.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-19</id><name>Supply_Chain</name><category> Supply Chain</category><description> An adversary with access to critical components during packaging and distribution can substitute a malicious component for a legitimate component.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-17</id><name>Supply_Chain</name><category> Supply Chain</category><description> An adversary with access to critical components as they are being integrated into the acquired system can insert maliciously altered hardware or firmware into the system.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-16</id><name>Supply_Chain</name><category> Supply Chain</category><description> A gray market adversary can exploit an obsolescence program to introduce replacement hardware with malware incorporated.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-18</id><name>Supply_Chain</name><category> Supply Chain</category><description> An adversary with access to software being integrated into a system during a subassembly manufacturing process can embed malware into a sub-assembly.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-15</id><name>Supply_Chain</name><category> Supply Chain</category><description> Unsecured, potentially malicious 3rd party components of a technology or code-base can be packaged with a product before shipment to an acquirer.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Cellular><id> CEL-16</id><name>Cellular</name><category> VoLTE</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-15</id><name>Cellular</name><category> VoLTE</category><description> If an attacker is able to inject data into a VoLTE channel, they could increase charges on the handset owner for their billing cycle.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Stack><id> STA-19</id><name>Stack</name><category> Baseband Subsystem</category><description> If the baseband and application processor are not adequately separated, an adversary could exploit this to gain access to primary operating system data.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Original Equipment Manufacturer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Implementation of a baseband firewall&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-18</id><name>Stack</name><category> Baseband Subsystem</category><description> A vulnerable baseband subsystem on a device can leave the device exposed to remote code execution attacks, allowing the adversary to execute code with the same level of permissions as the baseband software.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Original Equipment Manufacturer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Implementation of a baseband firewall.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-17</id><name>Stack</name><category> Boot firmware</category><description> Downgrading the phone’s operating system may expose the device to previously patched security vulnerabilities.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use EMM/MDM solutions in combination with devices that can detect mobile OS verions and successfully block access to enterprise resources from devices running unapproved OS versions.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of iOS devices; to prevent devices from being downgraded to older versions that lack the latest security updates, iOS uses a process called System Software Authorization. &lt;sup id="fnref:54" role="doc-noteref"&gt;&lt;a href="#fn:54" class="footnote" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-16</id><name>Stack</name><category> Boot firmware</category><description> Firmware malware is not present in the operating system and runs before the OS loads and targets OS components in order to modify or subvert their behavior. Bootkits execute early in the system boot and have the ability to remain undetected and be persistent, surviving hard drive reformatting or OS reinstallation.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-15</id><name>Stack</name><category> Boot firmware</category><description> Malicious actors can use an unlocked bootloader to gain root access to phones and to launch attack code. These vulnerabilities would allow an attacker to execute arbitrary code as part of the bootloader compromising the entire chain of trust.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Educate users of the risks of unlocking the device bootloader.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use EMM/MDM solutions or on-device agents that can potentially detect rooted or jail-broken devices and subsequently, successfully block access to enterprise resources.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To mitigate the potential of accessing sensitive data or functionality on rooted or jail-broken devices, leverage device attestation APIs to determine the device is in a known-good state prior to executing sensitve actions.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-42</id><name>Stack</name><category> SD Card</category><description> If the configuration of the mobile device and computer allow, an attached SD card will automatically be mounted by a USB-connected computer as a mass storage device. If the SD card contains executable files designed to automatically execute (e.g. autoexec.bat), they will automatically execute. A malicious mobile app can exploit this weakness by writing malicious executables to an attached SD card.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Computer User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Configure the computer to not automatically execute content stored on mounted USB devices.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Configure the mobile device to not automatically make attached SD media available to a USB-connected computer.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Remove any attached SD card from the mobile device prior to connecting to a computer.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use an anti-malware app to scan the attached SD card for malicious files prior to connecting to a computer.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Privacy><id> PRI-0</id><name>Privacy</name><category> Behavior Tracking</category><description> Adversaries may use ultrasonic beacons to track device location and/or user behavior.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Scrutinize apps that request access to the device microphone with an understanding that they may listen for and respond to ultrasonic beacons without user consent or knowledge.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To help identify mobile apps that respond to ultrasonic beacons and better inform decisions regarding their use on any mobile device, consult resources such as the AddOns Detector website.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent apps that use ultrasonic beacons in a known and acceptible manner from potentially violating privacy when active outside their intended use (e.g., after leaving a store that uses beacons to offer targeted discounts), either block permission to the microphone, force-close, or disable the app when leaving its intended context.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To identify apps that may abuse access to the microphone to receive ultrasonic beacons and take action without user consent on managed devices, employ app-vetting services that can identify and notify users of potentially privacy-invasive behaviors.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile OS Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent apps from generating inaudible signals to relay ultrasonic beacons to other devices without user knowledge or consent, expand existing device resource usage and/or permission models to include controls that prevent apps from abusing the ability listen to or generate audio at ultrasonic frequencies.&lt;/p&gt;
        
    
        &lt;b&gt;OEM Manufacturer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent apps from generating inaudible signals to relay ultrasonic beacons to other devices without user knowledge or consent, expand existing device resource usage and/or permission models to include controls that prevent apps from abusing the ability listen to or generate audio at ultrasonic frequencies.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Privacy></item>
<item><Stack><id> STA-41</id><name>Stack</name><category> SD Card</category><description> Unauthorized access to data stored on an attached SD card may have multiple causes. Vulnerabilities in the microcontroller integrated into the SD card itself may allow a crafted app to access arbitrary memory locations. Further, apps may store data on an attached SD card in locations readable by any app with permission to access an attached SD card. Additionally, as removable media, SD cards can be mounted to devices accessed by operating systems or applications that may ignore or explicitly bypass any security information (e.g. file permissions) applied to stored data.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Configure the mobile device to encrypt data stored on an attached SD card.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;If sensitive data is to be stored on or processed by an SD card, use a distinct SD card for each security context (e.g. business and personal) to limit the potential for data leakage between them via common use of an attached SD card.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;On Android devices running 5.0 or later, do not grant access to the SD card to untrusted apps.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Remove any attached SD card when not in use.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;When not in use, secure SD cards storing sensitive data with strong physical security controls.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or containerization solutions that support policies that can enforce strong encryption on any data stored on the SD card by trusted apps&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or containerization solutions that support policies that can restrict access to the SD card by untrusted apps.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting services to determine if any apps present in your mobile device deployment store data on or access an SD card in an untrusted manner so appropriate policies and controls can be established to mitigate those risks.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-40</id><name>Stack</name><category> SD Card</category><description> SD cards contain an integrated processor which may contain vulnerabilities an attacker can exploit to achieve arbitrary code execution in the context of the SD card or the calling application.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;On Android devices running 5.0 or later, do not grant access to the SD card to untrusted apps.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Remove an attached SD card when not in use.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or containerization solutions that support policies that can restrict access to the SD card by untrusted apps.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-36</id><name>Stack</name><category> USIM / SIM / UICC security</category><description> Differential Power Analysis a statistical attack on a cryptographic algorithm which compares a hypothesis with a measured outcome and is often capable of extracting an encryption key from a smart card or other computing device</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-38</id><name>Stack</name><category> USIM / SIM / UICC security</category><description> Owners of pre-shared keys may modify, insert, replay or delete applications and/or data which is downloaded to the SIM or USIM. This includes both accidental and deliberate manipulation.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-37</id><name>Stack</name><category> USIM / SIM / UICC security</category><description> Power glitching microprocessors are designed to operate from a stable voltage wherein interruptions of the power supply are likely to crash running applications or reset the circuit. A power glitch will affect both the stored and the threshold values. Different internal capacities will cause the values to be influenced differently, possibly resulting in a misinterpretation of the actual value.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-35</id><name>Stack</name><category> USIM / SIM / UICC security</category><description> Focused Ion beam (FIB) it shoots ions that can make changes with the circuitry. Blown fuses of test circuits can be reconnected, or hidden internal signals can be forwarded to external wires.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-34</id><name>Stack</name><category> USIM / SIM / UICC security</category><description> Probe Stations allows tiny probe needles to be positioned on arbitrary wires on a naked chip to create new channels to the outside world. All data exchange between the between the CPU and the memories can be tapped and it is possible to retrieve full running program code and program data including keys.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-33</id><name>Stack</name><category> USIM / SIM / UICC security</category><description> Microscopes optical and Scanning Electron Microscopes (SEM) can be used for optical analysis and reverse engineering. A chip that is still capable of performing its electronic functions can be analyzed to reveal active sections in the chip and potentially even running code or passing data values.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-32</id><name>Stack</name><category> USIM / SIM / UICC security</category><description> Chemical Solvents, Etching and Staining Materials smartcards can be de-layered and de-capsulated by etching materials. Etching dissolves the metal and silicon layers of the chip. Staining is an advanced etching technique that uses differences in etching speed to reveal subtle material differences that define the ones and zeroes in some ROM memories.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-31</id><name>Stack</name><category> USIM / SIM / UICC security</category><description> Cryptographic protocols handle consecutive cryptographic operations to perform transactions. Cryptographic protocols must be carefully designed to avoid fallbacks with transactions.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id>None</id><name>Stack</name><category>This threat has been moved to </category><description>None</description><countermeasure>None</countermeasure></Stack></item>
<item><Stack><id> STA-29</id><name>Stack</name><category> USIM / SIM / UICC security</category><description> Smartcard security can be compromised with rogue applets by rogue carrier.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-27</id><name>Stack</name><category> USIM / SIM / UICC security</category><description> Use of parameter poisoning or buffer overflow attacks could leave the system in an unknown or unstable state.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-28</id><name>Stack</name><category> USIM / SIM / UICC security</category><description> Smartcard file systems have detailed permissions on files and directories. The command access permissions determine the security procedures to access a file. Access permissions can be confusing to smartcard operating systems with complex interactions.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-26</id><name>Stack</name><category> USIM / SIM / UICC security</category><description> Smartcard operating systems carry a number of hidden commands that can be abused to retrieve data from or modify data within the smartcard. These commands can remain active from an initialization phase or execution of a previous application.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-25</id><name>Stack</name><category> USIM / SIM / UICC security</category><description> An attacker could modify, insert, replay or delete user traffic on the UICC-terminal interface.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-24</id><name>Stack</name><category> USIM / SIM / UICC security</category><description> An attacker could masquerade as a USIM or a terminal in order to intercept data on the UICC-terminal interface.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-23</id><name>Stack</name><category> USIM / SIM / UICC security</category><description> An attacker could modify the IMEI of a terminal and use a valid SIM with it to access services.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-22</id><name>Stack</name><category> USIM / SIM / UICC security</category><description> A stolen SIM card allows an attacker to control the mobile number, open new cellular accounts using the victim’s credentials, buy new phones as the victim, or steal the victim’s identity altogether.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Carriers&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Carriers should be encouraged to strongly authenticate account holders before allowing account changes such as issuance of new SIM cards&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-21</id><name>Stack</name><category> USIM / SIM / UICC security</category><description> Applications on the SIM card can be remotely configured by operators by sending a special class of SMS. Each application on a SIM card is configured with a corresponding minimum security level (MSL). Attackers can only exploit applications where the MSL is set to zero. An unprivileged user is normally gained through attacking a system and exploiting an unprivileged process. If an application with abuse potential is present on the SIM card, it can instruct a mobile phone to do various things, such as make a call, send an SMS, get location, prompt the user for input, establish a TCP/TLS connection, or open a browser on a specific URL.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-20</id><name>Stack</name><category> USIM / SIM / UICC security</category><description> Management protocols built into the SIM cards allow the cards to communicate with servers belonging to the service providers. The communication between the SIM cards and the service providers are messages that aren’t displayed on the phone but forwarded directly to the SIM card without the user’s knowledge. These messages are encrypted or protected by cryptographic signatures. The over-the-air server and the SIM card use the same key. If attackers figure out the key and they can trick the SIM card into thinking that they are the network provider, the attacker can force the SIM card to use old weak DES algorithm and can subsequently decrypt communications between the device and the network operator. Once an attackers cracks the key, they can commit SMS fraud, circumvent caller ID checks, manipulate voicemails, redirect incoming calls and text messages, track and phish users, and install malware on their devices.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-14</id><name>Stack</name><category> Isolated Execution Environments</category><description> Adversaries may use lab equipment to reverse engineer system components.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Assume any device that has been under the physical control of an attacker for any timeframe sufficient to have executed this attack has  been permanently compromised and should be transition to the to end-of-lifecycle.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-13</id><name>Stack</name><category> Isolated Execution Environments</category><description> Adversaries that are able to reverse engineer parts of the TEE may gain access to cryptographic secrets and other sensitive information.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Assume any device that has been under the physical control of an attacker for any timeframe sufficient to have executed this attack has been permanently compromised and should be transitioned to end-of-lifecycle.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-12</id><name>Stack</name><category> Isolated Execution Environments</category><description> Software developers often create backdoors as administrative tools that are used for troubleshooting or to access encrypted data. However, backdoors may create security risks that can be used by threat actors to bypass security policies and mechanisms which can result in system compromise.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-11</id><name>Stack</name><category> Isolated Execution Environments</category><description> Isolated execution environments, such as a Trusted Execution Environment, often run on a dedicated hardware chip. It has access to areas of physical memory that are restricted from the mobile operating system, which are often used to protect high-value cryptographic keys and other secrets. If a vulnerability in either the execution environment’s operating system or a program executing under it is exploited, an attacker may gain access to these keys or be able to obtain the output from sensitive cryptographic operations that require them.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To decrease the latency between availability and installation of security fixes for isolated execution environments, configure devices (potentially using EMM solutions) to automatically install security updates, or at a minimum, provide automated notification to the user that security updates are available for installation.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To decrease the latency between availability and installation of security fixes for isolated execution environments, configure devices (potentially using EMM solutions) to automatically install security updates, or at a minimum, provide automated notification to the user that security updates are available for installation.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To decrease the risk of persistent and unpatched vulnerabilities in isolated execution environments in deployed devices, consider acquiring mobile devices from vendors and carriers with a history of addressing and releasing security updates in a timely fashion.&lt;/p&gt;
        
    
        &lt;b&gt;Original Equipment Manufacturer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use TEE OS that provide integrity protections over trustlets, such as verification of digital signatures on installed trustlets, such as Trusty OS. &lt;sup id="fnref:222" role="doc-noteref"&gt;&lt;a href="#fn:222" class="footnote" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id>None</id><name>Stack</name><category>This threat has been moved to </category><description>None</description><countermeasure>None</countermeasure></Stack></item>
<item><Stack><id> STA-9</id><name>Stack</name><category> Device Drivers</category><description> Privilege escalation, input validation, or buffer overflow vulnerabilities in a device driver or the associated firmware may allow an attacker to achieve arbitrary code execution in the context of the firmware or OS kernel, information disclosure, or denial-of-service attacks.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use EMM/MDM solutions in combination with devices that successfully enforce a policy to maintain a minimum OS patch level and block access to enterprise resources to non-compliant or devices with known-exploitable vulnerabilities.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Purchase devices from vendors/carriers who have committed to providing timely updates or have good track records for providing prompt security updates.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use EMM/MDM solutions in combination with other tools or device APIs (Android SafetyNet, Samsung Knox hardware-backed remote attestation, or other applicable remote attestation technologies) to detect and block enterprise connectivity from devices that show indications of device compromise.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability an exploit for a driver for a peripheral or OS-provided service that can be disabled via device management APIs, use EMM/MDM solutions in combination with devices that successfully enforces a policy to disable unauthorized resources, including temporarily disabling known-vulnerable resources until a security patch is available.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability an exploit for a driver for an access-controlled peripheral or OS-provided service (e.g., camera, microphone), use OS configuration settings to disable or block access to these resources, with a preference for global settings (e.g., disabling NFC device-wide) over app-specific permissions.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-43</id><name>Stack</name><category> Mobile Operating System</category><description> All operating systems intend to separate normally executed processes (e.g. excepting debuggers or similar environments that were specifically designed otherwise), thereby preventing one user-level process from accessing the memory allocated to another process in any way. Vulnerabilities in the design or implementation of the mobile OS, kernel, or the underlying computational hardware (e.g. CPU), may allow a malicious process to access memory locations allocated to another process. As a result, the attacker may be able to extract secrets (e.g. cryptographic keys, sensitive documents) from other processes, to potentially include the OS services or the kernel itself.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opportunity for an attacker to compromise the confidentiality of secrets in process memory, the memory location allocated to any secrets, such as cryptographic keys, should be explicitly overwritten as soon as its contents are no longer in use.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opportunity for an attacker to compromise the confidentiality of secrets in process memory, secrets (e.g. cryptographic keys) should not be read into memory until they are needed as input to computations.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opportunity for an attacker to leverage any underlying vulnerability in the mobile OS or computing hardware, apply OS security updates in a timely fashion.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opportunity for an attacker to leverage any underlying vulnerability in the mobile OS or computing hardware, apply OS security updates in a timely fashion.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-39</id><name>Stack</name><category> Mobile Operating System</category><description> Certain hardware vulnerabilities exist in devices that could allow a user to root or jailbreak their device.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure devices are kept up-to-date with security patches to decrease the likelihood that they can be rooted/jailbroken.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-8</id><name>Stack</name><category> Mobile Operating System</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;For Android devices, to reduce the duration of this threat, when needing to install app not available from the Google Play Store (e.g., in-house enterprise app), only enable the &lt;strong&gt;Unknown Sources&lt;/strong&gt; option in &lt;strong&gt;Settings &amp;gt; Security&lt;/strong&gt; menu for as long as necessary to complete installation of the 3rd party app; disable it when installation is complete.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability that an attacker exploits the reduced security posture to install unauthorized apps on the device, while &lt;strong&gt;Unknown Sources&lt;/strong&gt; is enabled, perform enterprise app installation while connected to trusted and secure Wi-Fi networks, or at a minimum, over a VPN connection to a secured enterprise network.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability that an attacker exploits the reduced security posture to install unauthorized apps on the device, while &lt;strong&gt;Unknown Sources&lt;/strong&gt; is enabled, limit device activity to installing trusted enterprise applications through trusted channels (e.g., enterprise app store). Web pages, e-mails, SMS/MMS messages, and NFC/RFID tags can all present (and potentially automatically access) URLs to malicious apps that would normally blocked from installation.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-6</id><name>Stack</name><category> Mobile Operating System</category><description> When connected through USB, potentially malicious applications can be installed on the mobile device, sometimes without the user’s knowledge. These applications can be installed intentionally by the user, or by an infected computer or charging station.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability of this attack, follow general best practices for securing systems to which a trusted mobile device may synchronize or access debugging functionality. For example, ensure the OS and applications maintain current security updates, endpoint protection software is installed, and systems are monitored for anomalous behavior.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Consider use of Android 4.2.2 or later devices. In Android 4.2.2, connections to ADB are authenticated with an RSA keypair. This prevents unauthorized use of ADB where the attacker has physical access to a device. &lt;sup id="fnref:220" role="doc-noteref"&gt;&lt;a href="#fn:220" class="footnote" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of Android 6.0 or later, in which users must confirm to allow USB access to files, storage, or other functionality on the phone. The default behavior permits charging only. &lt;sup id="fnref:221" role="doc-noteref"&gt;&lt;a href="#fn:221" class="footnote" rel="footnote"&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of iOS 7.x or later, in which synchronization with a computer over USB that requires the device be unlocked and the user confirm an explicit trust request. Failure to establish trust permits charging only.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Provide extra device chargers to users that plug directly into an electrical socket and encourage users to use them instead of plugging into potentially malicious USB charging stations or USB ports on potentially infected computers.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent some varities of this attack, ensure ADB debugging is disabled.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability of this attack, do not accept prompts to trust untrusted systems.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Consider use of Android 4.2.2 or later devices. In Android 4.2.2, connections to ADB are authenticated with an RSA keypair. This prevents unauthorized use of ADB where the attacker has physical access to a device. &lt;sup id="fnref:220:1" role="doc-noteref"&gt;&lt;a href="#fn:220" class="footnote" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of Android 6.0 or later, in which users must confirm to allow USB access to files, storage, or other functionality on the phone. The default behavior permits charging only. &lt;sup id="fnref:221:1" role="doc-noteref"&gt;&lt;a href="#fn:221" class="footnote" rel="footnote"&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of iOS 7.x or later, in which synchronization with a computer over USB that requires the device be unlocked and the user confirm an explicit trust request. Failure to establish trust permits charging only.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Provide extra device chargers to users that plug directly into an electrical socket and encourage users to use them instead of plugging into potentially malicious USB charging stations or USB ports on potentially infected computers.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-7</id><name>Stack</name><category> Mobile Operating System</category><description> Malicious configuration profiles may contain unwanted CA certificates or VPN settings to route the device’s network traffic through an adversary’s system. The device could also potentially be enrolled into a malicious Mobile Device Management (MDM) system.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent attackers from creating counterfeit management profiles by signing them with stolen enterprise certificates, ensure strong security measures are used to protect both enterprise access to trusted certificate services (e.g., VeriSign) and any obtained certficates (e.g. MDM server certificates, Apple Push Notification Services certificates).&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent a device from accepting a malicious management profile after enrollment, use EMM/MDM solutions in combination with devices that properly verify the integrity and authenticity of device management profiles prior to their application, such as by using digitally-signed profiles.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent users from accepting prompts to install malicious management profiles, educate users about the risks associated with installing an untrusted profile and ensure that enrollment processes allow users to know when management profiles are legitimate (e.g., in-person enrollment, or secure out-of-band deployment methods such as digitally-signed or encrypted e-mails.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent users from installing malicious digital certificates, which can be used to greatly facilitate this form of attack, educate users about the risks associated with installing digital certifications, and ensure that installation processes allow users to know when digital certificates are legitimate (e.g., in-person enrollment, or secure out-of-band deployment methods such as digitally-signed or encrypted e-mails).&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-5</id><name>Stack</name><category> Mobile Operating System</category><description> Code signing protects the software from being modified by anyone other than the author. If malicious actors have gained access to valid certificates they can use them later with their malicious code to appear to be signed by trusted author, and therefore trusted by the user.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use EMM/MDM solutions in combination with devices that successfully enforce a policy to maintain a minimum OS patch level and block access to enterprise resources to non-compliant devices.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Purchase devices from vendors/carriers who have committed to providing timely updates or who have known track records for prompt updates.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use EMM/MDM solutions in combination with other tools or device APIs (Android SafetyNet, Samsung Knox hardware-backed remote attestation, or other applicable remote attestation technologies) to detect and block enterprise connectivity from devices that show indications of device compromise.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-4</id><name>Stack</name><category> Mobile Operating System</category><description> Improper operating system update validation leaves the device vulnerable to malicious OS updates.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use EMM/MDM solutions in combination with devices that successfully enforce a policy to maintain a minimum OS patch level and block access to enterprise resources to non-compliant devices.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Purchase devices from vendors/carriers who have committed to providing timely updates or who have known track records for prompt updates.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use EMM/MDM solutions in combination with other tools or device APIs (Android SafetyNet, Samsung Knox hardware-backed remote attestation, or other applicable remote attestation technologies) to detect and block enterprise connectivity from devices that show indications of device compromise.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Prior to authorizing general users to install an upgrade to an untested and potentially malicious software update, evaluate the behavior of the update on test devices to determine if it appears to be free of malicious or vulnerable behaviors.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use devices that require updates to be signed by the device vendor.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-3</id><name>Stack</name><category> Mobile Operating System</category><description> Vulnerabilities in how various file types (e.g. graphic, audio, font, x509 certificate) are handled by any software running on a mobile device (e.g. mobile apps, mobile OS, native or 3rd party software libraries, device drivers, mobile OS kernel) may allow an attacker to craft a malicous file that when processed, results in code execution in the context of the vulnerable component.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability of this variety of attack, configure devices to automatically install or, at a minimum, notify users of the availability of security updates for the mobile OS, drivers, and installed apps.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To minimize the latency between exploit notification and the availability of security fixes, choose devices that have a reputation for providing security patches in a timely fashion.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To minimize opportunity for this attack under a known exploit, use email filtering technologies to block attachments from untrusted domains to contain suspect file types.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent exploitation of this variety of attack under a known exploit, educate users to be suspicious of the file types in question, and when possible, avoid opening them on vulnerable devices.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To minimize the risk of access from compromised devices, use EMM/MDM solutions in combination with devices that successfully enforce policies to block access to enterprise resources for vulnerable devices.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability of this variety of attack, configure devices to automatically install or, at a minimum, notify users of the availability of security updates for the mobile OS, drivers, and installed apps.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-0</id><name>Stack</name><category> Mobile Operating System</category><description> Privilege escalation vulnerabilities in the mobile OS, OS services, service libraries, or the OS kernel itself can allow an attacker to gain unauthorized access to sensitive data or execute arbitrary code from the privileged context to achieve any number of goals.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the risk to enterprise resources being accessed from vulnerable devices, deploy EMM/MDM solutions that can successfully enforce policies to monitor the OS version of devices and block enterprise connectivity from out-of-date devices or those with known-exploitable privilege escalation vulnerabilities.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To help reduce the latency between exploit notification and patch availability, purchase devices from vendors/carriers who have committed to providing timely updates or who have known track records for prompt updates.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To help reduce the opportunity for attack following availability of patches, configure automatic installation of, or, at a minimum, automatic notification of the availability of mobile OS security updates.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use tools or device APIs (Android SafetyNet, Samsung Knox hardware-backed remote attestation, or other applicable remote attestation technologies) to detect and block enterprise connectivity from devices that fail attestation or integrity checks.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Disable components with known vulnerabilities (e.g. disable MMS, Bluetooth, etc.) until the vulnerability is patched to prevent exploitation.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To help reduce the opportunity for attack following availability of patches, configure automatic installation of, or, at a minimum, automatic notification of the availability of mobile OS security updates.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Disable components with known vulnerabilities (e.g. disable MMS, Bluetooth, etc.) until the vulnerability is patched to prevent exploitation.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Cellular><id> CEL-14</id><name>Cellular</name><category> VoLTE</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Stack><id> STA-2</id><name>Stack</name><category> Mobile Operating System</category><description> Improperly authenticating application update packages could leave the device susceptible to malicious updates or other attacks.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Monitor the security patch state of devices and block enterprise connectivity from out-of-date devices with known exploitable vulnerabilities.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Purchase devices from vendors/carriers who have committed to providing timely updates or who have known track records for prompt updates.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Ensure devices are kept up-to-date with security patches to decrease the likelihood that they can be rooted/jailbroken.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use tools or device APIs (Android SafetyNet, Samsung Knox hardware-backed remote attestation, or other applicable remote attestation technologies) to detect and block enterprise connectivity from known compromised devices.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use device APIs (e.g. SystemUpdatePolicy) to enforce system update policies.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Restrict installation of apps from unofficial app stores, which may not undergo certificate validation processes (e.g., side-loading)&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use device built-in separation technologies such as Android for Work, Apple iOS managed apps, or Samsung Knox Workspace to provide a level of separation between enterprise apps and potentially harmful personal-use apps.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Stack><id> STA-1</id><name>Stack</name><category> Mobile Operating System</category><description> Jailbreaking or rooting a mobile device opens security holes and circumvents the device’s built-in security controls. Phones are much more vulnerable to viruses and malware because users can avoid official app store’s application vetting processes that help ensure users download virus-free apps.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure devices are kept up-to-date with security patches to decrease the likelihood that they can be rooted/jailbroken.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure devices are kept up-to-date with security patches to decrease the likelihood that they can be rooted/jailbroken.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use hardware mechanisms, device APIs (Android SafetyNet, Samsung Knox hardware-backed remote attestation, or other applicable remote attestation technologies), or other tools to detect rooted/jailbroken devices, provide notification to the enterprise and user, and block enterprise connectivity.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Help users to understand the risks associated with rooting/jailbreaking their devices.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Stack></item>
<item><Cellular><id> CEL-43</id><name>Cellular</name><category> Carrier Interoperability</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-13</id><name>Cellular</name><category> VoLTE</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-42</id><name>Cellular</name><category> Carrier Interoperability</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-41</id><name>Cellular</name><category> Carrier Interoperability</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-39</id><name>Cellular</name><category> Carrier Interoperability</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-40</id><name>Cellular</name><category> Carrier Interoperability</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-36</id><name>Cellular</name><category> Carrier Infrastructure</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-38</id><name>Cellular</name><category> Carrier Interoperability</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Network Operator&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;SS7 Firewalls may be deployed throughout the network. See Securing SS7 Telecommunications Networks &lt;sup id="fnref:191" role="doc-noteref"&gt;&lt;a href="#fn:191" class="footnote" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-37</id><name>Cellular</name><category> Carrier Interoperability</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Network Operator&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;SS7 Firewalls may be deployed throughout the network. See Securing SS7 Telecommunications Networks &lt;sup id="fnref:191" role="doc-noteref"&gt;&lt;a href="#fn:191" class="footnote" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-35</id><name>Cellular</name><category> Carrier Infrastructure</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-34</id><name>Cellular</name><category> Carrier Infrastructure</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><GPS><id> GPS-1</id><name>GPS</name><category> GPS</category><description> Spoofing may allow an attacker to confuse or control the location at which a mobile device calculates its position.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Original Equipment Manufacturer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Several countermeasures to be implemented in GPS receiver software have been presented in GPS Spoofing Countermeasures &lt;sup id="fnref:41" role="doc-noteref"&gt;&lt;a href="#fn:41" class="footnote" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></GPS></item>
<item><GPS><id> GPS-0</id><name>GPS</name><category> GPS</category><description> GPS jamming could prevent applications that rely on Location Services, such as mapping or navigation apps, from functioning correctly.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent loss of GPS signals from preventing location services from operating, select devices that attempts to a variety of location input sources, such as signal strength from cellular towers, Wi-Fi hotspots, and Bluetooth beacons. See &lt;strong&gt;Ten Ways Your Smartphone Knows Where You Are&lt;/strong&gt; &lt;sup id="fnref:40" role="doc-noteref"&gt;&lt;a href="#fn:40" class="footnote" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent loss of GPS signals from preventing location services from operating, select devices that attempts to a variety of location input sources, such as signal strength from cellular towers, Wi-Fi hotspots, and Bluetooth beacons. See &lt;strong&gt;Ten Ways Your Smartphone Knows Where You Are&lt;/strong&gt; &lt;sup id="fnref:40:1" role="doc-noteref"&gt;&lt;a href="#fn:40" class="footnote" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></GPS></item>
<item><Authentication><id> AUT-12</id><name>Authentication</name><category> Authentication: User or Device to Network</category><description> OS APIs provide access to device locations to properly store sensitve credentials. Improper storage of credentials could lead to unauthorized access or exposure.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Follow best practices for storing sensitive material such as using short-live tokens and the AccountManager on Android and Keychain for iOS. &lt;sup id="fnref:227" role="doc-noteref"&gt;&lt;a href="#fn:227" class="footnote" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;sup id="fnref:228" role="doc-noteref"&gt;&lt;a href="#fn:228" class="footnote" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To mitigate the risk associated with a stolen credential, use authentication protocols that generate unpredictable one-time cryptographic tokens that are replay-resistant (e.g. public key authentication, FIDO Alliance protocols)&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Educate users that Oauth 2.0 style authorization request from native applications should only be made through external user-agents (system browser)&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Authentication></item>
<item><Authentication><id> AUT-11</id><name>Authentication</name><category> Authentication: User or Device to Remote Service</category><description> Vulnerabilities in applications may allow attackers to steal credentials from a device either remotely or with physical access.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;When creating files, named sockets, or similar resources statically-defined (i.e., predictable by an attacker), verify that the resource does not already exist. If it does, cease execution and exit the app with an error that prompts the user to take action.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to identify malicious apps that exploit cross-application resource attacks.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Authentication></item>
<item><Authentication><id> AUT-10</id><name>Authentication</name><category> Authentication: User or Device to Remote Service</category><description> Malicious applications can intercept and steal passwords when logging in using webpages rendered within applications.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to identify malicious behaviors in apps.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Authentication></item>
<item><Authentication><id> AUT-9</id><name>Authentication</name><category> Authentication: User or Device to Remote Service</category><description> Phishing emails have been prevalent for a very long time. These emails typically link to websites geared at specific individuals, departments, or companies, and may be designed to look like their genuine counterpart with the intention of capturing credentials.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure corporate e-mail policy is configured to scan for suspicious files, executables, or attachments, and segregate such emails to increase end-user awareness of their potential to contain malicious content.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy email and web proxy services that will examine URL resources for malicious content, and if any is found, prevent delivery of the message to the intended recipient.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy email filtering tools or services that will automatically remove detected URLs from the body of emails from untrusted domains.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Educate end users on how to recognize phishing attempts and increase their awareness of techniques to browse safely from mobile devices, such as tap-and-hold on a hyperlink to examine its associated URL.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Authentication></item>
<item><Authentication><id> AUT-8</id><name>Authentication</name><category> Authentication: User or Device to Remote Service</category><description> An attacker able to perform a man-in-the-middle attack could intercept a request for a genuine website and return a fake or malicious website that attempts to capture credentials.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent captured authentication credentials from enabling persistent access to sensitive services, configure them with authentication methods that use unpredictable one-time cryptographic tokens that are replay-resistant (e.g. public key authentication, FIDO Alliance protocols, pre-shared access codes).&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To limit the usefulness of captured passwords, do not use the same password or derivations thereof to authenticate to multiple services.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To increase the difficulty of establishing a MiTM attack on a given wireless access session in which authentication credentials are exchanged, avoid authenticating to sensitive remote services over untrusted Wi-Fi networks.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Authentication></item>
<item><Authentication><id> AUT-0</id><name>Authentication</name><category> Authentication: User or Device to Remote Service</category><description> Attackers able to steal authorized credentials could potentially login to sensitive services or devices, and gain unauthorized access to privileged information.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To hinder an authentication attempt with a stolen credential, use anomaly detection based on user activity to detect abnormalities (e.g. authentication from new domains, unusual times, or to rarely-accessed services) and require additional authentication steps before granting access.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To mitigate an attacker’s ability to achieve authentication using a stolen credential, when possible, configure services to use multi-factor authentication. Ideally, the additional factor should be provided by a separate device than the one being used to perform primary authentication (e.g., laptop and mobile app). Further, avoid the use of SMS messages for 2FA codes, as SMS messages can be readily intercepted.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To limit the value of stolen credentials to an attacker, use centralized identity and access management tools that permit simultaneous revocation of stolen authentication credentials across all access control mechanisms and terminate active sessions based on those credentials.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To limit the value of stolen credentials, enforce a policy that limits the maximum age of credentials and limits the use of identical or similar credentials.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To limit the value of stolen credentials, enforce an access policy that restricts the resources a user can access based on location parameters (e.g. domain, IP address, MAC address, geolocation) of the authentication request.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Incorporate the principle of least privilege to limit lateral movement by an attacker with stolen credentials.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To limit the potential for predictive attacks on new passwords, employ authentication mechanisms that utilizes randomly generated one-time passwords or tokens for access from untrusted locations.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker with a stolen password from locking out the legitimate user or defining new credentials, require 2-factor authentication mechanisms to change authentication credentials or credential recovery processes.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To mitigate an attacker’s ability to achieve authentication using a stolen credential, when possible, configure services to use multi-factor authentication. Ideally, the additional factor should be provided by a separate device than the one being used to perform primary authentication (e.g., laptop and mobile app). Further, avoid the use of SMS messages for 2FA codes, as SMS messages can be readily intercepted.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Authentication></item>
<item><Authentication><id> AUT-7</id><name>Authentication</name><category> Authentication: User to Device</category><description> Older biometric systems were subject to spoofing, through methods such as printed pictures of faces and fingerprints lifted from other places.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opportunity for an attacker to conduct a biometric spoofing attack, physically secure the device (e.g., lock it in a secure container) when leaving it directly unattended.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker able to successfully conduct a biometric spoofing attack against the device from automatically gaining access to sensitive data, implement multi-factor authentication mechanisms for sensitive apps or services.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device user&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Consider devices in which multi-factor biometric authentication mechanisms transform the biometric data using an additional factor (e.g., password or cryptographic token).&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Consider devices in which multi-factor biometric authentication mechanisms transform the biometric data using an additional factor (e.g., password or cryptographic token).&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker able to successfully conduct a biometric spoofing attack against the device from automatically gaining access to sensitive data, implement multi-factor authentication mechanisms for sensitive apps or services.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Authentication></item>
<item><Authentication><id> AUT-6</id><name>Authentication</name><category> Authentication: User to Device</category><description> On Android, a feature called Smartlock exists that allows the device to automatically stay unlocked when connected to certain Bluetooth devices or WiFi networks. If an attacker is able to spoof a device enabled within Smartlock, they could force the device to remain unlocked as long as the device is paired.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;As appropriate, use MDM solutions that enable policies to prevent features that would automatically unlock mobile devices or prevent mobile devices from otherwise locking based on your existing security policy, such as after a period of user inactivity.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the potential than communication from a paired device can be successfully spoofed, observe physical security measures to prevent interception of communication during the initial pairing of devices (e.g. in a secure location outside of which, interception or manipulation of NFC or Bluetooth signals is limited.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the potential an attacker can, post-pairing, spoof a paired device, maintain strong physical security over it when being left directly unattended (e.g., secure it in a locked container).&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the potential an attacker acquires your device in an unlocked but unattended state or can acquire the pair of devices, avoid pairing your mobile device with a device that is typically already located in proximity to it, such as a keyboard or headset.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Avoid pairing with Bluetooth 2.0 or earlier devices, or those that otherwise only support Legacy Pairing, which is vulnerable to eavesdropping attacks that greatly facilitates the spoofing a trusted device.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Authentication></item>
<item><Authentication><id> AUT-4</id><name>Authentication</name><category> Authentication: User to Device</category><description> Typical device usage scenarios result in fingerprints and smudges being left on the screen of a mobile device. Repeated taps to the same location on the screen may be discernable due to the clustering and build-up of similar prints, potentially allowing an attacker to infer some or all of the numbers or characters that appear in a device unlock PIN or password. This greatly facilitates an educated brute-force attack against the device unlock PIN or passcode, particularly when combined with similar attacks, such as recording events of device unlock by the a user.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase the difficulty in successfully inferring the authentication credential, increase the minimum length and complexity of PINs, passwords, or other authentication credentials.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the window of opporuntity during which an attacker can use an inferred authentication credential, reduce the maximum lifetime of authentication credentials.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use devices and applications that support biometric authentication methods (e.g. facial recognition, voice print), which do not result in direct physical evidence of authentication data being left on the device for later analysis.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase the difficulty in successfully inferring the authentication credential, increase the minimum length and complexity of PINs, passwords, or other authentication credentials.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the window of opporuntity during which an attacker can use an inferred authentication credential, reduce the maximum lifetime of authentication credentials.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To limit the amount of data available to an attacker conducting a screen smudge inferrence attack, clean the screen of the device often, particularly when leaving the device directly unattended.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To limit the amount of authentication data available to the attacker (e.g. size, and number of smudges), enter device unlock codes and passwords using a stylus on (ideally) a clean device screen.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use devices and applications that support biometric authentication methods (e.g. facial recognition, voice print), which do not result in direct physical evidence of authentication data being left on the device for later analysis.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To limit the window of opportunity for an attacker to conduct a screen smudge inferrence attack, physically secure the device when it is being left directly unattended.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile OS Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase the difficulty of visual or sensor-based inference attacks on entries by the on-screen keyboard, a randomized keyboard layout for PIN or password entry could be implemented as a feature of the mobile OS.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Authentication></item>
<item><Authentication><id> AUT-3</id><name>Authentication</name><category> Authentication: User to Device</category><description> If an attacker can record or gains access to video recorded by a camera or similar device with line-of-sight on a user’s mobile device while he or she is entering a PIN, password, or other secret, the attacker can attempt to infer that secret. Success of the attack will vary based on various factors, but increases with higher resolution recordings, greater proximity, a less-obstructed and direct (perpendicular) view of the device, and the opportunity to analyze multiple recordings of a user’s keystrokes over time.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;When entering PINs, passwords, or other secrets, limit visibility of the device to others.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use devices and applications that support biometric authentication methods (e.g. fingerprint), which are not as easily captured by casual recording methods as entry of PINs or passwords.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Increase the minimum length and reduce the maximum lifetime of passwords and PINs to reduce the probability a inference attack will be successful.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;When possible, configure remote services with authentication mechanisms that allow the use of random one-time passwords, which if recorded during entry, cannot later be used to authenticate.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent a successful password inferrence attack from singly enabling authentication by an attacker, configure  sensitive services to require 2-factor authentication.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use devices and applications that support biometric authentication methods (e.g. fingerprint), which are not as easily captured by casual recording methods as entry of PINs or passwords.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Increase the minimum length and reduce the maximum lifetime of passwords and PINs to reduce the probability a inference attack will be successful.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;When possible, configure remote services with authentication mechanisms that allow the use of random one-time passwords, which if recorded during entry, cannot later be used to authenticate.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent a successful password inferrence attack from singly enabling authentication by an attacker, configure  sensitive services to require 2-factor authentication.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile OS Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase the difficulty of visual or sensor-based inference attacks on entries by the on-screen keyboard, a randomized keyboard layout for PIN or password entry could be implemented as a feature of the mobile OS.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Authentication></item>
<item><Authentication><id> AUT-2</id><name>Authentication</name><category> Authentication: User to Device</category><description> Short or easy to guess PINs can be brute forced to unlock the device.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To directly increase the time required for a successful brute-force authentication attempt, increase the length, complexity, and randomness of device unlock codes, with a strong preference for a ‘password’ option that may contain letters (uppercase and lowercase), numbers, and special characters, rather than a simpler numeric PIN or (on Android devices) a geometric pattern.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To increase the time required to perform brute-force attacks, use mobile devices that incur incrementally increasing delays when the wrong unlock code is entered.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the likelihood of a successful brute-force user-to-device authentication attempt on a device, configure the device to wipe all device data after a preset number of consecutive failed unlock attempts (e.g., 10).&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opportunity for an attacker to conduct a brute-force authentication attack against the device, use strong physical security measures (e.g.,locking the device into a container) when not directly attended.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent employees from accessing enterprise resources from devices with a weak device unlock code, deploy MDM or containerization solutions that enable device configuration policies that require the unlock code for enrolled devices to meet minimum length and complexity requirements prior to granting access to enterprise resources.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To increase the time required to perform brute-force attacks, use mobile devices that incur incrementally increasing delays when the wrong unlock code is entered.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Authentication></item>
<item><Authentication><id> AUT-5</id><name>Authentication</name><category> Authentication: User to Device</category><description> Mobile applications, if granted permissions to do so, can collect data from various device sensors such as an accelerometer, gyroscope, microphone, or camera to calculate what areas of the mobile device screen are being tapped by the user. This data can be analyzed to infer with high probability (70%) the keystrokes made by the user, such as a PIN or password entry. The success of this attack improves as additional data is collected from activity by a given user. Note this attack does not require an application to acheive privilege escalation; however, an application that can successfully exploit privilege escalation vulnerabilities may have increased potential to realize this threat by accessing otherwise restricted sensors.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To detect Android apps that may realize this threat, use the Verify Apps feature to detect 3rd party apps that appear to abuse access to device sensors.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opportunity for this threat, do not authorize (or revoke if granted) access to device sensors by untrusted applications when those applications are not actively in use (e.g., running in the background).&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opportunity for this threat, use access controls native to the mobile OS to revoke access to device peripherals or services for an app when related application functions are no longer in use.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent this threat, before authenticating to sensitive applications, forcibly close all untrusted applications that have access to device sensors such as an accelerometer or gyroscope.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent this threat, before authenticating to sensitive applications, use OS configuration settings to revoke global access for all apps to device sensors such as an accelerometer or gyroscope.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opporunity for this threat, deploy containerization or MAM solutions in combination with devices that successfully enforce policies that restrict access to device sensors by untrusted apps.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To detect apps that may realize this threat, use app-vetting services to determine if any apps present in your mobile device deployment appear to use sensor data in an untrusted manner.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile OS Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase the difficulty of visual or sensor-based inference attacks on entries by the on-screen keyboard, a randomized keyboard layout for PIN or password entry could be implemented as a feature of the mobile OS.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Authentication></item>
<item><Authentication><id> AUT-1</id><name>Authentication</name><category> Authentication: User to Device</category><description> When notification features are enabled for a device and mobile app, any sensitive information contained in a notification may be displayed on screen, even when the device is locked. An attacker with proximity to a locked device may gain unauthorized access to that information. Additional device features, such as voice-operated assistants (e.g., Siri, Cortana) may also allow an attacker with physical or voice access to a locked device to access sensitive information, such as contacts or reminders.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To limit opportunity for lockscreen bypass attacks, strongly secure mobile devices when not directly attended.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the success of lockscreen bypass exploits, ensure mobile OS security updates are installed in a timely manner&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the potential that sensitive information is displayed on the lock screen, use mobile OS settings to disable access to notification features for apps that may receive sensitive content, or configure such notifications to only display when the device is unlocked.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use mobile OS settings or deploy MDM solutions that can effectively enforce policies to limit the data or services available while the device screen is locked (e.g., notifications, voice-operated assistants, camera)&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the success of lockscreen bypass exploits, ensure mobile OS security updates are installed in a timely manner&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use mobile OS settings or deploy MDM solutions that can effectively enforce policies to limit the data or services available while the device screen is locked (e.g., notifications, voice-operated assistants, camera)&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Authentication></item>
<item><Ecosystem><id> ECO-22</id><name>Ecosystem</name><category> Mobile Application Store</category><description> Applications that can bypass app store’s analysis or vetting techniques can implant malware in a legitimate app store.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to determine that apps appear free of malicious behaviors or vulnerabilities prior to authorizing their use.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To decrease the time to detection for malicious apps, use app threat intelligence services to detect malicious apps installed on devices&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Educate end users to scrutinize the permissions requested by apps, particularly if an updated version requests significantly different permissions than previous ones.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To decrease the time to detection for malicious apps on Android devices, use Android Verify Apps feature.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Ecosystem><id> ECO-21</id><name>Ecosystem</name><category> Mobile Application Store</category><description> A popular method of distributing links to malicious applications is direct links to the application files. These links can be distributed over several channels, including QR codes, NFC tags, and SMS messages.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent the installation of malicious applications, prohibit sideloading of apps and the use of unauthorized app stores&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To decrease the time to detection, use app threat intelligence data to identify malicious applications installed on devices.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use features such as Apple iOS Managed Apps, Android for Work, or Samsung KNOX Workspace that provide additional separation between personal apps and enterprise apps to mitigate the impact of malicious behaviors.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Educate users about the risks of activating links in emails or SMS messages, and instead encourage users to identify the app where hosted by an official app store.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Ecosystem><id> ECO-20</id><name>Ecosystem</name><category> Mobile Application Store</category><description> Certain situations may arise where access to app stores is either restricted or blocked entirely. This drives users to use 3rd party sources to download and update apps, opening the door to intrusion by malicious app.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Ecosystem><id>Click </id><name>Ecosystem</name><category>This threat has been withdrawn, and is no longer part of the Mobile Threat Catalogue.</category><description>None</description><countermeasure>None</countermeasure></Ecosystem></item>
<item><Ecosystem><id> ECO-15</id><name>Ecosystem</name><category> Mobile Application Store</category><description> Attackers able to compromise enterprise app stores could potentially distribute work applications to unauthorized parties, potentially leading to unauthroized data access, modification, or leakage.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use solutions such as Google Play Private Channel or Apple’s Developer Enterprise program to securely distribute private applications.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To limit the distribution of sensitive enterprise apps outside of authorized mobile devices, use MAM solutions to push private apps directly onto authorized and enrolled devices.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent the unauthorized disclosure of secrets within private enterprise apps, do not hardcode secrets, such as cryptographic keys, directly into private enterprise applications.&lt;/p&gt;
        
    
        &lt;b&gt;Application Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent unauthorized access to private enterprise apps from further granting unauthorized access to sensitive data, require the user of a mobile app to pass strong authentication mechanisms prior to granting access to sensitive data.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Ecosystem><id> ECO-18</id><name>Ecosystem</name><category> Mobile Application Store</category><description> App developer’s credentials typically have permission to push app updates to the respective app store. If these credentials are somehow obtained by an attacker, they could remove any applications that the developer has published.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the potential for an attacker to impersonate you to official apps stores, follow best practices to protect your developer accounts, such as using multi-factor authentication. &lt;sup id="fnref:159" role="doc-noteref"&gt;&lt;a href="#fn:159" class="footnote" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt; &lt;sup id="fnref:160" role="doc-noteref"&gt;&lt;a href="#fn:160" class="footnote" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Ecosystem><id> ECO-17</id><name>Ecosystem</name><category> Mobile Application Store</category><description> App developer’s credentials typically have permission to push app updates to the respective app store. If these credentials are somehow obtained by an attacker, they could publish a malicious application using the developers name and reputation to aid distribution.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to determine that apps appear free of malicious behaviors or vulnerabilities prior to authorizing their use.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To decrease the time to detection for malicious apps, use app threat intelligence services to detect malicious apps installed on devices&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Educate end users to scrutinize the permissions requested by apps, particularly if an updated version requests significantly different permissions than previous ones.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the potential for an attacker to impersonate you to official apps stores, follow best practices to protect your developer accounts, such as using multi-factor authentication. &lt;sup id="fnref:159" role="doc-noteref"&gt;&lt;a href="#fn:159" class="footnote" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt; &lt;sup id="fnref:160" role="doc-noteref"&gt;&lt;a href="#fn:160" class="footnote" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the potential for an attacker to craft malicious apps that validate against your developer account, follow best practices to protect cryptographic signing material for applications &lt;sup id="fnref:162" role="doc-noteref"&gt;&lt;a href="#fn:162" class="footnote" rel="footnote"&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To decrease the time to detection for malicious apps, use Android Verify Apps feature.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Ecosystem><id> ECO-16</id><name>Ecosystem</name><category> Mobile Application Store</category><description> App developer’s credentials typically have permission to push app updates to the respective app store. If these credentials are somehow obtained by an attacker, they could replace the genuine application with a version embedded with malware.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to determine that apps appear free of malicious behaviors or vulnerabilities prior to authorizing their use.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To decrease the time to detection for malicious apps, use app threat intelligence services to detect malicious apps installed on devices&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Educate end users to scrutinize the permissions requested by apps, particularly if an updated version requests significantly different permissions than previous ones.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the potential for an attacker to impersonate you to official apps stores, follow best practices to protect your developer accounts, such as using multi-factor authentication. &lt;sup id="fnref:159" role="doc-noteref"&gt;&lt;a href="#fn:159" class="footnote" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt; &lt;sup id="fnref:160" role="doc-noteref"&gt;&lt;a href="#fn:160" class="footnote" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the potential for an attacker to craft malicious apps that validate against your developer account, follow best practices to protect cryptographic signing material for applications &lt;sup id="fnref:162" role="doc-noteref"&gt;&lt;a href="#fn:162" class="footnote" rel="footnote"&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To decrease the time to detection for malicious apps, use Android Verify Apps feature.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Ecosystem><id> ECO-14</id><name>Ecosystem</name><category> Mobile Application Store</category><description> Attackers bringing down official app stores may drive users to unofficial, 3rd party sources, opening their device up to malicious applications.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent users from acquiring fraudulent versions of in-demand legitimate apps that are typically available from authorized app stores, prohibit side-loading or installing apps from unauthorized app stores&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To ensure the availability of enterprise apps typically available from official app stores (e.g., Google Play), create a locally controlled repository of an application store such as F-Droid &lt;sup id="fnref:158" role="doc-noteref"&gt;&lt;a href="#fn:158" class="footnote" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Ecosystem><id>None</id><name>Ecosystem</name><category>This threat has been merged with </category><description>None</description><countermeasure>None</countermeasure></Ecosystem></item>
<item><Ecosystem><id> ECO-12</id><name>Ecosystem</name><category> Mobile Application Store</category><description> An attacker able to successfully execute a man in the middle attack on a connection could intercept legitimate application requests, and return back malicious or illegitimate applications to the user.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To decrease the time to detection, use app threat intelligence data to identify malicious applications installed on devices&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use features such as Apple iOS Managed Apps, Android for Work, or Samsung KNOX Workspace that provide additional separation between personal apps and enterprise apps to mitigate the impact of malicious behaviors.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability that an attacker will have established a MiTM on a session during which a user attempts to intall apps from a trusted source (e.g., official app store), recommend or require users to download apps when connected to a trusted and secured Wi-Fi network.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability that malicious apps will be installed on managed devices, use app-vetting tools or services in combination with MAM solutions to push vetted apps directly onto enrolled devices over trusted and secured Wi-Fi networks.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Ecosystem><id> ECO-11</id><name>Ecosystem</name><category> Mobile Application Store</category><description> This could occur when an adversary changes the links within the app store pointing to where legitimate apps are stored to fake or malicious versions of the apps.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To decrease the time to detection of malicious apps, use app threat intelligence data to identify malicious apps.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to determine if apps acquired from even official or authorized app stores appear free of malicious or vulnerable behaviors of apps prior to authorizing their use.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use features such as Apple iOS Managed Apps, Android for Work, or Samsung KNOX Workspace that provide additional separation between personal apps and enterprise apps to mitigate the impact of malicious behaviors.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><LAN_&_PAN><id> LPN-13</id><name>LAN_&amp;_PAN</name><category> Network Threats: NFC</category><description> Malicious NFC tags can be created that redirect the user to a malicious website or application, which can install malware on the target device.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use devices with NFC features and apps that explicitly request user authorization prior to following URLs or executing potentially harmful instructions on the device. See &lt;strong&gt;QR Codes and NFC Chips: Preview-and-Authorize Should be Default&lt;/strong&gt; &lt;sup id="fnref:39" role="doc-noteref"&gt;&lt;a href="#fn:39" class="footnote" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opportunity for this attack, disable NFC when that feature is not in use.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To further reduce the opportunity for this attack, protect the device from malicious signals using a NFC-blocking case when that features is not in use.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></LAN_&_PAN></item>
<item><LAN_&_PAN><id> LPN-12</id><name>LAN_&amp;_PAN</name><category> Network Threats: NFC</category><description> Man in the middle by relaying NFC packets.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker from launching a successful NFC relay attack, use mobile devices and NFC apps that require user authorization of the transaction prior to fulfilling requests communicated over NFC.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opportunity for this attack, disable NFC or associated apps when that feature is not in use.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the number of potentially vulnerable applications running on the device, disable or uninstall any NFC apps that are no longer in use.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker from launching a successful NFC relay attack, use mobile devices and NFC apps that require user authorization of the transaction prior to fulfilling requests communicated over NFC.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></LAN_&_PAN></item>
<item><LAN_&_PAN><id> LPN-16</id><name>LAN_&amp;_PAN</name><category> Network Threats: Bluetooth</category><description> Bluetooth devices that pair using PIN/Legacy pairing (Bluetooth 2.0 and earlier) or low energy Legacy Pairing are vulnerable to eavesdropping. If an attacker can capture all pairing frames, the secret keys can be determined given enough time, facilitating device tracking, impersonation, and the decryption of data transmitted between devices for which secret keys are known.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent this attack, when pairing devices, observe physical security, such as pairing devices in a secure location outside of which, the ability of an attacker to intercept Bluetooth messages is remote.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device user&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Avoid the use of Bluetooth 2.0 or earlier devices, or those that only support Legacy Pairing.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></LAN_&_PAN></item>
<item><LAN_&_PAN><id> LPN-15</id><name>LAN_&amp;_PAN</name><category> Network Threats: Bluetooth</category><description> An attacker may be able to force or entice a Bluetooth device to participate in Just Works SSP, which is susceptible to MiTM attacks.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce opportunity for this attack, disable Bluetooth when that feature is not in use.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use EMM/MDM solutions in combination with devices that successfully enforce a policy inhibit Just Works functionality or disable Bluetooth entirely, as appropriate.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></LAN_&_PAN></item>
<item><LAN_&_PAN><id> LPN-14</id><name>LAN_&amp;_PAN</name><category> Network Threats: Bluetooth</category><description> The Bluetooth specification supports the transfer of certain object types defined in the OBEX protocol, namedly vCard (contacts), vCal (calendar events) and vNote (text). OBEX does not require authentication, and messages can be sent to Bluetooth-enabled devices without any prerequisite pairing or authentication. While unsolicited messages are not directly harmful to the device, they may facilitate social engineering attacks if a recipient accepts crafted contact or calendar information sent by an attacker.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce opportunity for this attack, disable Bluetooth when that feature is not in use.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Do not accept data transfers, such as contact cards, transmitted over Bluetooth without confidence the message is legitimate.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></LAN_&_PAN></item>
<item><LAN_&_PAN><id> LPN-11</id><name>LAN_&amp;_PAN</name><category> Network Threats: Bluetooth</category><description> Brute-force decryption of Bluetooth 4.0 or older communication due to weak BR/EDR encryption algorithm.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To resist brute-force decryption attacks, use the maximum PIN length and encryption key sizes available on configurable Bluetooth devices.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Restrict the use of older Bluetooth devices with a static or 4-digit PIN to very low-risk use cases.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent unauthorized disclosure or modification to data transmitted over a compromised Bluetooth session, use Bluetooth applications that provide strong over-the-top encryption to data prior to transmission over the Bluetooth interface.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Restrict the use of older Bluetooth devices with a static or 4-digit PIN to very low-risk use cases.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent unauthorized disclosure or modification to data transmitted over a compromised Bluetooth session, use Bluetooth applications that provide strong over-the-top encryption to data prior to transmission over the Bluetooth interface.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></LAN_&_PAN></item>
<item><LAN_&_PAN><id> LPN-10</id><name>LAN_&amp;_PAN</name><category> Network Threats: Bluetooth</category><description> Bluebugging is a Bluetooth vulnerability that allows the attacker to take full control of the target device without the user’s knowledge.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opportunity for an attacker to conduct this attack, disable Bluetooth on vulnerable (circa 2004) devices when that feature is not in use. &lt;sup id="fnref:J-Padgette-1" role="doc-noteref"&gt;&lt;a href="#fn:J-Padgette-1" class="footnote" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></LAN_&_PAN></item>
<item><LAN_&_PAN><id> LPN-8</id><name>LAN_&amp;_PAN</name><category> Network Threats: Bluetooth</category><description> Adversaries can execute a denial of service attack over a Bluetooth connection to render Bluetooth unusable and rapidly drain the device battery.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To limit opportunity for this threat, disable Bluetooth when that feature is not in use&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent this threat from being realized, operate Bluetooth on devices in a secure location away from windows and doors, to which an attacker is unlikely to have physical access.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To limit opporunity for this threat, protect devices with a case that blocks Bluetooth signals.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></LAN_&_PAN></item>
<item><LAN_&_PAN><id> LPN-9</id><name>LAN_&amp;_PAN</name><category> Network Threats: Bluetooth</category><description> Bluesnarfing is a vulnerability that adversaries can take advantage of to exfiltrate data from the target device without the user’s knowledge or interaction.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce opportunity for this attack on vulnerable devices, disable Bluetooth when that feature is not in use. Note: per NIST SP 800-121 Revision 1, some &lt;em&gt;older&lt;/em&gt; devices possessed a firmware vulnerability enabling this exploit.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce opportunity for this attack while Bluetooth is in use, operate the device in a secure location away from windows and doors, outside of which the probability an attacker can establish Bluetooth communication is remote.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></LAN_&_PAN></item>
<item><LAN_&_PAN><id> LPN-7</id><name>LAN_&amp;_PAN</name><category> Network Threats: Bluetooth</category><description> BlueStumbling occurs when adversaries discover, locate, and/or identify users based on their Bluetooth device addresses.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce opportunity for this attack, disable Bluetooth when that feature is not in use&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To increase the complexity of this attack, consider the use of devices that support Bluetooth 4.0 and later. Bluetooth 4.0 allows for the address used by a device to change frequently, preventing persistent association of a given address with any user. See &lt;strong&gt;Security, Bluetooth Smart (Low Energy)&lt;/strong&gt; &lt;sup id="fnref:38" role="doc-noteref"&gt;&lt;a href="#fn:38" class="footnote" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;As pairing with an attacker-controlled device greatly increases the success of this attack, never authorize an unanticipated pairing request.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;As interception of pairing messages facilitates this attack, when pairing devices, observe physical security, such as pairing devices in a secure location outside of which, the ability of an attacker to intercept Bluetooth messages is remote.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase the complexity of this attack, consider the use of devices that support Bluetooth 4.0 and later. Bluetooth 4.0 allows for the address used by a device to change frequently, preventing persistent association of a given address with any user. See &lt;strong&gt;Security, Bluetooth Smart (Low Energy)&lt;/strong&gt; &lt;sup id="fnref:38:1" role="doc-noteref"&gt;&lt;a href="#fn:38" class="footnote" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></LAN_&_PAN></item>
<item><LAN_&_PAN><id> LPN-6</id><name>LAN_&amp;_PAN</name><category> Network Threats: Bluetooth</category><description> BluePrinting occurs when adversaries remotely fingerprint Bluetooth-enabled devices to gather information to potentially exploit at a later point in time.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opportunity for this attack, disable Bluetooth when that feature is not in use&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Operate Bluetooth on mobile devices in limited discoverable mode only as long as necessary to achieve desired pairing. See Specification of the Bluetooth System ver. 1.0B &lt;sup id="fnref:37" role="doc-noteref"&gt;&lt;a href="#fn:37" class="footnote" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></LAN_&_PAN></item>
<item><LAN_&_PAN><id> LPN-5</id><name>LAN_&amp;_PAN</name><category> Network Threats: Wi-Fi</category><description> Illegal radio frequency transmitters can be designed to block, jam, or otherwise interfere with authorized radio communications.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Contingency planning for use of another communication band.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To mitigate interference to on-premises communications, detect, locate, and deactivate the device causing interference to Wi-Fi communications.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Contingency planning for use of another communication band.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></LAN_&_PAN></item>
<item><LAN_&_PAN><id> LPN-4</id><name>LAN_&amp;_PAN</name><category> Network Threats: Wi-Fi</category><description> When probing for available Wi-Fi networks, mobile devices transmit their MAC address. Persistent use of a single MAC address readily enables physical tracking of a specific device by listening or probing for messages that contain its associated MAC address. As a result, most mobile OS added support for some implementation of MAC address randomization, such that a device generates a new MAC address when establishing communication with an unknown Wi-Fi network. Note, however, that once an attacker has associated a target device with the MAC address it uses on a given Wi-Fi network, successful SSID spoofing may trigger the device to attempt to connect, thereby revealing a traceble MAC address.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device Owner&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase the complexity of MAC address tracking, procure mobile devices with OS and hardware versions that support MAC address randomization. Starting in Android 6.0, randomized MAC addresses are used for Wi-Fi and Bluetooth scans. See &lt;strong&gt;Android 6.0 Changes&lt;/strong&gt;. &lt;sup id="fnref:35" role="doc-noteref"&gt;&lt;a href="#fn:35" class="footnote" rel="footnote"&gt;6&lt;/a&gt;&lt;/sup&gt; In iOS 8, Wi-Fi scanning behavior changed to use random, locally administrated MAC addresses. See User Privacy on iOS and OS X. &lt;sup id="fnref:36" role="doc-noteref"&gt;&lt;a href="#fn:36" class="footnote" rel="footnote"&gt;7&lt;/a&gt;&lt;/sup&gt; Windows 10 and later verions support MAC address randomization. &lt;sup id="fnref:251" role="doc-noteref"&gt;&lt;a href="#fn:251" class="footnote" rel="footnote"&gt;8&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase the complexity of MAC address tracking, procure mobile devices with OS and hardware versions that support MAC address randomization. Starting in Android 6.0, randomized MAC addresses are used for Wi-Fi and Bluetooth scans. See &lt;strong&gt;Android 6.0 Changes&lt;/strong&gt;. &lt;sup id="fnref:35:1" role="doc-noteref"&gt;&lt;a href="#fn:35" class="footnote" rel="footnote"&gt;6&lt;/a&gt;&lt;/sup&gt; In iOS 8, Wi-Fi scanning behavior changed to use random, locally administrated MAC addresses. See User Privacy on iOS and OS X. &lt;sup id="fnref:36:1" role="doc-noteref"&gt;&lt;a href="#fn:36" class="footnote" rel="footnote"&gt;7&lt;/a&gt;&lt;/sup&gt; Windows 10 and later verions support MAC address randomization. &lt;sup id="fnref:251:1" role="doc-noteref"&gt;&lt;a href="#fn:251" class="footnote" rel="footnote"&gt;8&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce traceable signals from a mobile device, place it airplane mode when wireless communication is not in use. In this mode, most devices will disconnect from any current Wi-Fi network, and not attempt to join any Wi-Fi networks until reenabled.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To minimize traceable signals from a mobile device, power it off when not in use.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></LAN_&_PAN></item>
<item><LAN_&_PAN><id> LPN-3</id><name>LAN_&amp;_PAN</name><category> Network Threats: Wi-Fi</category><description> Malicious Wi-Fi networks could masquerade as legitimate Wi-Fi networks, allowing adversaries to intercept or potentially manipulate device communications.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;When choosing to connect to an unencrypted and potentially spoofed Wi-Fi network, to reduce the probability of connecting to a malicious network, verify the network appears consistently geolocated with the host (e.g., on the premises), and if possible, verify with a representative that the intended Wi-Fi network is the one they host.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To decrease the probability of connecting to a spoofed Wi-Fi network, configure devices to not automatically connect to unknown Wi-Fi networks, and to ‘forget’ public networks once they are no longer in use.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To greatly decrease the probability of this attack, only allow mobile devices to connect to authorized Wi-Fi networks that use WPA2 encryption with a strong pre-shared key (for personal mode).&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></LAN_&_PAN></item>
<item><LAN_&_PAN><id> LPN-2</id><name>LAN_&amp;_PAN</name><category> Network Threats: Wi-Fi</category><description> Unencrypted or weakly encrypted (e.g. WEP) Wi-Fi networks could allow adversaries to eavesdrop on connctions.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opportunity for this attack, configure mobile devices to not automatically connect to untrusted and unsecure networks.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To mitigate eavesdropping over unencrypted Wi-Fi networks, use over-the-top encryption products that encrypt data prior to transmission off the device.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability of this attack, configure Wi-Fi networks to WPA2 in personal mode with a strong password (increased length, complexity, and randomness).&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To further reduce the probability of this attack, configure Wi-Fi networks with WPA2 in enterprise mode with digital certificates.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To mitigate eavesdropping over unencrypted Wi-Fi networks, use over-the-top encryption products that encrypt data prior to transmission off the device.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To mitigate eavesdropping over unencrypted Wi-Fi networks, use VPN solutions to establish an encrypted tunnel.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></LAN_&_PAN></item>
<item><LAN_&_PAN><id> LPN-0</id><name>LAN_&amp;_PAN</name><category> Network Threats: Wi-Fi</category><description> Public, unsecure access points are subject to rogue access point attacks. This could allow adversaries to man-in-the-middle traffic going to and from devices connected to the network.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Avoid the use of untrusted and unencrypted Wi-Fi networks, particularly when needing to access sensitive services.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;When needing to connect to untrusted and unencrypted Wi-Fi networks, attempt to verify with a representative of the hosting organization (e.g., coffe shop employee) that the detected network is the correct one.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability of connecting to rogue access points, use Wi-Fi hotspot services that associate access points with registered Wi-Fi provider, geolocation, and crowd-sourced reputation data to make assertions about the their apparent trustworthiness.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability of connecting to rogue access points, use Wi-Fi hotspot services that associate access points with registered Wi-Fi provider, geolocation, and crowd-sourced reputation data to make assertions about the their apparent trustworthiness.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To avoid this threat, only allow mobile devices to connect to authorized Wi-Fi networks that use WPA2 encryption.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></LAN_&_PAN></item>
<item><Cellular><id> CEL-31</id><name>Cellular</name><category> Carrier Infrastructure</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Network Operator&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Implement industry standard physical security mitigations&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><LAN_&_PAN><id> LPN-1</id><name>LAN_&amp;_PAN</name><category> Network Threats: Wi-Fi</category><description> Once an adversary is able to associate a Wi-Fi SSID with a specific user, the attacker can scan for that SSID in the future to track the user.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker from persistently associating a tracked mobile device with the SSID of a known network (e.g., home or enterprise Wi-Fi), frequently change the SSID to a new and unrelated value.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the number of SSIDs available to an attacker to track a specific device, configure it to not attempt to automatically connect or notify the user of available Wi-Fi networks.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To further reduce the number of SSIDs available to an attacker to track a specific device, configure network settings to ‘forget’ Wi-Fi networks, particularly infrequently used public Wi-Fi networks.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To greatly reduce the number of messages available to an attacker to actively track a specific device, disable Wi-Fi whenever networked services are not in use.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></LAN_&_PAN></item>
<item><Cellular><id> CEL-33</id><name>Cellular</name><category> Carrier Infrastructure</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Network Operator&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure that baseline industry recommended practices are implemented and validated&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-32</id><name>Cellular</name><category> Carrier Infrastructure</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Network Operator&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure that baseline industry recommended practices are implemented and validated&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-30</id><name>Cellular</name><category> Carrier Infrastructure</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Network Operator&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use of strong passwords&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Properly wipe and dispose of old network equipment&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Ensure that baseline industry recommended practices for information system security are implemented and validated&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-29</id><name>Cellular</name><category> Carrier Infrastructure</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Network Operator&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure that baseline industry recommended practices are implemented and validated&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id>Click </id><name>Cellular</name><category>This threat has been withdrawn, and is no longer part of the Mobile Threat Catalogue.</category><description>None</description><countermeasure>None</countermeasure></Cellular></item>
<item><Cellular><id> CEL-28</id><name>Cellular</name><category> Carrier Infrastructure</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Network Operator&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure Confidentiality Protection of S1 Interface&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Encrypt Exposed Interfaces Between Core Network Components&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To mitigate the impact of eavesdropping on an unencrypted backhaul or core network communications channel, employ over-the-top encryption services to user-plane data prior to transmission off the mobile device.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To mitigate the impact of eavesdropping on an unencrypted backhaul or core network communications channel, employ over-the-top encryption services to user-plane data prior to transmission off the mobile device.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-26</id><name>Cellular</name><category> Carrier Infrastructure</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure that a new PIN is set on voicemail accounts.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure that a new PIN is set on voicemail accounts.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-24</id><name>Cellular</name><category> USSD</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Network Operator&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Network level air interface encryption for user plane traffic.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-25</id><name>Cellular</name><category> USSD</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprises&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Choose devices without a USSD software stack.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Choose devices without a USSD software stack.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Choose devices that will not execute USSD codes without user confirmation.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Choose devices that will not execute USSD codes without user confirmation.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-23</id><name>Cellular</name><category> USSD</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Network Operator&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Network level air interface encryption for user-plane traffic.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-22</id><name>Cellular</name><category> SMS / MMS / RCS</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-21</id><name>Cellular</name><category> SMS / MMS / RCS</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-20</id><name>Cellular</name><category> SMS / MMS / RCS</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-19</id><name>Cellular</name><category> SMS / MMS / RCS</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-18</id><name>Cellular</name><category> SMS / MMS / RCS</category><description> Phone calls can be intercepted by adversaries, who can listen to the calls.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-17</id><name>Cellular</name><category> SMS / MMS / RCS</category><description> Due to certain OS bugs or vulnerabilites, specially crafted SMS messages may crash the application, launcher, or entire device.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-12</id><name>Cellular</name><category> Consumer-grade Femtocell</category><description> Intruders may impersonate a home environment perhaps with the intention of obtaining information which enables him to masquerade as a user.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id>Click </id><name>Cellular</name><category>This threat has been withdrawn, and is no longer part of the Mobile Threat Catalogue.</category><description>None</description><countermeasure>None</countermeasure></Cellular></item>
<item><Cellular><id> CEL-11</id><name>Cellular</name><category> Consumer-grade Femtocell</category><description> When a femtocell is rooted, the operator can gain further access into the data passing through it. This could allow unauthorized modification, insertion, and deletion of user traffic.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase detection of compromised devices, use small cells implemented with secure boot technologies.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Network Operator&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase detection of compromised devices, use small cells implemented with secure boot technologies.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Payment><id> PAY-5</id><name>Payment</name><category> Application-based</category><description> HCE payments do not directly leverage the security of storing cryptographic keys in the Secure Element, and therefore must securely manage cryptographic secrets and transaction details at the application level. Operating at a lower security baseline makes HCE-based payment apps attractive targets for financially-motivated attackers. The further-lowered security baseline of rooted or jail-broken mobile devices renders HCE-based apps highly vulnerable to compromise.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy EMM or containerization solutions to prohibit the use HCE-based apps on rooted or jail-broken devices.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting services for HCE-based payment apps to determine if they are trustworthy prior to deployment.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Do not use HCE-based apps on rooted or jail-broken devices.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Review additional methods for ensuring the confidentiality and integrity of mobile payments. Sources of additional guidance include the Smart Card Alliance &lt;sup id="fnref:251" role="doc-noteref"&gt;&lt;a href="#fn:251" class="footnote" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; and Mozido &lt;sup id="fnref:252" role="doc-noteref"&gt;&lt;a href="#fn:252" class="footnote" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Payment></item>
<item><Payment><id> PAY-4</id><name>Payment</name><category> In-app Purchases</category><description> Many apps offer in-app purchases. Depending on a user’s purchase settings, some of these purchases can be executed with one or two clicks, making accidental purchases probable.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;If the use of enterprise apps that support in-app purchases is authorized, consider the use of EMM/MDM solutions that offer policy settings to require user authentication for each access to the native app store.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Configure settings for native app store purchases on the device so that each purchase requires successful authentication. Alternatively, only enable the bypassing of authentication for purchases during a limited period following a successful authentication to the app store (e.g. within 15 minutes).&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Payment></item>
<item><Payment><id> PAY-3</id><name>Payment</name><category> Application-based</category><description> Vulnerabilities in mobile banking applications could lead to information leakage, theft, or modification, as well as financial loss.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Carefully weigh the risks of using 3rd party mobile banking apps over more mature technologies, such as online transactions via web browsers, which may undergo more rigorous evaluation and benefit from more rapid deployment of security updates.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of pre-paid credit card services for payment apps to limit the potential financial harm an attacker can cause by placing charges against the linked account.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Carefully weigh the risks of using 3rd party mobile banking apps over more mature technologies, such as online transactions via web browsers, which may undergo more rigorous evaluation and benefit from more rapid deployment of security updates.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of pre-paid credit card services for payment apps to limit the potential financial harm an attacker can cause by placing charges against the linked account.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Payment></item>
<item><Payment><id> PAY-2</id><name>Payment</name><category> NFC-based</category><description> Adversaries that are able to enroll credit or debit cards in mobile payment systems without the cardholder’s authorization could use the card and charge to it without the cardholder’s knowledge.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the time to detection for unauthorized enrollment in mobile payment services, use credit monitoring services to monitor credit card accounts for unauthorized changes.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker from bypassing holder-to-bank authentication to achieve card enrollment, configure payment services to use multi-factor authentication to enroll the user’s card into a mobile payment service.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;As one method of enrollment into Apple Pay requires the attacker to provide the CVV, use strong physical security mechanisms to prevent unauthorized disclosure of the CVV. See iOS Security: iOS 9.3 and Later &lt;sup id="fnref:54" role="doc-noteref"&gt;&lt;a href="#fn:54" class="footnote" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Follow general guidelines to protect credit card info: When conducting online transactions or accessing banking sites online, never access the URL from a link in an email or SMS/MMS; always type the URL directly into the location bar.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Verify the browser indicates the session is secured with HTTPS before authenticating to a banking site or making online payments to vendors.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent attackers from obtaining authentication credentials or account details for payment systems, never access banking sites from public or untrusted systems, as these may have been infected with malware designed to steal authentication credentials or credit card information.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Payment></item>
<item><Payment><id> PAY-1</id><name>Payment</name><category> NFC-based</category><description> Attackers could potentially plant malware on Point of Sale (POS) terminals to collect credit card numbers and other private information.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To mitigate the potential losses incurred as a result of successful PoS attacks, configure mobile payment services to use accounts with limited funds available for purchases, such as pre-paid cards, maximum transaction amounts, or daily spending limits.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the time to detection for compromised mobile payment information, perform regular review of statements for accounts for unauthorized transactions.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the time to detection for compromised mobile payment information, perform regular review of statements for accounts for unauthorized transactions.&lt;/p&gt;
        
    
        &lt;b&gt;Point-of-Sale Administrators&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Follow security best practices regarding the protection of point-of-sale systems. See &lt;strong&gt;Malware Targeting Point of Sale Systems&lt;/strong&gt; &lt;sup id="fnref:42" role="doc-noteref"&gt;&lt;a href="#fn:42" class="footnote" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Payment></item>
<item><Ecosystem><id> ECO-10</id><name>Ecosystem</name><category> Mobile Application Store</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To decrease the probability that unvetted apps are malicious, prohibit users from sideloading apps or downloading apps from unofficial and unauthorized app stores&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app threat intelligence data to identify malicious applications unknowingly distributed through official or unofficial application stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use features such as Apple iOS Managed Apps, Android for Work, or Samsung KNOX Workspace that provide some level of separation between personal apps and enterprise apps to mitigate the impact of malicious behaviors.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to determine if enterprise applications appear free of malicious behaviors before authorizing their installation.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Host vetted apps within a locally controlled repository of an application store, such as F-Droid &lt;sup id="fnref:158" role="doc-noteref"&gt;&lt;a href="#fn:158" class="footnote" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Payment><id> PAY-0</id><name>Payment</name><category> NFC-based</category><description> Certain NFC implementations may be vulnerable to relay attacks, which is where an attacker relays messages between two parties, similar to a proxy. This could be especially dangerous in NFC payment solutions, such as Apple Pay and Google Pay.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce opportunity for this attack, disable NFC when that feature is not in use.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To avoid this attack, do not activate - or if no longer in use, deactivate - native mobile payment features, such as Apple Pay.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent this attack, ensure native payment services (e.g. Apple Pay) are configured to require user interaction to complete any contactless payment transaction.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Payment></item>
<item><Ecosystem><id> ECO-23</id><name>Ecosystem</name><category> Mobile OS &amp; Vendor Infrastructure</category><description> By default, mobile OS only trust (and allow the installation of) apps signed by valid digital certificates they issued to developers. Further, only developers with verified identities are permitted to publish apps to their public app stores. Additionally, apps submitted for publication are evaluated for the presence of exploit code or malicious or privacy-invasive behaviors; apps that fail to meet their criteria are rejected. 3rd party app stores, however, may not apply the same standards to developers or apps, increasing the potential for malicious or potentially harmful apps to be published by them.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Ensure iOS devices are running the latest version of iOS, as iOS 9 introduces improvements to make it more difficult for users to inadvertently install non-Apple App Store apps (e.g. apps distributed using illicitly obtained enterprise certificates).&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure iOS devices are running the latest version of iOS, as iOS 9 introduces improvements to make it more difficult for users to inadvertently install non-Apple App Store apps (e.g. apps distributed using illicitly obtained enterprise certificates).&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;When the installation of apps from unofficial app stores (e.g., enterprise app stores) is necessary, use Android Verify Apps feature to identify potentially harmful apps.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To protect against arbitrary installation of 3rd party apps, when the installation of apps from unofficial app stores (e.g., enterprise app stores) is necessary, disable the installation of 3rd party apps once installation is complete.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Ecosystem><id> ECO-9</id><name>Ecosystem</name><category> Mobile OS &amp; Vendor Infrastructure</category><description> A brute-force attack parallelized across many computers could theoretically be attempted on the authentication data and cryptographic keys (passwords, etc.) stored in the cloud.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability an attacker will successfully launch a brute-force attack against cloud-based cryptographic keys, periodically change authentication credentials, digital certificates, or any cryptographic secret used to derive keys that protect access to the account or data associated with it.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;As the strength of cryptographic mechanisms generally increases relative to that of any passwords or cryptographic secrets used, prefer or enforce the use of stronger passwords (increasing length, complexity, and randomness).&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability an attacker will successfully launch a brute-force attack against cloud-based cryptographic keys, periodically change authentication credentials, digital certificates, or any cryptographic secret used to derive keys that protect access to the account or data associated with it.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;As the strength of cryptographic mechanisms generally increases relative to that of any passwords or cryptographic secrets used, prefer or enforce the use of stronger passwords (increasing length, complexity, and randomness).&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Ecosystem><id> ECO-8</id><name>Ecosystem</name><category> Mobile OS &amp; Vendor Infrastructure</category><description> Mobile data and devices are subject to different laws and regulations (e.g.,  lawful intercept, IP, data privacy) from foreign nations, such as GDPR, which must be abided by.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;As part of the app-vetting process, engage with app vendors to determine if data processed by the app may potentially be stored, temporarily or persisently, on systems located in areas that present unacceptible legal or privacy risks to enterprise data.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Before authorizing the use of mobile devices in areas outside of corporate control, understand the legal and privacy risks to enterprise data.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Ecosystem><id> ECO-7</id><name>Ecosystem</name><category> Mobile OS &amp; Vendor Infrastructure</category><description> When an application is removed from an app store, the app is not removed from devices that it is installed on. This can present a threat when the removed application is malicious, and therefore allowed to continue running on infected devices. The applications still present on mobile devices are referred to as “zombie applications”.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the time to detection, use app threat intelligence services to detect malicious or vulnerable apps installed on devices.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the risk of malicious behaviors or exploitation of vulnerable apps, deploy MDM or MAM solutions that successfully enforce policies restricting access to enterprise resources for devices running untrusted and unsupported versions of apps.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To detect malicious or vulnerable apps installed on Android devices, use the Android Verify Apps feature.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Ecosystem><id> ECO-5</id><name>Ecosystem</name><category> Mobile OS &amp; Vendor Infrastructure</category><description> If adversaries are able to exploit cloud services that can control devices remotely, they can take advantage of this to track, locate, or wipe devices (e.g. Apple’s Find My iPhone).</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker from gaining unauthorized access to sensitive functionality (e.g., locating or wiping a device associated with the account), enable two-factor or other strong authentication methods for user accounts on Google, Apple, or other device management and tracking services.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To detect unauthorized access to user accounts, use features from Google or others to periodically analyze account activity for suspicious logins.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker from gaining unauthorized access to sensitive functionality (e.g., locating or wiping a device associated with the account), enable two-factor or other strong authentication methods for user accounts on Google, Apple, or other device management and tracking services.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To detect unauthorized access to user accounts, use features from Google or others to periodically analyze account activity for suspicious logins.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Ecosystem><id> ECO-6</id><name>Ecosystem</name><category> Mobile OS &amp; Vendor Infrastructure</category><description> Network operators may, intentionally or unintentionally, push malicious applications to registered mobile devices.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Ecosystem><id> ECO-4</id><name>Ecosystem</name><category> Mobile OS &amp; Vendor Infrastructure</category><description> Remote installation capabilities of app stores can be exploited to install malicious apps on mobile devices.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker from gaining unauthorized access to remote installation functionality, enable two-factor or other strong authentication methods for user accounts on app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To detect unauthorized activity, including remote installation of apps, use features from Google or others to periodically analyze account activity for suspicious logins.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker from gaining unauthorized access to remote installation functionality, enable two-factor or other strong authentication methods for user accounts on app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To detect unauthorized activity, including remote installation of apps, use features from Google or others to periodically analyze account activity for suspicious logins.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy a combination of MDM, MAM, or container solutions and mobile devices that successfully enforce policies (e.g., whitelisting) that prevent unauthorized applications from being installed to managed areas of the device.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the time to detection of malicious applications, use app threat intelligence services to identify malicious apps installed on devices.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Ecosystem><id> ECO-3</id><name>Ecosystem</name><category> Mobile OS &amp; Vendor Infrastructure</category><description> The integrity of third-party application stores is tough to verify, and therefore tough to ensure that proper app vetting processes are in place. Not properly vetting app package files can lead to malicious applications being distributed.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Prohibit users from installing apps from unofficial and authorized app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to determine that enterprise apps appear free from malicious behaviors or vulnerabilities prior to authorizing their use.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Ecosystem><id> ECO-0</id><name>Ecosystem</name><category> Mobile OS &amp; Vendor Infrastructure</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;As knowledge of the authentication credentials for any associated account (e.g., iTunes, Google) may facilitate an attacker’s ability to initiate, access, or decrypt device backups, follow best practices for management of device account passwords.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To detect malware that may realize this threat against device backups to a trusted computer, ensure up-to-date anti-malware software is configured to regularly scan for malicious files and application behavior.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent this threat for backups to a trusted computer, configure any device backup software (e.g., iTunes) to encrypt all device backups. Furthermore, securely erase any unencrypted backups that may already exist.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent a device from being inadvertently backed up to an computer under an attacker’s control, when charging the device, do not grant trust to an untrusted computer or charging station.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker from directly initiating an unauthorized device backup to a controlled computer, ensure a device unlock code has been configured for the device and that the device is left in a locked state when being left unattended.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To further prevent an attacker from directly initiating an unauthorized device backup to a controlled computer, use strong physical security measures (e.g., lock the device into a secure container) when leaving a device directly unattended.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To detect malware that may realize this threat against device backups to a trusted computer, ensure up-to-date anti-malware software is configured to regularly scan for malicious files and application behavior.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent this threat for all backups of managed devices, deploy EMM/MDM solutions in combination with devices that successfully enforce policies to either encrypt all device backups or to block device backups entirely, as appropriate.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent this threat for enterprise data contained in backups of managed devices, deploy EMM/MDM/container solutions in combination with devices that successfully enforce policies to either encrypt all enterprise data, or block enterprise data from being included in device backups.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Ecosystem><id> ECO-1</id><name>Ecosystem</name><category> Mobile OS &amp; Vendor Infrastructure</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker from realizing this threat, disable or do not enable cloud backups for the device, which can be accomplished either through mobile OS settings or for enterprises, MDM device policy settings.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To increase the difficulty of an attacker gaining access to a cloud service account, enable increased authentication requirements, such as two-factor authentication or step-up authentication when initally accessing the account from an unknown device.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Some tools used to access cloud-based device backups leverage cryptographic tokens left on computers or devices used to legitimately access the cloud service (e.g., iCloud); if it is believed an attacker has had access to any such system, invalidate any recovered tokens they may have recovered by changing the authentication credentials for the cloud service.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;As knowledge of the authentication credentials for a cloud-based backup service may enable an attacker to gain access, protect cloud service authentication credentials from unauthorized disclosure.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker from realizing this threat, disable or do not enable cloud backups for the device, which can be accomplished either through mobile OS settings or for enterprises, MDM device policy settings.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Cellular><id> CEL-9</id><name>Cellular</name><category> Cellular Air Interface</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Original Equipment Manufacturer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure that baseline industry recommended practices are implemented and validated&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Ecosystem><id> ECO-2</id><name>Ecosystem</name><category> Mobile OS &amp; Vendor Infrastructure</category><description> If an attacker is able to compromise cloud backups, they could gain unauthorized access to private and potentially sensitive data.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent sensitive app data from unknowingly being backed-up to unauthorized or unsecure cloud services, analyze app data storage practices as part of the app vetting process prior to authorizing apps for use.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To protect the confidentiality of app data backed-up to a cloud service, prefer the use of FedRAMP-certified cloud service providers to gain assurance that app data backed-up to the cloud is strongly encrypted.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker from gaining access to app data backups via the cloud service account, enable two-factor or other strong authentication mechanisms.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To protect the confidentiality of app data backed-up to a cloud service, deploy MAM or MDM solutions in combinations with devices that successfully enforce a policy to strongly encrypt app data backed-up or synchronized to authorized cloud services.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent sensitive app data from being backed-up to an untrusted cloud service, deploy MAM or MDM solutions in combination with devices that successfully enforce a policy that prohibits app data from being synchronized or backed-up to any cloud services.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker from gaining access to app data backups via the cloud service account, enable two-factor or other strong authentication mechanisms.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Ecosystem></item>
<item><Cellular><id> CEL-8</id><name>Cellular</name><category> Cellular Air Interface</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Network Operator&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Detect, locate, and deactivate the device causing interference with the base station radio interface.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-7</id><name>Cellular</name><category> Cellular Air Interface</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Detect, locate and deactivate the device interfering with the radio interface.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Detect, locate and deactivate the device interfering with the radio interface.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Network Operator&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Detect, locate and deactivate the device interfering with the radio interface.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-6</id><name>Cellular</name><category> Cellular Air Interface</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use applications that strongly encrypt data prior to transmission of data over cellular interfaces.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-4</id><name>Cellular</name><category> Cellular Air Interface</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Original Equipment Manufacturer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Implement rogue base station detection.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use bandband firmware that does not connect to a base station unless it has been verified as a legitimate device operated as part of a trusted mobile network.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use baseband firmware that does not support deprecated communciation protocols that are more vulnerable to attack (e.g., 2G or 3G connections).&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-3</id><name>Cellular</name><category> Cellular Air Interface</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Original Equipment Manufacturer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure baseband firmware prevents the use of insecure cellular encryption algorithms&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Network Operator&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use of application layer encryption technologies&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-2</id><name>Cellular</name><category> Cellular Air Interface</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase the complexity of tracking a device over a longer term (e.g., following consecutive hand-offs), use devices that generate temporary device identities.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the amount of high-quality data an attacker can use to track a device, employ methods of rogue base station detection&lt;/p&gt;
        
    
        &lt;b&gt;Original Equipment Manufacturer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the amount of high-quality data an attacker can use to track a device, employ methods of rogue base station detection&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-5</id><name>Cellular</name><category> Cellular Air Interface</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure that the behavior of a mobile device’s chipset in these conditions is understood before relying on cellular communication in critical situations.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;In anticipation of a potential denial-of-service attack on the air interface of devices, establish contingency plans for continued operations, such as use of alternative communication channels.&lt;/p&gt;
        
    
        &lt;b&gt;Baseband Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure that the behavior of a mobile device’s chipset in these conditions is understood before relying on cellular communication in critical situations.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><Cellular><id> CEL-1</id><name>Cellular</name><category> Cellular Air Interface</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Original Equipment Manufacturer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Where possible, prefer the use of modern air interface technologies to ensure stronger cryptographic algorithms are used.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><EMM><id> EMM-9</id><name>EMM</name><category> Enterprise Mobility</category><description> Enterprise data may be synchronized to unmanaged and potentially insecure 3rd party cloud services.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To avoid this threat, use a combination of EMM/MDM solutions and devices that successfully enforce a policy that prohibits devices from synchronizing enterprise data to unauthorized cloud services.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the risk of a loss of confidentiality for enterprise data stored by an authorized cloud-based file storage or synchronization service, use a combination of EMM/MDM solutions and devices that successfully enforce a policy to encrypt any enterprise data synchronized to authorized but potentially unmanaged cloud services.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></EMM></item>
<item><EMM><id> EMM-8</id><name>EMM</name><category> Enterprise Mobility</category><description> Personal data may be intentionally or unintentionally wiped from devices, by MDM administrators or attackers.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of EMM/MDM solutions that can be configured to require dual authorization (two administrative users) to trigger device wipe functions, or at a minimum, solutions for which wiping functions involve multiple steps to complete.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To enable recovery of personal data wiped from a managed device, provide a mechanism for users to preserve personal data, such as encrypted back-ups to the native cloud service (e.g. iCloud Backup &amp;amp; Storage).&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To limit the potential loss of personal data, encourage users of enrolled devices to use authorized mechanisms for the synchronization or transfer of personal data to external systems not subject to remote wipe by enterprise EMM solutions.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Educate users regarding the risks to any personal data generated on an enrolled mobile device.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></EMM></item>
<item><Cellular><id> CEL-0</id><name>Cellular</name><category> Cellular Air Interface</category><description> </description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Original Equipment Manufacturer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use of a ciphering indicator in the interface of the mobile device to inform the user as to whether or not user data (e.g. voice calls, SMS/MMS messages, data) are being encrypted.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile OS Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use of a ciphering indicator in the interface of the mobile device to inform the user as to whether or not user data (e.g. voice calls, SMS/MMS messages, data) are being encrypted.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Network Operator&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Network level air interface encryption for user-plane traffic.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker who intercepts traffic on the unencrypted channel between a mobile device and a base station, use a mobile VPN or another third-party over-the-top encryption solution to encrypt data prior to transmission over the air interface.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker who intercepts traffic on the unencrypted channel between a mobile device and a base station, use a mobile VPN or another third-party over-the-top encryption solution to encrypt data prior to transmission over the air interface.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Cellular></item>
<item><EMM><id> EMM-10</id><name>EMM</name><category> Enterprise Mobility</category><description> Enterprises may install insecure internally developed enterprise applications onto enrolled devices via mobile application management (MAM) policy.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Prior to deployment, ensure internally developed apps are evaluated with rigor, such as by using app-vetting services to establish confidence they present minimal risk to the enterprise and device users.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of container solutions, such as Android for Work, that can prevent launching of managed apps when the device user is not authenticated to the work-centric container, thus minimizing the risk those apps present to the user outside of a work context.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;For device users with concerns about the security implications of a mandatory enterprise app during personal use of the device, restrict its permissions or if possible, temporarily disable it when operating the device in a personal context.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></EMM></item>
<item><EMM><id> EMM-6</id><name>EMM</name><category> Enterprise Mobility</category><description> An attacker enrolls a mobile device into an EMM/MDM without authorization of the device’s owner, which facilitates further attacks against the device or tracking user behavior.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase the difficulty of such an attack, consider EMM/MDM solutions that support enrollment procedures that require users to expressly opt-in to management of their device, such as by issuing one-time enrollment tokens using an out-of-band channel, or requiring enrollment be performed in person&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></EMM></item>
<item><EMM><id> EMM-5</id><name>EMM</name><category> Enterprise Mobility</category><description> Root and jailbreak detection for mobile devices is based on detecting the changes that a process by which a mobile device was compromised would have caused. For instance, creation of files or directories that do not exist on uncompromised devices. Given the diversity of mobile devices, mobile OSs, the varying methods of compromise, and the potential for an attacker to intercept and forge acceptable responses to checks for such changes, root detection continues to be an area of challenge.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase the potential that device root or jail-break is detected, deploy a variety of mechanisms capable of root or jail-break detection (e.g., on-device agents, apps that require successful boot attestation checks, manual inspection)&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the opportunity for an attacker to locally root or jail-break devices, educate users on the importance of physically securing their devices (e.g., locking it into a container) when not directly attended.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the potential a given root or jail-break attack will succeed, ensure devices are configured with a strong device unlock code.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the potential for USB-based root or jail-break exploits, do not accept prompts to grant trust when connecting to untrusted computers or charging stations.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></EMM></item>
<item><EMM><id> EMM-4</id><name>EMM</name><category> Enterprise Mobility</category><description> Insecure handling of sensitive user data (e.g. domain authentication credentials) by EMM/MDM solution.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Employ application vetting mechanisms on prospective EMM/MDM solutions to reduce the risk that sensitive data processed by the EMM/MDM is handled in an insecure fashion.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the impact of this threat, configure EMM solutions to capture the minimum set of user and device necessary to meet your broader mobile device security goals.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To limit the impact of the theft of credentials supplied to an EMM solution, configure user authentication from mobile devices to enterprise services to use one-time passwords or other replay-resistant cryptographic tokens.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></EMM></item>
<item><EMM><id> EMM-7</id><name>EMM</name><category> Enterprise Mobility</category><description> End user privacy incursions by an administrator or attacker with administrative access to the EMM/MDM administrative console (e.g., tracking device location, call logs, text messages, personal contacts, etc).</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure that the EMM/MDM console provides privacy controls to limit administrator access to privacy-sensitive information.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Configure EMM/MDM solutions to audit administrative access and activity, particularly with respects to privacy-sensitive information.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Configure EMM/MDM solutions to collect and audit only the minimal set of data necessary to meet the organization’s broader mobile device security goals.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Educate enterprise users about the privacy implications of enrolling their device into a EMM solution, such as clearly defining what data will be collected, and establishing procedures for resolving potential privacy violations.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent the potential for an attacker to gain access to highly privacy-sensitive information, such as call logs, configure EMM solutions with workflows that require multiple adminstrators to authorize access to such information prior to its release by the system.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To further minimize the potential for EMM solutions to capture privacy-sensitive data, particularly for BYOD scenarios, deploy EMM solutions that discriminate the data collected when a device is being operated in a business context versus a personal context.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></EMM></item>
<item><EMM><id> EMM-2</id><name>EMM</name><category> Enterprise Mobility</category><description> Unauthorized access to EMM/MDM administrative console, for instance by exploiting EMM/MDM vulnerabilities.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure that strong authentication methods are enabled for access to the administrative console.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent compromise of other administrator credentials from granting unauthorized access to EMM solutions, create distinct administrative credentials for EMM administrators.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Configure EMM solutions to use multi-factor authentication mechanisms for remote EMM/MDM administration sessions.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Audit administrative actions within EMM/MDM systems to enable detection of unauthorized access or actions&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Employ application vetting processes on prospective EMM/MDM solutions to reduce the risk attackers can gain unauthorized access to administrative functions.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent an attacker with unauthorized administrative access from activating sensitive features, such as remote full-wipe of devices, configure EMM solutions to with workflows that require authorization by multiple administrators prior to executing such actions.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To limit the functions available to an attacker with unauthorized administrative access, divide administrative responsibilities across distinct administrator roles or accounts.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></EMM></item>
<item><EMM><id> EMM-3</id><name>EMM</name><category> Enterprise Mobility</category><description> An adversary could impersonate the EMM/MDM server to an enrolled device to execute unauthorized actions, such as triggering a device wipe or installing a malicious MDM profile.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Design on-device agents to only accept MDM administrative commands during secure communication with a trusted EMM server (e.g. during a TLS session).&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of EMM/MDM products that use digital signatures to allow the on-device agent to perform validation of the source and the integrity of device management messages.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></EMM></item>
<item><EMM><id> EMM-1</id><name>EMM</name><category> Enterprise Mobility</category><description> A user of one organization’s EMM instance is able to access information from another organization’s EMM instance.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To avoid this threat, deploy on-premises instances of EMM solutions when possible.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To further reduce the potential impact of unauthorized access to account and device data, configure the EMM solution to capture and store the minimum amount of device, user, and activity data as required to meet your broader mobile device security goals.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To further reduce the potential impact of unauthorized access to account and device data, dissociate or anonymize the data provided to the EMM service as much as possible (e.g., map enterprise or personal identities to aliases provisioned within the EMM solution).&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the time to detection of unauthorized access to EMM administrative accounts, configure the EMM solution to audit system access and administrative actions, and establish procedures to review recent activity for indications of unauthorized access.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the potential for an attacker to activate sensitive EMM functionality, such as remote wiping of enrolled devices, configure the EMM solution to require authorization by multiple administrators before such actions will execute.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></EMM></item>
<item><EMM><id> EMM-0</id><name>EMM</name><category> Enterprise Mobility</category><description> The EMM application on the device may improperly validate X.509 certificates, which can allow attackers to perform man in the middle attacks using a crafted certificate.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;As part of the decision process when choosing to deploy an EMM solution that uses an on-device agent app, verify with the suite vendor that the agent app properly validates the digital certificate of the EMM server for any communication session.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Consider choosing on-device agent apps that have certified against the most recent NIAP protection profile for MDM agents, as this provides a measure of assurance that the agent properly validates digital certificates.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To mitigate the risk of a MiTM attack on remote agent-server communications (for on-premises deployments) due to improper certificate validation by the agent, use mobile OS-provided VPN features to first establish a secure connection to the enterprise network.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></EMM></item>
<item><Supply_Chain><id> SPC-14</id><name>Supply_Chain</name><category> Supply Chain</category><description> A counterfeit hardware component can be implanted in a system being acquired.</description><countermeasure>&lt;div class="paragraph"&gt;
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-13</id><name>Supply_Chain</name><category> Supply Chain</category><description> The design and manufacture of critical hardware at targeted suppliers can be compromised.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Employ software integrity verification checks on firmware, which can be validated against a known-good value (e.g. brute-force resistant cryptographic hash of firmware image) to detect any modification&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Obtain device measurements for comparison to normal ranges (e.g., temperature, timing, EM radiation, power consumption) to detect anomalous behavior in received components prior to production use.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-11</id><name>Supply_Chain</name><category> Supply Chain</category><description> An adversary with access to download and update system software installs a BIOS containing known vulnerabilities for future exploitation.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;System maintenance processes for highly sensitive components such as BIOS should require dual authentication to perform, reducing the likelihood a single adversary can introduce malware&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Utilize systems with boot validation and attestation to verify that only genuine boot code is executed during system start-up, halting start-up if integrity verification for any component fails&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-12</id><name>Supply_Chain</name><category> Supply Chain</category><description> An automated software update/patch downloader/installer can be corrupted to download malicious code and apply it to systems being sustained.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use fine-grained role-based access control mechanisms and user/service roles that reduce the potential that malicious installation or upgrade packages can introduce malware outside of files and directories allocated to the associated software&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Scan systems with newly integrated or updated software components for indicators of compromise prior to production use&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-10</id><name>Supply_Chain</name><category> Supply Chain</category><description> An adversary with access to 3rd party bundling processes and tools can implant malicious software in a system during the hardware-software integration phase.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Test systems that contain newly integrated or updated software components to detect incorrect function or anomalous behavior prior to production use&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Obtain direct from the software developer a list of files changed by the installation or upgrade process, and if possible, strong cryptographic hashes for file updates that are configuration-independent and should produce known values&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use fine-grained role-based access control mechanisms and user/service roles that reduce the potential that malicious installation or upgrade packages can introduce malware outside of files and directories allocated to the associated software&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Scan systems with newly integrated or updated software components for indicators of compromise prior to production use&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-8</id><name>Supply_Chain</name><category> Supply Chain</category><description> An adversary with access to supplier shipping channels during transfer of system components can substitute a counterfeit firmware component for an authentic component.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Require firmware to be digitally signed by a trusted developer and the signature verified prior to the component being integrated into a larger system&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Employ software integrity verification checks on installed firmware, which can be validated against a known-good value (e.g. brute-force resistant cryptographic hash of firmware image) to detect any modification to firmware&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Obtain device measurements for comparison to normal ranges (e.g., temperature, timing, EM radiation, power consumption) to detect anomalous behavior.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-9</id><name>Supply_Chain</name><category> Supply Chain</category><description> An adversary with access privileges within the software development environment and to associated tools, including the software unit/component test system and the software configuration management system, can hide malicious code in custom software.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Require test results to be digitally signed by both the testing component and a credential uniquely associated with the test operator to enforce non-repudiation&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Enforce strict access control and auditing for software testing systems to enable effective auditing of tests&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Design testing processes such that individuals responsible for testing do not know the destination of a tested component to prevent sabotage of a specific critical function, location, device, or organizational operation&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Design testing processes that use at least two independent testers/processes/tools and compare test results for consistency&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;For mission-critical components, randomly test the same component multiple times using different testers/processes/tools and compare test results for consistency&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-6</id><name>Supply_Chain</name><category> Supply Chain</category><description> An adversary with access to the hardware commodity procurement process can insert improperly vetted or untested malicious critical microelectronics components into the system during development.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Require that hardware components be tested for correct functionality and normal operation, and that the output of automated testing processes be digitally signed by the component that performed the test, and that the results are verified prior to acceptance of the tested component into the next stage of procurement, development, or deployment to reduce the likelihood an adversary can successfully introduce a malicious component that is not detected prior to use in production&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-7</id><name>Supply_Chain</name><category> Supply Chain</category><description> An adversary with access to production component supplier shipping channels during transfer of system components can substitute a maliciously altered hardware component for a tested and approved component.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Test systems that contain newly integrated or updated components to detect incorrect function or anomalous behavior prior to production use&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-5</id><name>Supply_Chain</name><category> Supply Chain</category><description> An adversary with access to hardware procurement, maintenance, or upgrade control can embed malware in a critical component.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Obtain device measurements for comparison to normal ranges (e.g., temperature, timing, EM radiation, power consumption) to detect anomalous behavior.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Test hardware to verify it functions as expected (e.g. known inputs yield correct outputs) prior to placing or replacing the device into the production environment&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-4</id><name>Supply_Chain</name><category> Supply Chain</category><description> A software or firmware programmer with access to the configuration control system can introduce malicious logic into software or microelectronics during coding and/or logic-bearing component development or update/maintenance.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Enforce strict access control and auditing for the configuration control system to enable effective auditing of any unauthorized changes to configuration settings.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use configuration management tools that can validate that current configuration settings meet policy requirements&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Test software and microelectronics to verify their functionality conforms to expected behavior and operates within normal tolerances (e.g. timing, temperature, power consumption, EM emissions) both after development and maintenance prior to placing or returning the component to the production environment&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-3</id><name>Supply_Chain</name><category> Supply Chain</category><description> An adversary with access to software processes and tools within the development or software support environment can insert malicious software into components during development or update/maintenance.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;App developers should ensure that development tools are obtained from a trusted source (e.g. directly from the vendor).&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Only software digitally signed by a trusted developer should be used, and the integrity of software development installation packages should be verified prior to installation&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Obtained software should be installed onto target operating systems in a known-good state (fresh install from verified installation media) in a test environment, which is then evaluated for any indicators of compromise prior to authorization of production use&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-2</id><name>Supply_Chain</name><category> Supply Chain</category><description> Adversarial supply chain distribution channel personnel (e.g., packaging, shipping, receiving, or transfer) can intercept and replace legitimate critical hardware components with malicious ones.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Perform background checks on supply chain personnel as appropriate to the level of sensitivity of the component being distributed to detect placement or the potential for or actual manipulation by an adversary&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-1</id><name>Supply_Chain</name><category> Supply Chain</category><description> A hardware or firmware component can be intercepted by an adversary while in transit between supplier and acquirer, for the purpose of substitution or manipulation.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Require firmware to be digitally signed by a trusted developer and the signature verified prior to the component being integrated into a larger system&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Employ software integrity verification checks on installed firmware, which can be validated against a known-good value (e.g. brute-force resistant cryptographic hash of firmware image) to detect any modification to firmware&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Obtain device measurements for comparison to normal ranges (e.g., temperature, timing, EM radiation, power consumption) to detect anomalous behavior.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Supply_Chain><id> SPC-0</id><name>Supply_Chain</name><category> Supply Chain</category><description> An adversary with access to open source code and knowledge of its particular use for the system being acquired can insert malicious code into open source software used for libraries.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase the complexity of this attack, prefer open source software libraries for which integrity-checking mechanisms are provided (e.g., strong cryptographic hashes of source files, digital signatures) so the authenticity of the open source library can be verified.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To increase the complexity of this attack, when possible, obtain multiple instances of the same library as hosted by various sources (e.g., FTP mirrors) from which it should be available. Then evaluate all obtained versions for consistency (e.g., compare strong hashes). If any discrepancies are detected, contact the open source software developer.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To detect compromise of the integrity checking mechanisms of a given source of open source libraries, particularly for security sensitive library functions, such as math or cryptographic libraries, contact the developer to verify the library is authentic.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability this variety of attack goes undetected at runtime, implement defensive programming. Any call to untrusted code that can impact critical functionality of the system should include checks on the output for conditions that should always be true given an assumption the library behaves as expected.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To protect open source library used by a product from modification, then if possible, package a verified authentic instance of the open source library and apply cryptographic protections (e.g., strong hashing, digital signatures) to the product to allow customers to verify the authenticity and integrity of all packaged components.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent distributing a software package that contains maliciously modified open source libraries, perform sufficient functional testing of the complete system to verify that it exhibits correct and consistent behavior.&lt;/p&gt;
        
    
        &lt;b&gt;Application Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase the complexity of this attack, prefer open source software libraries for which integrity-checking mechanisms are provided (e.g., strong cryptographic hashes of source files, digital signatures) so the authenticity of the open source library can be verified.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To increase the complexity of this attack, when possible, obtain multiple instances of the same library as hosted by various sources (e.g., FTP mirrors) from which it should be available. Then evaluate all obtained versions for consistency (e.g., compare strong hashes). If any discrepancies are detected, contact the open source software developer.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To detect compromise of the integrity checking mechanisms of a given source of open source libraries, particularly for security sensitive library functions, such as math or cryptographic libraries, contact the developer to verify the library is authentic.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability this variety of attack goes undetected at runtime, implement defensive programming. Any call to untrusted code that can impact critical functionality of the system should include checks on the output for conditions that should always be true given an assumption the library behaves as expected.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability this variety of attack goes undetected at runtime, implement defensive programming. Any call to untrusted code that can impact critical functionality of the system should include checks on the output for conditions that should always be true given an assumption the library behaves as expected.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To protect open source library used by a product from modification, then if possible, package a verified authentic instance of the open source library and apply cryptographic protections (e.g., strong hashing, digital signatures) to the product to allow customers to verify the authenticity and integrity of all packaged components.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent distributing a software package that contains maliciously modified open source libraries, perform sufficient functional testing of the complete system to verify that it exhibits correct and consistent behavior.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To increase the complexity of this attack, prefer open source software libraries for which integrity-checking mechanisms are provided (e.g., strong cryptographic hashes of source files, digital signatures) so the authenticity of the open source library can be verified.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To increase the complexity of this attack, when possible, obtain multiple instances of the same library as hosted by various sources (e.g., FTP mirrors) from which it should be available. Then evaluate all obtained versions for consistency (e.g., compare strong hashes). If any discrepancies are detected, contact the open source software developer.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To detect compromise of the integrity checking mechanisms of a given source of open source libraries, particularly for security sensitive library functions, such as math or cryptographic libraries, contact the developer to verify the library is authentic.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To protect open source library used by a product from modification, then if possible, package a verified authentic instance of the open source library and apply cryptographic protections (e.g., strong hashing, digital signatures) to the product to allow customers to verify the authenticity and integrity of all packaged components.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent distributing a software package that contains maliciously modified open source libraries, perform sufficient functional testing of the complete system to verify that it exhibits correct and consistent behavior.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent executing an application that relies upon a maliciously modified version of an open source library that is loaded dynamically at runtime (e.g., Dynamic Linked Library), perform verification of the library file prior to execution. This may involve validating hashes, verifying digital signatures, or other integrity protection or detection mechanisms on the host system.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Supply_Chain></item>
<item><Application><id> APP-40</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> A malicious application that has elevated to root privileges may be able to capture the contents of the screen buffer, in essence taking a screenshot of any foreground activity. This would allow an attacker to steal authentication credentals or gain unauthorized access to any other sensitive information displayed in the foreground. Note that this capture would not be handled like a user-initiated screenshot, and would not automatically be stored in default locations read by camera or photo browser apps (e.g. Google Photos).</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To limit the opportunity for an attacker to realize this threat following a security patch for a priviledge escalation vulnerability, ensure timely installation of mobile OS security updates.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the probability of installing a malicious application, obtain public apps from an official app store (e.g., Google Play, iTunes Store).&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;On Adroid, to prevent an attacker from remotely installing 3rd party malicious apps, ensure Security &amp;gt; Unknown Sources is turned off.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To detect malicious applications, use on-device agents that automatically perform signature- and/or behavior-based malware detection.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To limit the opportunity for an attacker to realize this threat following a security patch for a priviledge escalation vulnerability, ensure timely installation of mobile OS security updates.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent users of managed Android devices from installing applications from unknown sources, deploy EMM solutions that effectively disable the Unknown Sources feature.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To detect malicious applications, use on-device agents that automatically perform signature- and/or behavior-based malware detection.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent granting access to compromised devices, use tools or device APIs (Android SafetyNet, Samsung Knox hardware-backed remote attestation, or other applicable remote attestation technologies) to detect and block enterprise connectivity from devices that fail attestation or integrity checks.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-39</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> DDoS attacks are generally more effective with a greater number of systems an attacker can control. As many DDoS attack techniques only require a given participant to generate a small amount of network traffic, such as a spoofed DNS query used in a reflection attack, they can be easily generated from a mobile device. Given the high volume of these devices, the ability for an attacker to compromise a large number in a short time with trojan apps, and their potential to launch attacks from multiple networks (e.g., Wi-Fi and celluar connections, ) they are likely intermediary targets in DDoS campaigns.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the risk of installing apps with trojan functionality, only download apps from official app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use malware detection apps that identify malware by anomalous network activity.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use malware detection apps that identify malware by anomalous network activity.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-37</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> This threat primarily affects Android devices prior to 6.0, in which an app could abuse Accessibility Services to display false graphical interfaces that overlay another app. The displayed app can relay user input to the overlayed app, and by creating an interface that leads the user to interact with specific areas of the device screen in a certain way (e.g. pretends to be a game), the user unknowingly carries out actions in the hidden app. The impact of this threat varies according to the sensitivity of the actions the user is enticed to perform, but could potentially be any action available through the user interface of the mobile OS or installed apps.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To detect if an unauthorized app has access to restricted functionality, such as Device Administrator or Accessibility Services, use device settings to review permissions and identify any app for which that functionality is not authorized.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;On Android 6.0 and later, use device settings to revoke access to unauthorized services, such as Device Administrator or Accessibility Services. On earlier versions, permissions cannot be individually revoked; instead, the app must be uninstalled.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent this attack, use Android 5.0 and later devices, which does not allow apps to appear above any system dialogs used to grant permissions.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent this attack, use Android 5.0 and later devices, which does not allow apps to appear above any system dialogs used to grant permissions.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-38</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> While traditionally a threat against systems with greater individual system resources, the multitude of mobile devices provides an attacker who can run computations on a large number of compromised devices with an advantage in performimg other work. The computations performed on behalf of the attacker potentially cause a denial-of-service attack against the user due to the increased consumption of device resources such as battery power, computational power, network bandwidth, data usage limits, or device storage.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the risk of installing apps with trojan functionality, only download apps from official app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use malware detection apps that identify malware by anomalous energy consumption.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use malware detection apps that identify malware by anomalous energy consumption.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-36</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> Mobile devices with cellular capability must generally be registered with a cellular carrier, and many devices are sold pre-configured to operate with a given carrier so users can have a fully functional device by the end of the initial purchase and activation at a retailer. As part of the configuration, the device may come with carrier-specific apps pre-installed, which may not be removable by the user. Because these apps come pre-installed, they may also may be granted implicit permission to access device resources without explicit knowledge or consent of the device owner. Privacy violations by such pre-installed apps may be more difficult to mitigate than by user-installed apps, which can be uninstalled at any time.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To mitigate the potential for abuse or exploits by pre-installed apps, ensure that devices have the latest security updates installed.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Uninstall pre-installed apps that are not in use.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;For pre-installed apps that cannot be uninstalled, revoke access to device sensors and OS-provided services.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;For pre-installed apps that cannot be uninstalled, disable the app so that it cannot be launched.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To mitigate the potential for abuse or exploits by pre-installed apps, ensure that devices have the latest security updates installed.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM solutions to identify and block access to devices running high-risk pre-installed apps.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or container solutions to provide additional separation between trusted and untrusted pre-installed apps to mitigate the potential for pre-installed apps to violate the privacy of user actions performed within trusted apps.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-35</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> Any app that has been granted, or that has implicit OS-level permission to access the clipboard, may collect data left in the clipboard by other activity. A primary example would be using the device clipboard to copy-and-paste a password from an encrypted file to a form field.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM solutions that can restrict access to the device clipboard and similar OS-provided services to a whitelist of trusted apps.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or container solutions that can restrict communication between trusted and untrusted apps using the device clipboard, copy-and-paste, and similar OS-provided services.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use application threat intelligence services to identify apps reported to abuse access to the device clipboard or similar OS-provided services to obtain sensitive information.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to identify applications that appear to abuse access to the device clipboard or similar OS-provided services to obtain sensitive information.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to identify potentially harmful apps.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-34</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> Malicious apps built with effective code execution exploits against the mobile OS and the ability to receive remote commands can provide a resourceful attacker with considerable control over a compromised mobile device. Typical usage of remote control functionality has been using build-in sensors, such as the microphone and camera, to surveil the user. However, an attacker can potentially exercise any capability of the device.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to identify apps that appear to provide remote control to an attacker.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use application threat intelligence services to identify apps flagged as providing remote access to an attacker&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to identify potentially harmful apps.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;When installing apps, be suspicious of those requesting access to OS services or sensors that do not appear related to the functionality of the app&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-33</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> Mobile OS generally have two APIs - an external API that is available to public developers, and a private API that is restricted to the OS and built-in applications. Access control mechanisms implemented at the OS level may have vulnerabilities that allow 3rd party apps to successfully execute private API functions. Mobile OS app stores have since improved detection of a direct attempt by an app to call a private OS function.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use application threat intelligence data about potential data collection risks associated with apps installed on COPE or BYOD devices&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to identify apps that appear to abuse the OS API to gather sensitive data.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to identify apps that appear to abuse the OS API to gather sensitive data.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To avoid inadvertent detection as a harmful app, review current developer documentation for the supporting OS and always use the recommended API calls to deliver app functionality.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-32</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> Any device-wide communication channels, such as an encrypted enterprise Wi-Fi connection, may be accessible to all apps running on the device. This may allow an attacker to bypass some network defense mechanisms, such as network access control or firewalls, thereby facilitating attacks against enterprise resources from within the enterprise network.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to identify apps that perform host discovery or attempt to access hosts with internal (e.g. inside a private LAN) domains or IP addresses.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use features such as Apple iOS Managed Apps, Android for Work, or Samsung KNOX Workspace that provide some level of separation between personal apps and enterprise apps to mitigate the impact of malicious behaviors, including use of per-app/per-user VPN features, so that only enterprise-approved apps can traverse the VPN and access enterprise resources.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to identify potentially harmful.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-30</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> Malicious apps that collect and exfiltrate sensitive data have multiple communication channels available. In addition to using encryption, steganography, or other obfuscation techniques over an inspected Wi-Fi connection, apps may exfiltrate data over a cellular connection, which cannot be directly analyzed using an enterprise network security mechanism. While requiring a receiver with proximity to the device, apps can also potentially exfiltrate data over Bluetooth or NFC connections. Common use of these channels are interfaces to device peripherals or short-range data transfers, making these channels less likely to be monitored by enterprise security mechanisms.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use application threat intelligence data about potential data exfiltration risks associated with apps installed on COPE or BYOD devices&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to identify apps that appear to exfiltrate data.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to identify apps that may abuse communication channels to exfiltrate data.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-29</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> Mobile OS offer built-in and encrypted communication channels that may appear to be normal traffic or occur out-of-band (over a cellular connection), thereby evading detection by Wi-Fi-based enterprise traffic analysis tools. Google offers Google Cloud Messaging (GCM) and newly, Firebase Cloud Messaging (FCM), which provides two-way communication. Apple offers the Apple Push Notification Service (APNS), which offers one-way communication from server-to-device. Both services are commonly used within mobile apps, which makes detecting abuse of these services difficult.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to identify remote access control apps that receive commands over notification or messaging serices or other communication channels.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Disable access to notification or messaing services to apps for which such functions are not actually used.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use Verify Apps feature to identify potentially harmful apps.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-28</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> A malicious app with permission to modify files or data stored in shared locations, such as external media or contacts could potentially overwrite an original file or data object with an encoded or encrypted one. The attacker could then demand some form of payment in exchange for returning randomed data to a usable state.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use application threat intelligence data about apps that maliciously encrypt user data.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to identify apps that maliciously encrypt user data.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to identify potentially harmful apps.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-31</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> 3rd party apps may duplicate the appearance and interface of a legitimate app, such as a banking app, to trick the user into supplying authentication credentials or other sensitive information intended for the app being spoofed. This threat was facilitated on Android devices before 5.0, as a malicious app could determine if a target app was running in the foreground, then initiate an activity to gain focus and intercept credential entry by the user.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of devices that support Android 5.0 and later, in which ActivityManager.getRunningTasks() has been modified to stop leaking information about the current foreground activity, increasing the difficulty of malicious apps being able to perform a user interface spoofing attack&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to identify apps that attempt to spoof the interface to other apps or common web sites, such as banking sites.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of devices that support Android 5.0 and later, in which ActivityManager.getRunningTasks() has been modified to stop leaking information about the current foreground activity, increasing the difficulty of malicious apps being able to perform a user interface spoofing attack&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to identify potentially harmful apps.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-27</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> Malicious code that has achieved privilege escalation to the kernel or root user may achieve persistence by modifying memory locations reserved for use by the bootloader, mobile OS, or kernel to force the execution of malicious code following a device reboot or integrated factory reset.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use application threat intelligence data about apps that may achieve malicious persistence&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to identify apps that exploit the underlying OS to achieve malicious persistence.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MDM solutions that require successful boot attestation prior to granting access to enterprise resources.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to identify potentially harmful apps.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To avoid executing apps that process sensitve information while low-level malware is present on the device, perform device integrity checking within enterprise applications, such as use of Android SafetyNet, Samsung Knox hardware-backed remote attestation, or other applicable remote attestation technologies device integrity attestation API&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-26</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> Malicious applications that achieve privilege escalation in the context of the mobile OS, driver, peripheral firmware, or the kernel, may further achieve unauthorized access or modification of app, user, or system data, process memory, or execute other unauthorized actions on the device.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use application threat intelligence data to identify apps that exploit the OS to achieve privilege escalation.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to identify apps that exploit the OS to achieve privilege escalation.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To limit the opportunity for malicious apps to exploit known vulnerabilities, ensure timely installation of security updates.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use the Android Verify Apps feature to identify potentially harmful apps.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To limit the opportunity for malicious apps to exploit known vulnerabilities, ensure timely installation of security updates.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-24</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> Apps that have been granted permission to Location Services or similar OS-provided services can abuse this permission to report device outside of what may be needed to support legitimate app functionality (e.g. navigation). Device location data may facilitate further attacks such as geo-physical or behavioral tracking of the user.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use application threat intelligence data about potential abuse of location services associated with apps installed on COPE or BYOD devices&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to identify apps that may abuse location services.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;When apps that require location services (e.g., map services) are not in use, use OS-provided settings to globally disable access to location services&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;When using untrusted apps that require locations services (e.g., map services), use OS-provided settings to revoke access to location services once the app is no longer in use.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-25</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> Rooting or jail-breaking an Android or iOS device significantly degrades its security architecture by enabling arbitrary apps to execute commands as root. A malicious app could, under an assumption some percentage of devices have been rooted or jail-broken, attempt to abuse implicit root privilege escalation.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;For the lowest risk tolerance, deploy MDM or containerization solutions with policies that can detect and block access to enterprise resources by rooted/jail-broken devices.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use application threat intelligence data to detect potential abuse of rooted/jail-broken BYOD devices&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to identify harmful apps.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To avoid launching applications that handle sensitive information on a rooted/jail-broken device, perform device integrity checking, such as using Android SafetyNet, Samsung Knox hardware-backed remote attestation, or other applicable remote attestation technologies device integrity attestation API&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-23</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> Device management features built into Android and iOS allow organizations to develop apps designed to enforce organizational mobile device security policies. Some policy options could be abused by a malicious app to block access to desired functionality (e.g. camera access) until a ransom is paid. Prior to Android 7.0, the Device Administrator role could forcefully set a device unlock code, which could be used to hold the entire device for ransom.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use application threat intelligence data about potential abuse of Administrator privileges associated with apps installed on COPE or BYOD devices&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of devices that support Android 7.0 and later and ensuring a PIN is set. Starting in 7.0, device administrator apps can no longer change the device PIN/password when one is already set, as described in https://developer.android.com/preview/behavior-changes.html and at 44:20 of https://www.youtube.com/watch?v=XZzLjllizYs&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to identify apps that may abuse Administrator privileges.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of devices that support Android 7.0 and later and ensuring a PIN is set. Starting in 7.0, device administrator apps can no longer change the device PIN/password when one is already set, as described in https://developer.android.com/preview/behavior-changes.html and at 44:20 of https://www.youtube.com/watch?v=XZzLjllizYs&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-22</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> The Device Administrator permission in Android is designed to allow enterprises to develop apps that can manage settings on users devices to enforce compliance with the enterprise mobile device security policy. Prior to Android 6.0, the Device Administrator role could enforce a policy that disabled uninstallation of an app. Malicious applications could abuse this behavior to gain persistence on the device. Since Android 6.0, users can always unregister a given app as a Device Administrator, which disables all associated policies and would restore the ability to uninstall the malicious app.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure Android devices are running a recent version of the operating system. As described at 44:20 in the Google I/O 2016 “What’s new in Android security” (https://www.youtube.com/watch?v=XZzLjllizYs), enhancements were made in Android M or N to ensure that all device admin apps can be uninstalled.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure Android devices are running a recent version of the operating system. As described at 44:20 in the Google I/O 2016 “What’s new in Android security” (https://www.youtube.com/watch?v=XZzLjllizYs), enhancements were made in Android M or N to ensure that all device admin apps can be uninstalled.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-21</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> App vetting methods designed to detect malicious code are complicated by various code obfuscation techniques such as sandbox detection, encryption, and dead code (malicious functions unreachable by normal program execution). As a result, a malicious app subjected to app vetting may appear free of harmful code and safe to publish or distribute.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to identify untrusted apps that contain encrypted or obfuscated code.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use application threat intelligence data about apps that contain encrypted or obfuscated code&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to identify potentially harmful apps.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To mitigate your app being detected as potentially malicious, do not arbitrarily encrypt or obfuscate code.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-20</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> Mobile apps may evade app vetting by downloading and executing malicious app code after installation. On Android, external code can be loaded using the OS-provided API. On iOS, the ability to modify app code is a consequence of the Objective C runtime environment that apps execute within, which permits method definitions to be modified at runtime. As the malicious code would not be present when the app was submitted for review, it may evade detection as a malicious application.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use application threat intelligence data about potential abuse of dynamic code execution associated with apps installed on COPE or BYOD devices&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to identify potentially harmful apps.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-19</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> Starting with Android 6.0, access to the microphone or camera is considered a dangerous permission and each recording attempt must be granted permission by the user at runtime. Similarly, the iOS security model only allows apps granted permission by the user to access the camera or microphone while running in the foreground. Therefore, an app operating in these or newer environments cannot abuse public APIs to initiate a recording outside the user’s knowledge.
This threat can still be realized following successful exploits of OS vulnerabilities that ultimately provide a malicious app with unauthorized access to those resources (e.g. bypass access control on APIs or direct access to the hardware).</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MDM solutions that support geo-fencing of BYOD devices with policies that disable device sensors (e.g., camera, microphone) when the device is being operated in sensitive locations.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MDM solutions for COPE devices that support disabling device sensors (e.g. camera, microphone) that can be used for recording of nearby activity.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM solutions for COPE devices that support selectively enabling device sensors (e.g. camera, microphone) for a whitelist of trusted enterprise applications that require those functionalities.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use application threat intelligence data about potential abuse of access to device sensors associated with apps installed on COPE or BYOD devices&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to identify apps that may abuse access to sensor data to record nearby activity.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce risks of using the app, only request access to the minimal set of shared data stores (e.g., contacts, calendar), OS services (e.g. location services), and device sensors (e.g. camera, microphone) necessary for the app to provide functionality.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id>None</id><name>Application</name><category>This threat has been merged with </category><description>None</description><countermeasure>None</countermeasure></Application></item>
<item><Application><id> APP-17</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> Prior to Android 4.4, apps granted permissions to SMS messaging functionality had the ability to listen for and receive incoming SMS messages. If the app was registered as the highest priority listener for messages, it could silently (without notice to the user) intercept, read, and dispose of messages intended for other apps. One serious abuse of this was the interception of one-time passwords (OTP) used for two-factor authentication (2FA) sent over SMS. Newer versions of Android do not permit apps with permission to access SMS messaging to receive or dispose of SMS messages directly. Unlike Android, the iOS security model does not permit apps with access to SMS messaging. Malicious apps may still realize this threat following exploitation of OS vulnerabilities that bypass access control on private SMS messaging APIs or achieve arbitrary code execution.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Perform application vetting to identify inappropriate behaviors by apps including interception of SMS messages.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Avoid the use of applications that rely on SMS messages for 2-factor authentication.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;When stronger 2-factor authentication methods are available, such as FIDO U2F tokens, educate enterprise users to avoid the use of SMS messages for configuring 2-factor authentication for enterprise applications.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use application threat intelligence data to identify apps that increase risks associated with SMS message interception.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to identify apps that may intercept SMS messages.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Avoid the use of applications that rely on SMS messages for 2-factor authentication.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Avoid the use of SMS messages for 2-factor authentication.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-16</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> SMS messages were initially charged to a cellular subscriber’s account on a per-message basis. However, some services use SMS messaging as a subscription or one-time payment method. The charge associated with the SMS message is placed on the cellular subscriber’s account and collected along with standard cellular service fees. This model enables malicious app developers to potentially collude with premium SMS service providers to commit fraud against users. The subscriber is held responsible for the fraudulent charges by the cellular carrier. Early forms of this attack exploited the weak OS permission models that allowed apps to send premium SMS messages without user interaction, which prompted improvement by affected OS developers. Contemporary variants must instead exploit vulnerabilities in the mobile OS to send messages without user knowledge and consent.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure Android devices are running a recent version of Android, as starting in Android 4.2, user confirmation is needed before apps can send premium SMSs (source: https://source.android.com/security/enhancements/enhancements42.html).&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Perform application vetting to identify SMS fraud by apps including permission requests made by the apps.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use application threat intelligence data about potential SMS fraud risks associated with apps installed on devices.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Ensure Android devices are running a recent version of Android, as starting in Android 4.2, user confirmation is needed before apps can send premium SMSs (source: https://source.android.com/security/enhancements/enhancements42.html).&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to apps that attempt to abuse SMS functionality.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id>None</id><name>Application</name><category>This threat has been moved to </category><description>None</description><countermeasure>None</countermeasure></Application></item>
<item><Application><id> APP-14</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> Like well-behaved apps, a trojan app offers some functionality to the user, though a trojan also includes hidden functionality that is malicious or otherwise undesirable. One technique for deploying trojan functionality is to obtain the install packages for a legitimate app, decompile/disassemble it, introduce the trojan, and then generate a new install package. The app will appear to a user to be the legitimate app. Distribution of trojans is commonly achieved by submission to open 3rd party app stores or social engineering attacks claiming to offer users the app with incentives (lower cost, free, extras unlocked, etc.).</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the sideloading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use application threat intelligence data about potentially harmful apps installed on COPE or BYOD devices&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to identify potentially harmful apps.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the ease of an attacker to abuse existing app functionality, only request access to the minimal set of shared data stores (e.g., contacts, calendar), OS services (e.g. location services), and device sensors (e.g. camera, microphone) necessary for the app to provide functionality.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-11</id><name>Application</name><category> Vulnerable Applications</category><description> Applications often have a need to dynamically incorporate input into sensitive operations such as access control decisions (e.g. authentication) or database operations. However, if a sensitive operation acts on untrusted and unsafe input, it may not function as intended. An attacker with control over such input can potentialy craft it to control application or system behavior. Prime examples of exploits include buffer overflow and code injection attacks. Therefore, it is important to evaluate untrusted input for safeness in the context in which it will be processed prior to accepting it.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;When input should match one of a set of known and comparable options, use whitelisting to ensure the input is safe before applying it to security logic.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;When whitelisting is not possible, use vetted data sanitization libraries to verify the input appears syntactically safe prior to applying it to security logic.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Always use fail-safe security logic in apps; if input cannot be verified to be safe (versus not identified as unsafe), reject the input and do not perform the security action.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-13</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> Apps may be granted permission, by the user or by default, access common data stores provided by the mobile OS. Common stores are contacts lists, call history, calendar, notes, or app clipboard. When apps used in differing personal and enterprise contexts have access to these stores, they may contain co-mingled personal and enterprise data. A malicious or invasive app granted access to these locations can collect any sensitive data stored there, likely with an intent to exfiltrate it to the attacker.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the sideloading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Perform application vetting to identify privacy-invasive behaviors by apps.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use application threat intelligence data about potential privacy risks associated with apps installed on devices&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use features such as Apple iOS Managed Apps, Android for Work, or Samsung KNOX Workspace that provide additional separation between personal apps and enterprise apps to mitigate the leakage of private information between work/personal contexts.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to identify apps that may violate privacy.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Only request access to the minimal set of shared data stores (e.g., contacts, calendar), OS services (e.g. location services), and device sensors (e.g. camera, microphone) necessary for the app to provide functionality.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Only collect the minimal set of device or user data necessary for the app to provide functionality.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-12</id><name>Application</name><category> Malicious or privacy-invasive application</category><description> Persistent information that can be used to identify or characterize a specific mobile device in one or more contexts, such as IMEI, IMSI, MAC address, phone number, mobile OS, or installed apps, may be collected by a malicious or privacy-invasive app to facilitate future attacks. These values, particularly in combination, greatly increase potential for geo-physical or behavioral tracking, device fingerprinting, and impersonation attacks against the device or its user.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the sideloading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Perform application vetting to identify inappropriate behaviors by apps including permission requests made by the apps&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use application threat intelligence data about potential data collection risks associated with apps installed on devices&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use Android Verify Apps feature to identify apps that may abuse permissions to perform data collection.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-10</id><name>Application</name><category> Vulnerable Applications</category><description> While still supported by many systems, cryptographic algorithms and ciphers proven to be weak or broken should not be used to protect sensitive data. Weak algorithm/ciphers are those that have been deprecated following advancements in processing speeds and distributed processessing that have made brute-force attacks against them feasible. Broken algorithms, such as MD5, have known vulnerabilities an attacker can exploit to defeat one or more of its security properties. Similarly, the use of novel (e.g. home-grown) cryptographic algorithms should also be avoided. Novel algorithms may not have yet undergone sufficient scrutiny by the cryptologic community at large, and may possess flaws that if discovered, present an attacker with a path of lesser resistance to achieving unauthorized access to any data these cryptographic mechanisms were designed to protect.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Strictly avoid the use of hard-coded cryptographic keys in application source code.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Explicitly overwrite variables containing cryptographic keys or other secrets following each use to prevent unauthorized disclosure of the secret if that memory location is subsequently accessed by untrusted code.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use each cryptographic key for a single purpose to limit the impact of key compromise.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Strictly avoid the use of ‘broken’, weak, or novel algorithms (those that have not undergone extensive evaluation by the cryptographic community at large) to protect long-term secrets.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of cryptographic functions provided by the mobile operating system and where possible, leverage hardware-backed cryptographic and secure storage services.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Additionally, application developers are strongly encouraged to familiarize themselves with best practices for cryptography and general key management, and to integrate that knowledge early in the application design process. See NIST SP 800-57 Part 1 Revision 4, Recommendation for Key Management, Part 1 General&lt;sup id="fnref:244" role="doc-noteref"&gt;&lt;a href="#fn:244" class="footnote" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;For Android developers, review guidance on the proper use of the Android Keystore System.&lt;sup id="fnref:245" role="doc-noteref"&gt;&lt;a href="#fn:245" class="footnote" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;For iOS developers, review guidance on the proper use of the iOS Keychain.&lt;sup id="fnref:246" role="doc-noteref"&gt;&lt;a href="#fn:246" class="footnote" rel="footnote"&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use app vetting tools/services to detect the misuse of cryptography in mobile apps.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-9</id><name>Application</name><category> Vulnerable Applications</category><description> If an app exchanges data with a compromised back-end server, it may be vulnerable to exploitation from what may be treated as a trusted system. This may provide an attacker with unauthorized access to sensitive user data or  remote control over app behavior or content.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Follow best practices for server security, for example as described in https://www.owasp.org/index.php/Mobile_Top_10_2014-M1&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-8</id><name>Application</name><category> Vulnerable Applications</category><description> A mobile app that implement a WebView, which allows it to render and potentially perform actions available in a web page, may contain vulnerabilities to common browser-based attacks, such as cross-site request forgery, cross-site scripting, and injection of malicious dynamic content (e.g., JavaScript). Further, exploits delivered over web pages may allow remote exploitation of vulnerabilities in other app components, thereby gaining access to data or functionality outside the context of the vulnerable WebView.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to identify vulnerable applications&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use a proxy or VPN for connections to decrease the chance of success of a man-in-the-middle attack.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Always use https URLs for WebView content.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Avoid enabling the WebView JavaScript bridge (with addJavascriptInterface) unless explicitly needed.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-7</id><name>Application</name><category> Vulnerable Applications</category><description> Android apps can be designed to share data with other apps through a variety of mechanisms such as broadcast receivers, services, intents, and content providers. Some of these mechanisms permit the app developer to grant broader permissions to untrusted apps than intended. As a result, a malicious app may gain unauthorized access to sensitive functionality or data. The malicious app may further take advantage of the weak permission to exploit other vulnerabilities in the receiving app by sending it crafted input.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to identify apps that expose functionality to untrusted apps.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use personal/enterprise app separation features (e.g. Android for Work or Samsung KNOX Workspace) so that vulnerabilities in an enterprise app cannot be exploited by a personal app or vice versa.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-6</id><name>Application</name><category> Vulnerable Applications</category><description> A mobile app may not directly contain vulnerabilities in its code, but may make calls to a third-party library that does contain vulnerabilities that are exploitable by a remote attacker.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to identify apps that use vulnerable libraries.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-5</id><name>Application</name><category> Vulnerable Applications</category><description> A URL can refer to a broad spectrum of resource types, some of which can contain code that is executed by the process that requests it. The malicious code may automatically function in the target context, such as a script that is allowed to execute in a web browser, or it may require the presence of a vulnerability in the app that downloaded it that is exploited during an attempt to process the content, such as a buffer overflow attack.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the side-loading of apps, which may bypass security checks on the app.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Deploy MAM or MDM solutions with policies that prohibit the installation of apps from 3rd party (unofficial) app stores.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the potential for drive-by downloads or similar exploits, ensure the latest security updates for the mobile OS are installed.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use built-in browser features or third-party products to identify and avoid known malicious web pages.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use a proxy or VPN for all web traffic and identify and block connections to known malicious web pages.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Educate enterprise users about safe browsing practices.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use anti-malware device agents to detect malicious applications inadvertently installed on the device.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the potential for drive-by downloads or similar exploits, ensure the latest security updates for the mobile OS are installed.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use built-in browser features or third-party products to identify and avoid known malicious web pages.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use anti-malware device agents to detect malicious applications inadvertently installed on the device.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Regularly use Verify Apps feature to identify potentially harmful applications.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-3</id><name>Application</name><category> Vulnerable Applications</category><description> Mobile application developers may unintentionally expose sensitive information by storing it in system logs designed to troubleshoot problems. An example would be logging the username and password for a failed user-to-app authentication attempt. An attacker with access to the system log would gain unauthorized access to the information.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Avoid logging sensitive data in an unencrypted state, even to files internal to the app, as these files may be exposed in backups or direct access to the device’s file system.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use the Compatibility Test Suite, which checks for the presence of potentially sensitive information in the system logs; See https://source.android.com/security/overview/implement.html.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of devices that support Android 4.1 or later, in which apps can no longer access the system log (other than reading log entries added by the app itself).&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to identify apps that store sensitive information in system logs or other unsecure storage locations.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of devices that support Android 4.1 or later, in which apps can no longer access the system log (other than reading log entries added by the app itself).&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-4</id><name>Application</name><category> Vulnerable Applications</category><description> Organizations or individual users may develop and rely upon specific apps or devices to complete necessary work. Knowledge of a serious vulnerability affecting such an app or device increases the risk associated with using it to accomplish that work. However, the impact of being unable to complete the work as a result of abstaining from use of the app or device, may be unacceptable.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use iOS and Android runtime permission features to remove risky permissions (e.g. GPS access, contact list access, etc.) from unsupported apps or apps with known vulnerabilities.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Uninstall vulnerable apps from the device. Once a patched version is available for download, redownload and install the app.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use iOS and Android runtime permission features to remove risky permissions (e.g. GPS access, contact list access, etc.) from unsupported apps or apps with known vulnerabilities.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use MAM solutions to detect vulnerable apps and prevent access to enterprise resources while the app is installed.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use MAM solutions to forcefully disable vulnerable apps until a patch is available and installed.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Use MAM solutions to temporarily revoke access to sensitive device sensors or OS-provided services.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-2</id><name>Application</name><category> Vulnerable Applications</category><description> Mobile OS APIs allow apps to share data with other apps, either by exposing specific services to other apps (e.g. Android intents) or by storing it to locations accessible to other apps. Sensitive information stored in commonly-accessible files/locations (e.g. OS-managed contacts list) or openly accessible through intents may be read or potentially modified by apps untrusted by the developer, which may lead to a loss of confidentiality, integrity, or availability of that data.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use app-vetting tools or services to identify insecure storage of sensitive data.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of devices that support Android 7.0 and later, which enables app-level encryption in addition to block-level encryption.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Consider the use of devices that support Android 7.0 and later, which enables app-level encryption in addition to block-level encryption.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-1</id><name>Application</name><category> Vulnerable Applications</category><description> Apps that exchange information with a back-end server should strongly authenticate the server before attemtping to establish a secure connection. If the authentication mechanism used by the app is weak, such as not validating a server certificate, an attacker can readily impersonate the back-end server to the app and achieve a man-in-the-middle (MITM) attack. This would provide an attacker with unauthorized access to all unencrypted transmitted data, including modification of data-in-transit. A successful MITM greatly facilitates further attacks against the client app, the back-end server, and all parties of a compromised session.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use fail-safe logic when establishing a connection to the back-end server; if server certificate validation fails, do not continue to negotiate a secure session or fall back to an unencrypted communication protocol, and warn the app user.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;On Android devices, use the Android Network Security Policy feature, Certificate Pinning.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To reduce the impact of a successful MiTM attack on your application, consider the use of public key cryptography to protect sensitive data destined for back-end servers prior to transmission off the device.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;App vetting tools/services or pen testing to detect MiTM vulnerabilities in mobile apps.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Application><id> APP-0</id><name>Application</name><category> Vulnerable Applications</category><description> Transmission of app or device data unencrypted allows any attacker with access to the physical media channel (e.g. proximity to wireless radios) to intercept that data. Even if the data is not directly sensitive, it may in combination with other data, allow an attacker in infer sensitive information or conduct other attacks against the user or device (e.g. geo-physical tracking, social engineering, phishing, watering-hole attacks).</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To use HTTPS for web servers that support both HTTP and HTTPS, prepend URLs entered into the browser location bar with ‘https://’.&lt;/p&gt;
        
    
        &lt;b&gt;Mobile App Developer&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Implement secure communications in apps. On iOS, use the App Transport Security feature. On Android, opt out of the use of Cleartext traffic.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Use app vetting tools/services that can detect the use of cleartext traffic in mobile apps before deployment within your organization.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To protect the confidentiality of enterprise data against passive interception, particularly when mobile devices may be connected to public networks (e.g. coffee shop Wi-Fi), deploy mobile VPN technologies to encapsulate potentially clear-text network traffic with a layer of strong encryption.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Application></item>
<item><Physical_Access><id> PHY-1</id><name>Physical_Access</name><category> Physical Access</category><description> Malicious charging stations can be present in any public location. The adversary oprating the charging station could run exploits or attempt to install malware over the device connection.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;Avoid use of public charging stations, which may house malicious chargers.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Ensure Android USB debugging is disabled unless explicitly needed (e.g. by app developers).&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;Do not accept any prompt to trust an untrusted or public USB charger.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Physical_Access></item>
<item><Physical_Access><id> PHY-0</id><name>Physical_Access</name><category> Physical Access</category><description> Lost or stolen mobile devices gives an adversary unhindered access to the device, and if there’s an insecure or no PIN in place, access to the data on the device as well.</description><countermeasure>&lt;div class="paragraph"&gt;
    
        &lt;b&gt;Mobile Device User&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To prevent accidental loss of a device, pair it with another device, such as a smart watch, capable of alerting the user to separation from the device, or quickly triggering mechanisms to help the user locate it.&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To prevent theft of a device, closely attend the device at all times, and if leaving it unattended, apply strong physical security measures (e.g., lock it into a secure container).&lt;/p&gt;
        
            &lt;p class="countermeasure"&gt;To mitigate the impact of a lost or stolen device in the possession of an attacker, use remote lock, activation lock, locate, or wipe capabilities as deemed appropriate based on the sensitivity of data stored on or capabilities of the device.&lt;/p&gt;
        
    
        &lt;b&gt;Enterprise&lt;/b&gt;
        
            &lt;p class="countermeasure"&gt;To mitigate the impact of a lost or stolen device in the possession of an attacker, use remote lock, activation lock, locate, or wipe capabilities as deemed appropriate based on the sensitivity of data stored on or capabilities of the device.&lt;/p&gt;
        
    
&lt;/div&gt;</countermeasure></Physical_Access></item>
</items>